import * as $protobuf from "protobufjs";
/** Namespace Authentication. */
export namespace Authentication {

    /** SupportedLanguage enum. */
    enum SupportedLanguage {
        ENGLISH = 0,
        ARABIC = 1,
        BRITISH = 2,
        CHINESE = 3,
        CHINESE_HONG_KONG = 4,
        CHINESE_TAIWAN = 5,
        DUTCH = 6,
        FRENCH = 7,
        GERMAN = 8,
        GREEK = 9,
        HEBREW = 10,
        ITALIAN = 11,
        JAPANESE = 12,
        KOREAN = 13,
        POLISH = 14,
        PORTUGUESE = 15,
        PORTUGUESE_BRAZIL = 16,
        ROMANIAN = 17,
        RUSSIAN = 18,
        SLOVAK = 19,
        SPANISH = 20
    }

    /** LoginType enum. */
    enum LoginType {
        NORMAL = 0,
        SSO = 1,
        BIO = 2,
        ALTERNATE = 3,
        OFFLINE = 4,
        FORGOT_PASSWORD = 5
    }

    /** DeviceStatus enum. */
    enum DeviceStatus {
        DEVICE_NEEDS_APPROVAL = 0,
        DEVICE_OK = 1,
        DEVICE_DISABLED_BY_USER = 2,
        DEVICE_LOCKED_BY_ADMIN = 3
    }

    /** LicenseStatus enum. */
    enum LicenseStatus {
        OTHER = 0,
        ACTIVE = 1,
        EXPIRED = 2,
        DISABLED = 3
    }

    /** AccountType enum. */
    enum AccountType {
        CONSUMER = 0,
        FAMILY = 1,
        ENTERPRISE = 2
    }

    /** SessionTokenType enum. */
    enum SessionTokenType {
        NO_RESTRICTION = 0,
        ACCOUNT_RECOVERY = 1,
        SHARE_ACCOUNT = 2,
        PURCHASE = 3,
        RESTRICT = 4,
        ACCEPT_INVITE = 5,
        SUPPORT_SERVER = 6,
        ENTERPRISE_CREATION = 7,
        EXPIRED_BUT_ALLOWED_TO_SYNC = 8
    }

    /** Version enum. */
    enum Version {
        invalid_version = 0,
        default_version = 1,
        second_version = 2
    }

    /** MasterPasswordReentryActionType enum. */
    enum MasterPasswordReentryActionType {
        UNMASK = 0,
        COPY = 1
    }

    /** Properties of an ApiRequest. */
    interface IApiRequest {

        /** ApiRequest encryptedTransmissionKey */
        encryptedTransmissionKey?: (Uint8Array|null);

        /** ApiRequest publicKeyId */
        publicKeyId?: (number|null);

        /** ApiRequest locale */
        locale?: (string|null);

        /** ApiRequest encryptedPayload */
        encryptedPayload?: (Uint8Array|null);

        /** ApiRequest encryptionType */
        encryptionType?: (number|null);

        /** ApiRequest recaptcha */
        recaptcha?: (string|null);

        /** ApiRequest subEnvironment */
        subEnvironment?: (string|null);
    }

    /** Represents an ApiRequest. */
    class ApiRequest implements IApiRequest {

        /**
         * Constructs a new ApiRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IApiRequest);

        /** ApiRequest encryptedTransmissionKey. */
        public encryptedTransmissionKey: Uint8Array;

        /** ApiRequest publicKeyId. */
        public publicKeyId: number;

        /** ApiRequest locale. */
        public locale: string;

        /** ApiRequest encryptedPayload. */
        public encryptedPayload: Uint8Array;

        /** ApiRequest encryptionType. */
        public encryptionType: number;

        /** ApiRequest recaptcha. */
        public recaptcha: string;

        /** ApiRequest subEnvironment. */
        public subEnvironment: string;

        /**
         * Creates a new ApiRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApiRequest instance
         */
        public static create(properties?: Authentication.IApiRequest): Authentication.ApiRequest;

        /**
         * Encodes the specified ApiRequest message. Does not implicitly {@link Authentication.ApiRequest.verify|verify} messages.
         * @param message ApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ApiRequest message, length delimited. Does not implicitly {@link Authentication.ApiRequest.verify|verify} messages.
         * @param message ApiRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IApiRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ApiRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ApiRequest;

        /**
         * Decodes an ApiRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApiRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ApiRequest;

        /**
         * Verifies an ApiRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ApiRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ApiRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ApiRequest;

        /**
         * Creates a plain object from an ApiRequest message. Also converts values to other types if specified.
         * @param message ApiRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ApiRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ApiRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ApiRequestPayload. */
    interface IApiRequestPayload {

        /** ApiRequestPayload payload */
        payload?: (Uint8Array|null);

        /** ApiRequestPayload encryptedSessionToken */
        encryptedSessionToken?: (Uint8Array|null);

        /** ApiRequestPayload timeToken */
        timeToken?: (Uint8Array|null);

        /** ApiRequestPayload apiVersion */
        apiVersion?: (number|null);
    }

    /** Represents an ApiRequestPayload. */
    class ApiRequestPayload implements IApiRequestPayload {

        /**
         * Constructs a new ApiRequestPayload.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IApiRequestPayload);

        /** ApiRequestPayload payload. */
        public payload: Uint8Array;

        /** ApiRequestPayload encryptedSessionToken. */
        public encryptedSessionToken: Uint8Array;

        /** ApiRequestPayload timeToken. */
        public timeToken: Uint8Array;

        /** ApiRequestPayload apiVersion. */
        public apiVersion: number;

        /**
         * Creates a new ApiRequestPayload instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApiRequestPayload instance
         */
        public static create(properties?: Authentication.IApiRequestPayload): Authentication.ApiRequestPayload;

        /**
         * Encodes the specified ApiRequestPayload message. Does not implicitly {@link Authentication.ApiRequestPayload.verify|verify} messages.
         * @param message ApiRequestPayload message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IApiRequestPayload, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ApiRequestPayload message, length delimited. Does not implicitly {@link Authentication.ApiRequestPayload.verify|verify} messages.
         * @param message ApiRequestPayload message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IApiRequestPayload, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ApiRequestPayload message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApiRequestPayload
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ApiRequestPayload;

        /**
         * Decodes an ApiRequestPayload message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApiRequestPayload
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ApiRequestPayload;

        /**
         * Verifies an ApiRequestPayload message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ApiRequestPayload message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ApiRequestPayload
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ApiRequestPayload;

        /**
         * Creates a plain object from an ApiRequestPayload message. Also converts values to other types if specified.
         * @param message ApiRequestPayload
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ApiRequestPayload, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ApiRequestPayload to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Transform. */
    interface ITransform {

        /** Transform key */
        key?: (Uint8Array|null);

        /** Transform encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);
    }

    /** Represents a Transform. */
    class Transform implements ITransform {

        /**
         * Constructs a new Transform.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ITransform);

        /** Transform key. */
        public key: Uint8Array;

        /** Transform encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /**
         * Creates a new Transform instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Transform instance
         */
        public static create(properties?: Authentication.ITransform): Authentication.Transform;

        /**
         * Encodes the specified Transform message. Does not implicitly {@link Authentication.Transform.verify|verify} messages.
         * @param message Transform message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ITransform, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Transform message, length delimited. Does not implicitly {@link Authentication.Transform.verify|verify} messages.
         * @param message Transform message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ITransform, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Transform message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Transform
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.Transform;

        /**
         * Decodes a Transform message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Transform
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.Transform;

        /**
         * Verifies a Transform message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Transform message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Transform
         */
        public static fromObject(object: { [k: string]: any }): Authentication.Transform;

        /**
         * Creates a plain object from a Transform message. Also converts values to other types if specified.
         * @param message Transform
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.Transform, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Transform to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeviceRequest. */
    interface IDeviceRequest {

        /** DeviceRequest clientVersion */
        clientVersion?: (string|null);

        /** DeviceRequest deviceName */
        deviceName?: (string|null);
    }

    /** Represents a DeviceRequest. */
    class DeviceRequest implements IDeviceRequest {

        /**
         * Constructs a new DeviceRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IDeviceRequest);

        /** DeviceRequest clientVersion. */
        public clientVersion: string;

        /** DeviceRequest deviceName. */
        public deviceName: string;

        /**
         * Creates a new DeviceRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeviceRequest instance
         */
        public static create(properties?: Authentication.IDeviceRequest): Authentication.DeviceRequest;

        /**
         * Encodes the specified DeviceRequest message. Does not implicitly {@link Authentication.DeviceRequest.verify|verify} messages.
         * @param message DeviceRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IDeviceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeviceRequest message, length delimited. Does not implicitly {@link Authentication.DeviceRequest.verify|verify} messages.
         * @param message DeviceRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IDeviceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeviceRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeviceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.DeviceRequest;

        /**
         * Decodes a DeviceRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeviceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.DeviceRequest;

        /**
         * Verifies a DeviceRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeviceRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeviceRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.DeviceRequest;

        /**
         * Creates a plain object from a DeviceRequest message. Also converts values to other types if specified.
         * @param message DeviceRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.DeviceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeviceRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AuthRequest. */
    interface IAuthRequest {

        /** AuthRequest clientVersion */
        clientVersion?: (string|null);

        /** AuthRequest username */
        username?: (string|null);

        /** AuthRequest encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);
    }

    /** Represents an AuthRequest. */
    class AuthRequest implements IAuthRequest {

        /**
         * Constructs a new AuthRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IAuthRequest);

        /** AuthRequest clientVersion. */
        public clientVersion: string;

        /** AuthRequest username. */
        public username: string;

        /** AuthRequest encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /**
         * Creates a new AuthRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AuthRequest instance
         */
        public static create(properties?: Authentication.IAuthRequest): Authentication.AuthRequest;

        /**
         * Encodes the specified AuthRequest message. Does not implicitly {@link Authentication.AuthRequest.verify|verify} messages.
         * @param message AuthRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IAuthRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AuthRequest message, length delimited. Does not implicitly {@link Authentication.AuthRequest.verify|verify} messages.
         * @param message AuthRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IAuthRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AuthRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AuthRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.AuthRequest;

        /**
         * Decodes an AuthRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AuthRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.AuthRequest;

        /**
         * Verifies an AuthRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AuthRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AuthRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.AuthRequest;

        /**
         * Creates a plain object from an AuthRequest message. Also converts values to other types if specified.
         * @param message AuthRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.AuthRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AuthRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewUserMinimumParams. */
    interface INewUserMinimumParams {

        /** NewUserMinimumParams minimumIterations */
        minimumIterations?: (number|null);

        /** NewUserMinimumParams passwordMatchRegex */
        passwordMatchRegex?: (string[]|null);

        /** NewUserMinimumParams passwordMatchDescription */
        passwordMatchDescription?: (string[]|null);

        /** NewUserMinimumParams isEnterpriseDomain */
        isEnterpriseDomain?: (boolean|null);
    }

    /** Represents a NewUserMinimumParams. */
    class NewUserMinimumParams implements INewUserMinimumParams {

        /**
         * Constructs a new NewUserMinimumParams.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.INewUserMinimumParams);

        /** NewUserMinimumParams minimumIterations. */
        public minimumIterations: number;

        /** NewUserMinimumParams passwordMatchRegex. */
        public passwordMatchRegex: string[];

        /** NewUserMinimumParams passwordMatchDescription. */
        public passwordMatchDescription: string[];

        /** NewUserMinimumParams isEnterpriseDomain. */
        public isEnterpriseDomain: boolean;

        /**
         * Creates a new NewUserMinimumParams instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewUserMinimumParams instance
         */
        public static create(properties?: Authentication.INewUserMinimumParams): Authentication.NewUserMinimumParams;

        /**
         * Encodes the specified NewUserMinimumParams message. Does not implicitly {@link Authentication.NewUserMinimumParams.verify|verify} messages.
         * @param message NewUserMinimumParams message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.INewUserMinimumParams, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewUserMinimumParams message, length delimited. Does not implicitly {@link Authentication.NewUserMinimumParams.verify|verify} messages.
         * @param message NewUserMinimumParams message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.INewUserMinimumParams, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewUserMinimumParams message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewUserMinimumParams
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.NewUserMinimumParams;

        /**
         * Decodes a NewUserMinimumParams message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewUserMinimumParams
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.NewUserMinimumParams;

        /**
         * Verifies a NewUserMinimumParams message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewUserMinimumParams message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewUserMinimumParams
         */
        public static fromObject(object: { [k: string]: any }): Authentication.NewUserMinimumParams;

        /**
         * Creates a plain object from a NewUserMinimumParams message. Also converts values to other types if specified.
         * @param message NewUserMinimumParams
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.NewUserMinimumParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewUserMinimumParams to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PreLoginRequest. */
    interface IPreLoginRequest {

        /** PreLoginRequest authRequest */
        authRequest?: (Authentication.IAuthRequest|null);

        /** PreLoginRequest loginType */
        loginType?: (Authentication.LoginType|null);

        /** PreLoginRequest twoFactorToken */
        twoFactorToken?: (Uint8Array|null);
    }

    /** Represents a PreLoginRequest. */
    class PreLoginRequest implements IPreLoginRequest {

        /**
         * Constructs a new PreLoginRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IPreLoginRequest);

        /** PreLoginRequest authRequest. */
        public authRequest?: (Authentication.IAuthRequest|null);

        /** PreLoginRequest loginType. */
        public loginType: Authentication.LoginType;

        /** PreLoginRequest twoFactorToken. */
        public twoFactorToken: Uint8Array;

        /**
         * Creates a new PreLoginRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PreLoginRequest instance
         */
        public static create(properties?: Authentication.IPreLoginRequest): Authentication.PreLoginRequest;

        /**
         * Encodes the specified PreLoginRequest message. Does not implicitly {@link Authentication.PreLoginRequest.verify|verify} messages.
         * @param message PreLoginRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IPreLoginRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PreLoginRequest message, length delimited. Does not implicitly {@link Authentication.PreLoginRequest.verify|verify} messages.
         * @param message PreLoginRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IPreLoginRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PreLoginRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PreLoginRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.PreLoginRequest;

        /**
         * Decodes a PreLoginRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PreLoginRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.PreLoginRequest;

        /**
         * Verifies a PreLoginRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PreLoginRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PreLoginRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.PreLoginRequest;

        /**
         * Creates a plain object from a PreLoginRequest message. Also converts values to other types if specified.
         * @param message PreLoginRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.PreLoginRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PreLoginRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LoginRequest. */
    interface ILoginRequest {

        /** LoginRequest authRequest */
        authRequest?: (Authentication.IAuthRequest|null);

        /** LoginRequest loginType */
        loginType?: (Authentication.LoginType|null);

        /** LoginRequest authenticationHashPrime */
        authenticationHashPrime?: (Uint8Array|null);

        /** LoginRequest encryptedLoginToken */
        encryptedLoginToken?: (Uint8Array|null);

        /** LoginRequest authResponse */
        authResponse?: (Uint8Array|null);

        /** LoginRequest mcEnterpriseId */
        mcEnterpriseId?: (number|null);

        /** LoginRequest pushToken */
        pushToken?: (string|null);

        /** LoginRequest platform */
        platform?: (string|null);
    }

    /** Represents a LoginRequest. */
    class LoginRequest implements ILoginRequest {

        /**
         * Constructs a new LoginRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ILoginRequest);

        /** LoginRequest authRequest. */
        public authRequest?: (Authentication.IAuthRequest|null);

        /** LoginRequest loginType. */
        public loginType: Authentication.LoginType;

        /** LoginRequest authenticationHashPrime. */
        public authenticationHashPrime: Uint8Array;

        /** LoginRequest encryptedLoginToken. */
        public encryptedLoginToken: Uint8Array;

        /** LoginRequest authResponse. */
        public authResponse: Uint8Array;

        /** LoginRequest mcEnterpriseId. */
        public mcEnterpriseId: number;

        /** LoginRequest pushToken. */
        public pushToken: string;

        /** LoginRequest platform. */
        public platform: string;

        /**
         * Creates a new LoginRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LoginRequest instance
         */
        public static create(properties?: Authentication.ILoginRequest): Authentication.LoginRequest;

        /**
         * Encodes the specified LoginRequest message. Does not implicitly {@link Authentication.LoginRequest.verify|verify} messages.
         * @param message LoginRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ILoginRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LoginRequest message, length delimited. Does not implicitly {@link Authentication.LoginRequest.verify|verify} messages.
         * @param message LoginRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ILoginRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LoginRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LoginRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.LoginRequest;

        /**
         * Decodes a LoginRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LoginRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.LoginRequest;

        /**
         * Verifies a LoginRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LoginRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LoginRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.LoginRequest;

        /**
         * Creates a plain object from a LoginRequest message. Also converts values to other types if specified.
         * @param message LoginRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.LoginRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LoginRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeviceResponse. */
    interface IDeviceResponse {

        /** DeviceResponse encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);

        /** DeviceResponse status */
        status?: (Authentication.DeviceStatus|null);
    }

    /** Represents a DeviceResponse. */
    class DeviceResponse implements IDeviceResponse {

        /**
         * Constructs a new DeviceResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IDeviceResponse);

        /** DeviceResponse encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /** DeviceResponse status. */
        public status: Authentication.DeviceStatus;

        /**
         * Creates a new DeviceResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeviceResponse instance
         */
        public static create(properties?: Authentication.IDeviceResponse): Authentication.DeviceResponse;

        /**
         * Encodes the specified DeviceResponse message. Does not implicitly {@link Authentication.DeviceResponse.verify|verify} messages.
         * @param message DeviceResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IDeviceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeviceResponse message, length delimited. Does not implicitly {@link Authentication.DeviceResponse.verify|verify} messages.
         * @param message DeviceResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IDeviceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeviceResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeviceResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.DeviceResponse;

        /**
         * Decodes a DeviceResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeviceResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.DeviceResponse;

        /**
         * Verifies a DeviceResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeviceResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeviceResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.DeviceResponse;

        /**
         * Creates a plain object from a DeviceResponse message. Also converts values to other types if specified.
         * @param message DeviceResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.DeviceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeviceResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Salt. */
    interface ISalt {

        /** Salt iterations */
        iterations?: (number|null);

        /** Salt salt */
        salt?: (Uint8Array|null);

        /** Salt algorithm */
        algorithm?: (number|null);

        /** Salt uid */
        uid?: (Uint8Array|null);

        /** Salt name */
        name?: (string|null);
    }

    /** Represents a Salt. */
    class Salt implements ISalt {

        /**
         * Constructs a new Salt.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ISalt);

        /** Salt iterations. */
        public iterations: number;

        /** Salt salt. */
        public salt: Uint8Array;

        /** Salt algorithm. */
        public algorithm: number;

        /** Salt uid. */
        public uid: Uint8Array;

        /** Salt name. */
        public name: string;

        /**
         * Creates a new Salt instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Salt instance
         */
        public static create(properties?: Authentication.ISalt): Authentication.Salt;

        /**
         * Encodes the specified Salt message. Does not implicitly {@link Authentication.Salt.verify|verify} messages.
         * @param message Salt message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ISalt, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Salt message, length delimited. Does not implicitly {@link Authentication.Salt.verify|verify} messages.
         * @param message Salt message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ISalt, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Salt message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Salt
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.Salt;

        /**
         * Decodes a Salt message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Salt
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.Salt;

        /**
         * Verifies a Salt message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Salt message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Salt
         */
        public static fromObject(object: { [k: string]: any }): Authentication.Salt;

        /**
         * Creates a plain object from a Salt message. Also converts values to other types if specified.
         * @param message Salt
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.Salt, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Salt to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TwoFactorChannel. */
    interface ITwoFactorChannel {

        /** TwoFactorChannel type */
        type?: (number|null);
    }

    /** Represents a TwoFactorChannel. */
    class TwoFactorChannel implements ITwoFactorChannel {

        /**
         * Constructs a new TwoFactorChannel.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ITwoFactorChannel);

        /** TwoFactorChannel type. */
        public type: number;

        /**
         * Creates a new TwoFactorChannel instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TwoFactorChannel instance
         */
        public static create(properties?: Authentication.ITwoFactorChannel): Authentication.TwoFactorChannel;

        /**
         * Encodes the specified TwoFactorChannel message. Does not implicitly {@link Authentication.TwoFactorChannel.verify|verify} messages.
         * @param message TwoFactorChannel message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ITwoFactorChannel, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TwoFactorChannel message, length delimited. Does not implicitly {@link Authentication.TwoFactorChannel.verify|verify} messages.
         * @param message TwoFactorChannel message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ITwoFactorChannel, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TwoFactorChannel message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TwoFactorChannel
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.TwoFactorChannel;

        /**
         * Decodes a TwoFactorChannel message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TwoFactorChannel
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.TwoFactorChannel;

        /**
         * Verifies a TwoFactorChannel message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TwoFactorChannel message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TwoFactorChannel
         */
        public static fromObject(object: { [k: string]: any }): Authentication.TwoFactorChannel;

        /**
         * Creates a plain object from a TwoFactorChannel message. Also converts values to other types if specified.
         * @param message TwoFactorChannel
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.TwoFactorChannel, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TwoFactorChannel to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** LoginMethod enum. */
    enum LoginMethod {
        INVALID_LOGINMETHOD = 0,
        EXISTING_ACCOUNT = 1,
        SSO_DOMAIN = 2,
        AFTER_SSO = 3,
        NEW_ACCOUNT = 4
    }

    /** LoginState enum. */
    enum LoginState {
        INVALID_LOGINSTATE = 0,
        LOGGED_OUT = 1,
        DEVICE_APPROVAL_REQUIRED = 2,
        DEVICE_LOCKED = 3,
        ACCOUNT_LOCKED = 4,
        DEVICE_ACCOUNT_LOCKED = 5,
        UPGRADE = 6,
        LICENSE_EXPIRED = 7,
        REGION_REDIRECT = 8,
        REDIRECT_CLOUD_SSO = 9,
        REDIRECT_ONSITE_SSO = 10,
        REQUIRES_2FA = 12,
        REQUIRES_AUTH_HASH = 13,
        REQUIRES_USERNAME = 14,
        AFTER_CLOUD_SSO_LOGIN = 15,
        REQUIRES_ACCOUNT_CREATION = 16,
        REQUIRES_DEVICE_ENCRYPTED_DATA_KEY = 17,
        LOGIN_TOKEN_EXPIRED = 18,
        LOGGED_IN = 99
    }

    /** EncryptedDataKeyType enum. */
    enum EncryptedDataKeyType {
        NO_KEY = 0,
        BY_DEVICE_PUBLIC_KEY = 1,
        BY_PASSWORD = 2,
        BY_ALTERNATE = 3,
        BY_BIO = 4
    }

    /** Properties of a StartLoginRequest. */
    interface IStartLoginRequest {

        /** StartLoginRequest encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);

        /** StartLoginRequest username */
        username?: (string|null);

        /** StartLoginRequest clientVersion */
        clientVersion?: (string|null);

        /** StartLoginRequest messageSessionUid */
        messageSessionUid?: (Uint8Array|null);

        /** StartLoginRequest encryptedLoginToken */
        encryptedLoginToken?: (Uint8Array|null);

        /** StartLoginRequest loginType */
        loginType?: (Authentication.LoginType|null);

        /** StartLoginRequest mcEnterpriseId */
        mcEnterpriseId?: (number|null);

        /** StartLoginRequest loginMethod */
        loginMethod?: (Authentication.LoginMethod|null);

        /** StartLoginRequest forceNewLogin */
        forceNewLogin?: (boolean|null);

        /** StartLoginRequest cloneCode */
        cloneCode?: (Uint8Array|null);

        /** StartLoginRequest v2TwoFactorToken */
        v2TwoFactorToken?: (string|null);

        /** StartLoginRequest accountUid */
        accountUid?: (Uint8Array|null);
    }

    /** Represents a StartLoginRequest. */
    class StartLoginRequest implements IStartLoginRequest {

        /**
         * Constructs a new StartLoginRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IStartLoginRequest);

        /** StartLoginRequest encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /** StartLoginRequest username. */
        public username: string;

        /** StartLoginRequest clientVersion. */
        public clientVersion: string;

        /** StartLoginRequest messageSessionUid. */
        public messageSessionUid: Uint8Array;

        /** StartLoginRequest encryptedLoginToken. */
        public encryptedLoginToken: Uint8Array;

        /** StartLoginRequest loginType. */
        public loginType: Authentication.LoginType;

        /** StartLoginRequest mcEnterpriseId. */
        public mcEnterpriseId: number;

        /** StartLoginRequest loginMethod. */
        public loginMethod: Authentication.LoginMethod;

        /** StartLoginRequest forceNewLogin. */
        public forceNewLogin: boolean;

        /** StartLoginRequest cloneCode. */
        public cloneCode: Uint8Array;

        /** StartLoginRequest v2TwoFactorToken. */
        public v2TwoFactorToken: string;

        /** StartLoginRequest accountUid. */
        public accountUid: Uint8Array;

        /**
         * Creates a new StartLoginRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StartLoginRequest instance
         */
        public static create(properties?: Authentication.IStartLoginRequest): Authentication.StartLoginRequest;

        /**
         * Encodes the specified StartLoginRequest message. Does not implicitly {@link Authentication.StartLoginRequest.verify|verify} messages.
         * @param message StartLoginRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IStartLoginRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StartLoginRequest message, length delimited. Does not implicitly {@link Authentication.StartLoginRequest.verify|verify} messages.
         * @param message StartLoginRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IStartLoginRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StartLoginRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StartLoginRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.StartLoginRequest;

        /**
         * Decodes a StartLoginRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StartLoginRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.StartLoginRequest;

        /**
         * Verifies a StartLoginRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StartLoginRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StartLoginRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.StartLoginRequest;

        /**
         * Creates a plain object from a StartLoginRequest message. Also converts values to other types if specified.
         * @param message StartLoginRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.StartLoginRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StartLoginRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LoginResponse. */
    interface ILoginResponse {

        /** LoginResponse loginState */
        loginState?: (Authentication.LoginState|null);

        /** LoginResponse accountUid */
        accountUid?: (Uint8Array|null);

        /** LoginResponse primaryUsername */
        primaryUsername?: (string|null);

        /** LoginResponse encryptedDataKey */
        encryptedDataKey?: (Uint8Array|null);

        /** LoginResponse encryptedDataKeyType */
        encryptedDataKeyType?: (Authentication.EncryptedDataKeyType|null);

        /** LoginResponse encryptedLoginToken */
        encryptedLoginToken?: (Uint8Array|null);

        /** LoginResponse encryptedSessionToken */
        encryptedSessionToken?: (Uint8Array|null);

        /** LoginResponse sessionTokenType */
        sessionTokenType?: (Authentication.SessionTokenType|null);

        /** LoginResponse message */
        message?: (string|null);

        /** LoginResponse url */
        url?: (string|null);

        /** LoginResponse channels */
        channels?: (Authentication.ITwoFactorChannelInfo[]|null);

        /** LoginResponse salt */
        salt?: (Authentication.ISalt[]|null);

        /** LoginResponse cloneCode */
        cloneCode?: (Uint8Array|null);

        /** LoginResponse stateSpecificValue */
        stateSpecificValue?: (string|null);

        /** LoginResponse ssoClientVersion */
        ssoClientVersion?: (string|null);

        /** LoginResponse sessionTokenTypeModifier */
        sessionTokenTypeModifier?: (string|null);
    }

    /** Represents a LoginResponse. */
    class LoginResponse implements ILoginResponse {

        /**
         * Constructs a new LoginResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ILoginResponse);

        /** LoginResponse loginState. */
        public loginState: Authentication.LoginState;

        /** LoginResponse accountUid. */
        public accountUid: Uint8Array;

        /** LoginResponse primaryUsername. */
        public primaryUsername: string;

        /** LoginResponse encryptedDataKey. */
        public encryptedDataKey: Uint8Array;

        /** LoginResponse encryptedDataKeyType. */
        public encryptedDataKeyType: Authentication.EncryptedDataKeyType;

        /** LoginResponse encryptedLoginToken. */
        public encryptedLoginToken: Uint8Array;

        /** LoginResponse encryptedSessionToken. */
        public encryptedSessionToken: Uint8Array;

        /** LoginResponse sessionTokenType. */
        public sessionTokenType: Authentication.SessionTokenType;

        /** LoginResponse message. */
        public message: string;

        /** LoginResponse url. */
        public url: string;

        /** LoginResponse channels. */
        public channels: Authentication.ITwoFactorChannelInfo[];

        /** LoginResponse salt. */
        public salt: Authentication.ISalt[];

        /** LoginResponse cloneCode. */
        public cloneCode: Uint8Array;

        /** LoginResponse stateSpecificValue. */
        public stateSpecificValue: string;

        /** LoginResponse ssoClientVersion. */
        public ssoClientVersion: string;

        /** LoginResponse sessionTokenTypeModifier. */
        public sessionTokenTypeModifier: string;

        /**
         * Creates a new LoginResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LoginResponse instance
         */
        public static create(properties?: Authentication.ILoginResponse): Authentication.LoginResponse;

        /**
         * Encodes the specified LoginResponse message. Does not implicitly {@link Authentication.LoginResponse.verify|verify} messages.
         * @param message LoginResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ILoginResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LoginResponse message, length delimited. Does not implicitly {@link Authentication.LoginResponse.verify|verify} messages.
         * @param message LoginResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ILoginResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LoginResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LoginResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.LoginResponse;

        /**
         * Decodes a LoginResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LoginResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.LoginResponse;

        /**
         * Verifies a LoginResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LoginResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LoginResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.LoginResponse;

        /**
         * Creates a plain object from a LoginResponse message. Also converts values to other types if specified.
         * @param message LoginResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.LoginResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LoginResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoUserInfo. */
    interface ISsoUserInfo {

        /** SsoUserInfo companyName */
        companyName?: (string|null);

        /** SsoUserInfo samlRequest */
        samlRequest?: (string|null);

        /** SsoUserInfo samlRequestType */
        samlRequestType?: (string|null);

        /** SsoUserInfo ssoDomainName */
        ssoDomainName?: (string|null);

        /** SsoUserInfo loginUrl */
        loginUrl?: (string|null);

        /** SsoUserInfo logoutUrl */
        logoutUrl?: (string|null);
    }

    /** Represents a SsoUserInfo. */
    class SsoUserInfo implements ISsoUserInfo {

        /**
         * Constructs a new SsoUserInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ISsoUserInfo);

        /** SsoUserInfo companyName. */
        public companyName: string;

        /** SsoUserInfo samlRequest. */
        public samlRequest: string;

        /** SsoUserInfo samlRequestType. */
        public samlRequestType: string;

        /** SsoUserInfo ssoDomainName. */
        public ssoDomainName: string;

        /** SsoUserInfo loginUrl. */
        public loginUrl: string;

        /** SsoUserInfo logoutUrl. */
        public logoutUrl: string;

        /**
         * Creates a new SsoUserInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoUserInfo instance
         */
        public static create(properties?: Authentication.ISsoUserInfo): Authentication.SsoUserInfo;

        /**
         * Encodes the specified SsoUserInfo message. Does not implicitly {@link Authentication.SsoUserInfo.verify|verify} messages.
         * @param message SsoUserInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ISsoUserInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoUserInfo message, length delimited. Does not implicitly {@link Authentication.SsoUserInfo.verify|verify} messages.
         * @param message SsoUserInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ISsoUserInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoUserInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoUserInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.SsoUserInfo;

        /**
         * Decodes a SsoUserInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoUserInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.SsoUserInfo;

        /**
         * Verifies a SsoUserInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoUserInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoUserInfo
         */
        public static fromObject(object: { [k: string]: any }): Authentication.SsoUserInfo;

        /**
         * Creates a plain object from a SsoUserInfo message. Also converts values to other types if specified.
         * @param message SsoUserInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.SsoUserInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoUserInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PreLoginResponse. */
    interface IPreLoginResponse {

        /** PreLoginResponse deviceStatus */
        deviceStatus?: (Authentication.DeviceStatus|null);

        /** PreLoginResponse salt */
        salt?: (Authentication.ISalt[]|null);

        /** PreLoginResponse OBSOLETE_FIELD */
        OBSOLETE_FIELD?: (Authentication.ITwoFactorChannel[]|null);

        /** PreLoginResponse ssoUserInfo */
        ssoUserInfo?: (Authentication.ISsoUserInfo|null);
    }

    /** Represents a PreLoginResponse. */
    class PreLoginResponse implements IPreLoginResponse {

        /**
         * Constructs a new PreLoginResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IPreLoginResponse);

        /** PreLoginResponse deviceStatus. */
        public deviceStatus: Authentication.DeviceStatus;

        /** PreLoginResponse salt. */
        public salt: Authentication.ISalt[];

        /** PreLoginResponse OBSOLETE_FIELD. */
        public OBSOLETE_FIELD: Authentication.ITwoFactorChannel[];

        /** PreLoginResponse ssoUserInfo. */
        public ssoUserInfo?: (Authentication.ISsoUserInfo|null);

        /**
         * Creates a new PreLoginResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PreLoginResponse instance
         */
        public static create(properties?: Authentication.IPreLoginResponse): Authentication.PreLoginResponse;

        /**
         * Encodes the specified PreLoginResponse message. Does not implicitly {@link Authentication.PreLoginResponse.verify|verify} messages.
         * @param message PreLoginResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IPreLoginResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PreLoginResponse message, length delimited. Does not implicitly {@link Authentication.PreLoginResponse.verify|verify} messages.
         * @param message PreLoginResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IPreLoginResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PreLoginResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PreLoginResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.PreLoginResponse;

        /**
         * Decodes a PreLoginResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PreLoginResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.PreLoginResponse;

        /**
         * Verifies a PreLoginResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PreLoginResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PreLoginResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.PreLoginResponse;

        /**
         * Creates a plain object from a PreLoginResponse message. Also converts values to other types if specified.
         * @param message PreLoginResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.PreLoginResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PreLoginResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LoginAsUserRequest. */
    interface ILoginAsUserRequest {

        /** LoginAsUserRequest username */
        username?: (string|null);
    }

    /** Represents a LoginAsUserRequest. */
    class LoginAsUserRequest implements ILoginAsUserRequest {

        /**
         * Constructs a new LoginAsUserRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ILoginAsUserRequest);

        /** LoginAsUserRequest username. */
        public username: string;

        /**
         * Creates a new LoginAsUserRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LoginAsUserRequest instance
         */
        public static create(properties?: Authentication.ILoginAsUserRequest): Authentication.LoginAsUserRequest;

        /**
         * Encodes the specified LoginAsUserRequest message. Does not implicitly {@link Authentication.LoginAsUserRequest.verify|verify} messages.
         * @param message LoginAsUserRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ILoginAsUserRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LoginAsUserRequest message, length delimited. Does not implicitly {@link Authentication.LoginAsUserRequest.verify|verify} messages.
         * @param message LoginAsUserRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ILoginAsUserRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LoginAsUserRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LoginAsUserRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.LoginAsUserRequest;

        /**
         * Decodes a LoginAsUserRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LoginAsUserRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.LoginAsUserRequest;

        /**
         * Verifies a LoginAsUserRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LoginAsUserRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LoginAsUserRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.LoginAsUserRequest;

        /**
         * Creates a plain object from a LoginAsUserRequest message. Also converts values to other types if specified.
         * @param message LoginAsUserRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.LoginAsUserRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LoginAsUserRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LoginAsUserResponse. */
    interface ILoginAsUserResponse {

        /** LoginAsUserResponse encryptedSessionToken */
        encryptedSessionToken?: (Uint8Array|null);

        /** LoginAsUserResponse encryptedSharedAccountKey */
        encryptedSharedAccountKey?: (Uint8Array|null);
    }

    /** Represents a LoginAsUserResponse. */
    class LoginAsUserResponse implements ILoginAsUserResponse {

        /**
         * Constructs a new LoginAsUserResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ILoginAsUserResponse);

        /** LoginAsUserResponse encryptedSessionToken. */
        public encryptedSessionToken: Uint8Array;

        /** LoginAsUserResponse encryptedSharedAccountKey. */
        public encryptedSharedAccountKey: Uint8Array;

        /**
         * Creates a new LoginAsUserResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LoginAsUserResponse instance
         */
        public static create(properties?: Authentication.ILoginAsUserResponse): Authentication.LoginAsUserResponse;

        /**
         * Encodes the specified LoginAsUserResponse message. Does not implicitly {@link Authentication.LoginAsUserResponse.verify|verify} messages.
         * @param message LoginAsUserResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ILoginAsUserResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LoginAsUserResponse message, length delimited. Does not implicitly {@link Authentication.LoginAsUserResponse.verify|verify} messages.
         * @param message LoginAsUserResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ILoginAsUserResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LoginAsUserResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LoginAsUserResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.LoginAsUserResponse;

        /**
         * Decodes a LoginAsUserResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LoginAsUserResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.LoginAsUserResponse;

        /**
         * Verifies a LoginAsUserResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LoginAsUserResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LoginAsUserResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.LoginAsUserResponse;

        /**
         * Creates a plain object from a LoginAsUserResponse message. Also converts values to other types if specified.
         * @param message LoginAsUserResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.LoginAsUserResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LoginAsUserResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** PasswordMethod enum. */
    enum PasswordMethod {
        ENTERED = 0,
        BIOMETRICS = 1
    }

    /** Properties of a ValidateAuthHashRequest. */
    interface IValidateAuthHashRequest {

        /** ValidateAuthHashRequest passwordMethod */
        passwordMethod?: (Authentication.PasswordMethod|null);

        /** ValidateAuthHashRequest authResponse */
        authResponse?: (Uint8Array|null);

        /** ValidateAuthHashRequest encryptedLoginToken */
        encryptedLoginToken?: (Uint8Array|null);
    }

    /** Represents a ValidateAuthHashRequest. */
    class ValidateAuthHashRequest implements IValidateAuthHashRequest {

        /**
         * Constructs a new ValidateAuthHashRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IValidateAuthHashRequest);

        /** ValidateAuthHashRequest passwordMethod. */
        public passwordMethod: Authentication.PasswordMethod;

        /** ValidateAuthHashRequest authResponse. */
        public authResponse: Uint8Array;

        /** ValidateAuthHashRequest encryptedLoginToken. */
        public encryptedLoginToken: Uint8Array;

        /**
         * Creates a new ValidateAuthHashRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ValidateAuthHashRequest instance
         */
        public static create(properties?: Authentication.IValidateAuthHashRequest): Authentication.ValidateAuthHashRequest;

        /**
         * Encodes the specified ValidateAuthHashRequest message. Does not implicitly {@link Authentication.ValidateAuthHashRequest.verify|verify} messages.
         * @param message ValidateAuthHashRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IValidateAuthHashRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ValidateAuthHashRequest message, length delimited. Does not implicitly {@link Authentication.ValidateAuthHashRequest.verify|verify} messages.
         * @param message ValidateAuthHashRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IValidateAuthHashRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ValidateAuthHashRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ValidateAuthHashRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ValidateAuthHashRequest;

        /**
         * Decodes a ValidateAuthHashRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ValidateAuthHashRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ValidateAuthHashRequest;

        /**
         * Verifies a ValidateAuthHashRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ValidateAuthHashRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ValidateAuthHashRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ValidateAuthHashRequest;

        /**
         * Creates a plain object from a ValidateAuthHashRequest message. Also converts values to other types if specified.
         * @param message ValidateAuthHashRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ValidateAuthHashRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ValidateAuthHashRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** TwoFactorPushType enum. */
    enum TwoFactorPushType {
        TWO_FA_PUSH_NONE = 0,
        TWO_FA_PUSH_SMS = 1,
        TWO_FA_PUSH_KEEPER = 2,
        TWO_FA_PUSH_DUO_PUSH = 3,
        TWO_FA_PUSH_DUO_TEXT = 4,
        TWO_FA_PUSH_DUO_CALL = 5,
        TWO_FA_PUSH_DNA = 6
    }

    /** TwoFactorValueType enum. */
    enum TwoFactorValueType {
        TWO_FA_CODE_NONE = 0,
        TWO_FA_CODE_TOTP = 1,
        TWO_FA_CODE_SMS = 2,
        TWO_FA_CODE_DUO = 3,
        TWO_FA_CODE_RSA = 4,
        TWO_FA_RESP_U2F = 5,
        TWO_FA_RESP_WEBAUTHN = 6,
        TWO_FA_CODE_DNA = 7
    }

    /** TwoFactorChannelType enum. */
    enum TwoFactorChannelType {
        TWO_FA_CT_NONE = 0,
        TWO_FA_CT_TOTP = 1,
        TWO_FA_CT_SMS = 2,
        TWO_FA_CT_DUO = 3,
        TWO_FA_CT_RSA = 4,
        TWO_FA_CT_BACKUP = 5,
        TWO_FA_CT_U2F = 6,
        TWO_FA_CT_WEBAUTHN = 7,
        TWO_FA_CT_KEEPER = 8,
        TWO_FA_CT_DNA = 9
    }

    /** Properties of a TwoFactorChannelInfo. */
    interface ITwoFactorChannelInfo {

        /** TwoFactorChannelInfo channelType */
        channelType?: (Authentication.TwoFactorChannelType|null);

        /** TwoFactorChannelInfo channelUid */
        channelUid?: (Uint8Array|null);

        /** TwoFactorChannelInfo channelName */
        channelName?: (string|null);

        /** TwoFactorChannelInfo challenge */
        challenge?: (string|null);

        /** TwoFactorChannelInfo capabilities */
        capabilities?: (string[]|null);

        /** TwoFactorChannelInfo phoneNumber */
        phoneNumber?: (string|null);

        /** TwoFactorChannelInfo maxExpiration */
        maxExpiration?: (Authentication.TwoFactorExpiration|null);

        /** TwoFactorChannelInfo createdOn */
        createdOn?: (number|Long|null);
    }

    /** Represents a TwoFactorChannelInfo. */
    class TwoFactorChannelInfo implements ITwoFactorChannelInfo {

        /**
         * Constructs a new TwoFactorChannelInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ITwoFactorChannelInfo);

        /** TwoFactorChannelInfo channelType. */
        public channelType: Authentication.TwoFactorChannelType;

        /** TwoFactorChannelInfo channelUid. */
        public channelUid: Uint8Array;

        /** TwoFactorChannelInfo channelName. */
        public channelName: string;

        /** TwoFactorChannelInfo challenge. */
        public challenge: string;

        /** TwoFactorChannelInfo capabilities. */
        public capabilities: string[];

        /** TwoFactorChannelInfo phoneNumber. */
        public phoneNumber: string;

        /** TwoFactorChannelInfo maxExpiration. */
        public maxExpiration: Authentication.TwoFactorExpiration;

        /** TwoFactorChannelInfo createdOn. */
        public createdOn: (number|Long);

        /**
         * Creates a new TwoFactorChannelInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TwoFactorChannelInfo instance
         */
        public static create(properties?: Authentication.ITwoFactorChannelInfo): Authentication.TwoFactorChannelInfo;

        /**
         * Encodes the specified TwoFactorChannelInfo message. Does not implicitly {@link Authentication.TwoFactorChannelInfo.verify|verify} messages.
         * @param message TwoFactorChannelInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ITwoFactorChannelInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TwoFactorChannelInfo message, length delimited. Does not implicitly {@link Authentication.TwoFactorChannelInfo.verify|verify} messages.
         * @param message TwoFactorChannelInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ITwoFactorChannelInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TwoFactorChannelInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TwoFactorChannelInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.TwoFactorChannelInfo;

        /**
         * Decodes a TwoFactorChannelInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TwoFactorChannelInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.TwoFactorChannelInfo;

        /**
         * Verifies a TwoFactorChannelInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TwoFactorChannelInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TwoFactorChannelInfo
         */
        public static fromObject(object: { [k: string]: any }): Authentication.TwoFactorChannelInfo;

        /**
         * Creates a plain object from a TwoFactorChannelInfo message. Also converts values to other types if specified.
         * @param message TwoFactorChannelInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.TwoFactorChannelInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TwoFactorChannelInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** TwoFactorExpiration enum. */
    enum TwoFactorExpiration {
        TWO_FA_EXP_IMMEDIATELY = 0,
        TWO_FA_EXP_5_MINUTES = 1,
        TWO_FA_EXP_12_HOURS = 2,
        TWO_FA_EXP_24_HOURS = 3,
        TWO_FA_EXP_30_DAYS = 4,
        TWO_FA_EXP_NEVER = 5
    }

    /** Properties of a TwoFactorDuoStatus. */
    interface ITwoFactorDuoStatus {

        /** TwoFactorDuoStatus capabilities */
        capabilities?: (string[]|null);

        /** TwoFactorDuoStatus phoneNumber */
        phoneNumber?: (string|null);

        /** TwoFactorDuoStatus enrollUrl */
        enrollUrl?: (string|null);

        /** TwoFactorDuoStatus message */
        message?: (string|null);
    }

    /** Represents a TwoFactorDuoStatus. */
    class TwoFactorDuoStatus implements ITwoFactorDuoStatus {

        /**
         * Constructs a new TwoFactorDuoStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ITwoFactorDuoStatus);

        /** TwoFactorDuoStatus capabilities. */
        public capabilities: string[];

        /** TwoFactorDuoStatus phoneNumber. */
        public phoneNumber: string;

        /** TwoFactorDuoStatus enrollUrl. */
        public enrollUrl: string;

        /** TwoFactorDuoStatus message. */
        public message: string;

        /**
         * Creates a new TwoFactorDuoStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TwoFactorDuoStatus instance
         */
        public static create(properties?: Authentication.ITwoFactorDuoStatus): Authentication.TwoFactorDuoStatus;

        /**
         * Encodes the specified TwoFactorDuoStatus message. Does not implicitly {@link Authentication.TwoFactorDuoStatus.verify|verify} messages.
         * @param message TwoFactorDuoStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ITwoFactorDuoStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TwoFactorDuoStatus message, length delimited. Does not implicitly {@link Authentication.TwoFactorDuoStatus.verify|verify} messages.
         * @param message TwoFactorDuoStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ITwoFactorDuoStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TwoFactorDuoStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TwoFactorDuoStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.TwoFactorDuoStatus;

        /**
         * Decodes a TwoFactorDuoStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TwoFactorDuoStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.TwoFactorDuoStatus;

        /**
         * Verifies a TwoFactorDuoStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TwoFactorDuoStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TwoFactorDuoStatus
         */
        public static fromObject(object: { [k: string]: any }): Authentication.TwoFactorDuoStatus;

        /**
         * Creates a plain object from a TwoFactorDuoStatus message. Also converts values to other types if specified.
         * @param message TwoFactorDuoStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.TwoFactorDuoStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TwoFactorDuoStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TwoFactorAddRequest. */
    interface ITwoFactorAddRequest {

        /** TwoFactorAddRequest channelType */
        channelType?: (Authentication.TwoFactorChannelType|null);

        /** TwoFactorAddRequest channelUid */
        channelUid?: (Uint8Array|null);

        /** TwoFactorAddRequest channelName */
        channelName?: (string|null);

        /** TwoFactorAddRequest phoneNumber */
        phoneNumber?: (string|null);

        /** TwoFactorAddRequest duoPushType */
        duoPushType?: (Authentication.TwoFactorPushType|null);
    }

    /** Represents a TwoFactorAddRequest. */
    class TwoFactorAddRequest implements ITwoFactorAddRequest {

        /**
         * Constructs a new TwoFactorAddRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ITwoFactorAddRequest);

        /** TwoFactorAddRequest channelType. */
        public channelType: Authentication.TwoFactorChannelType;

        /** TwoFactorAddRequest channelUid. */
        public channelUid: Uint8Array;

        /** TwoFactorAddRequest channelName. */
        public channelName: string;

        /** TwoFactorAddRequest phoneNumber. */
        public phoneNumber: string;

        /** TwoFactorAddRequest duoPushType. */
        public duoPushType: Authentication.TwoFactorPushType;

        /**
         * Creates a new TwoFactorAddRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TwoFactorAddRequest instance
         */
        public static create(properties?: Authentication.ITwoFactorAddRequest): Authentication.TwoFactorAddRequest;

        /**
         * Encodes the specified TwoFactorAddRequest message. Does not implicitly {@link Authentication.TwoFactorAddRequest.verify|verify} messages.
         * @param message TwoFactorAddRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ITwoFactorAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TwoFactorAddRequest message, length delimited. Does not implicitly {@link Authentication.TwoFactorAddRequest.verify|verify} messages.
         * @param message TwoFactorAddRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ITwoFactorAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TwoFactorAddRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TwoFactorAddRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.TwoFactorAddRequest;

        /**
         * Decodes a TwoFactorAddRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TwoFactorAddRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.TwoFactorAddRequest;

        /**
         * Verifies a TwoFactorAddRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TwoFactorAddRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TwoFactorAddRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.TwoFactorAddRequest;

        /**
         * Creates a plain object from a TwoFactorAddRequest message. Also converts values to other types if specified.
         * @param message TwoFactorAddRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.TwoFactorAddRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TwoFactorAddRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TwoFactorRenameRequest. */
    interface ITwoFactorRenameRequest {

        /** TwoFactorRenameRequest channelUid */
        channelUid?: (Uint8Array|null);

        /** TwoFactorRenameRequest channelName */
        channelName?: (string|null);
    }

    /** Represents a TwoFactorRenameRequest. */
    class TwoFactorRenameRequest implements ITwoFactorRenameRequest {

        /**
         * Constructs a new TwoFactorRenameRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ITwoFactorRenameRequest);

        /** TwoFactorRenameRequest channelUid. */
        public channelUid: Uint8Array;

        /** TwoFactorRenameRequest channelName. */
        public channelName: string;

        /**
         * Creates a new TwoFactorRenameRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TwoFactorRenameRequest instance
         */
        public static create(properties?: Authentication.ITwoFactorRenameRequest): Authentication.TwoFactorRenameRequest;

        /**
         * Encodes the specified TwoFactorRenameRequest message. Does not implicitly {@link Authentication.TwoFactorRenameRequest.verify|verify} messages.
         * @param message TwoFactorRenameRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ITwoFactorRenameRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TwoFactorRenameRequest message, length delimited. Does not implicitly {@link Authentication.TwoFactorRenameRequest.verify|verify} messages.
         * @param message TwoFactorRenameRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ITwoFactorRenameRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TwoFactorRenameRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TwoFactorRenameRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.TwoFactorRenameRequest;

        /**
         * Decodes a TwoFactorRenameRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TwoFactorRenameRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.TwoFactorRenameRequest;

        /**
         * Verifies a TwoFactorRenameRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TwoFactorRenameRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TwoFactorRenameRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.TwoFactorRenameRequest;

        /**
         * Creates a plain object from a TwoFactorRenameRequest message. Also converts values to other types if specified.
         * @param message TwoFactorRenameRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.TwoFactorRenameRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TwoFactorRenameRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TwoFactorAddResponse. */
    interface ITwoFactorAddResponse {

        /** TwoFactorAddResponse challenge */
        challenge?: (string|null);

        /** TwoFactorAddResponse backupKeys */
        backupKeys?: (string[]|null);
    }

    /** Represents a TwoFactorAddResponse. */
    class TwoFactorAddResponse implements ITwoFactorAddResponse {

        /**
         * Constructs a new TwoFactorAddResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ITwoFactorAddResponse);

        /** TwoFactorAddResponse challenge. */
        public challenge: string;

        /** TwoFactorAddResponse backupKeys. */
        public backupKeys: string[];

        /**
         * Creates a new TwoFactorAddResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TwoFactorAddResponse instance
         */
        public static create(properties?: Authentication.ITwoFactorAddResponse): Authentication.TwoFactorAddResponse;

        /**
         * Encodes the specified TwoFactorAddResponse message. Does not implicitly {@link Authentication.TwoFactorAddResponse.verify|verify} messages.
         * @param message TwoFactorAddResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ITwoFactorAddResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TwoFactorAddResponse message, length delimited. Does not implicitly {@link Authentication.TwoFactorAddResponse.verify|verify} messages.
         * @param message TwoFactorAddResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ITwoFactorAddResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TwoFactorAddResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TwoFactorAddResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.TwoFactorAddResponse;

        /**
         * Decodes a TwoFactorAddResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TwoFactorAddResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.TwoFactorAddResponse;

        /**
         * Verifies a TwoFactorAddResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TwoFactorAddResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TwoFactorAddResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.TwoFactorAddResponse;

        /**
         * Creates a plain object from a TwoFactorAddResponse message. Also converts values to other types if specified.
         * @param message TwoFactorAddResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.TwoFactorAddResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TwoFactorAddResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TwoFactorDeleteRequest. */
    interface ITwoFactorDeleteRequest {

        /** TwoFactorDeleteRequest channelUid */
        channelUid?: (Uint8Array|null);
    }

    /** Represents a TwoFactorDeleteRequest. */
    class TwoFactorDeleteRequest implements ITwoFactorDeleteRequest {

        /**
         * Constructs a new TwoFactorDeleteRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ITwoFactorDeleteRequest);

        /** TwoFactorDeleteRequest channelUid. */
        public channelUid: Uint8Array;

        /**
         * Creates a new TwoFactorDeleteRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TwoFactorDeleteRequest instance
         */
        public static create(properties?: Authentication.ITwoFactorDeleteRequest): Authentication.TwoFactorDeleteRequest;

        /**
         * Encodes the specified TwoFactorDeleteRequest message. Does not implicitly {@link Authentication.TwoFactorDeleteRequest.verify|verify} messages.
         * @param message TwoFactorDeleteRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ITwoFactorDeleteRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TwoFactorDeleteRequest message, length delimited. Does not implicitly {@link Authentication.TwoFactorDeleteRequest.verify|verify} messages.
         * @param message TwoFactorDeleteRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ITwoFactorDeleteRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TwoFactorDeleteRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TwoFactorDeleteRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.TwoFactorDeleteRequest;

        /**
         * Decodes a TwoFactorDeleteRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TwoFactorDeleteRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.TwoFactorDeleteRequest;

        /**
         * Verifies a TwoFactorDeleteRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TwoFactorDeleteRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TwoFactorDeleteRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.TwoFactorDeleteRequest;

        /**
         * Creates a plain object from a TwoFactorDeleteRequest message. Also converts values to other types if specified.
         * @param message TwoFactorDeleteRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.TwoFactorDeleteRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TwoFactorDeleteRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TwoFactorListResponse. */
    interface ITwoFactorListResponse {

        /** TwoFactorListResponse channels */
        channels?: (Authentication.ITwoFactorChannelInfo[]|null);

        /** TwoFactorListResponse expireOn */
        expireOn?: (number|Long|null);
    }

    /** Represents a TwoFactorListResponse. */
    class TwoFactorListResponse implements ITwoFactorListResponse {

        /**
         * Constructs a new TwoFactorListResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ITwoFactorListResponse);

        /** TwoFactorListResponse channels. */
        public channels: Authentication.ITwoFactorChannelInfo[];

        /** TwoFactorListResponse expireOn. */
        public expireOn: (number|Long);

        /**
         * Creates a new TwoFactorListResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TwoFactorListResponse instance
         */
        public static create(properties?: Authentication.ITwoFactorListResponse): Authentication.TwoFactorListResponse;

        /**
         * Encodes the specified TwoFactorListResponse message. Does not implicitly {@link Authentication.TwoFactorListResponse.verify|verify} messages.
         * @param message TwoFactorListResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ITwoFactorListResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TwoFactorListResponse message, length delimited. Does not implicitly {@link Authentication.TwoFactorListResponse.verify|verify} messages.
         * @param message TwoFactorListResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ITwoFactorListResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TwoFactorListResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TwoFactorListResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.TwoFactorListResponse;

        /**
         * Decodes a TwoFactorListResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TwoFactorListResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.TwoFactorListResponse;

        /**
         * Verifies a TwoFactorListResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TwoFactorListResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TwoFactorListResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.TwoFactorListResponse;

        /**
         * Creates a plain object from a TwoFactorListResponse message. Also converts values to other types if specified.
         * @param message TwoFactorListResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.TwoFactorListResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TwoFactorListResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TwoFactorUpdateExpirationRequest. */
    interface ITwoFactorUpdateExpirationRequest {

        /** TwoFactorUpdateExpirationRequest expireIn */
        expireIn?: (Authentication.TwoFactorExpiration|null);
    }

    /** Represents a TwoFactorUpdateExpirationRequest. */
    class TwoFactorUpdateExpirationRequest implements ITwoFactorUpdateExpirationRequest {

        /**
         * Constructs a new TwoFactorUpdateExpirationRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ITwoFactorUpdateExpirationRequest);

        /** TwoFactorUpdateExpirationRequest expireIn. */
        public expireIn: Authentication.TwoFactorExpiration;

        /**
         * Creates a new TwoFactorUpdateExpirationRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TwoFactorUpdateExpirationRequest instance
         */
        public static create(properties?: Authentication.ITwoFactorUpdateExpirationRequest): Authentication.TwoFactorUpdateExpirationRequest;

        /**
         * Encodes the specified TwoFactorUpdateExpirationRequest message. Does not implicitly {@link Authentication.TwoFactorUpdateExpirationRequest.verify|verify} messages.
         * @param message TwoFactorUpdateExpirationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ITwoFactorUpdateExpirationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TwoFactorUpdateExpirationRequest message, length delimited. Does not implicitly {@link Authentication.TwoFactorUpdateExpirationRequest.verify|verify} messages.
         * @param message TwoFactorUpdateExpirationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ITwoFactorUpdateExpirationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TwoFactorUpdateExpirationRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TwoFactorUpdateExpirationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.TwoFactorUpdateExpirationRequest;

        /**
         * Decodes a TwoFactorUpdateExpirationRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TwoFactorUpdateExpirationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.TwoFactorUpdateExpirationRequest;

        /**
         * Verifies a TwoFactorUpdateExpirationRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TwoFactorUpdateExpirationRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TwoFactorUpdateExpirationRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.TwoFactorUpdateExpirationRequest;

        /**
         * Creates a plain object from a TwoFactorUpdateExpirationRequest message. Also converts values to other types if specified.
         * @param message TwoFactorUpdateExpirationRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.TwoFactorUpdateExpirationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TwoFactorUpdateExpirationRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TwoFactorValidateRequest. */
    interface ITwoFactorValidateRequest {

        /** TwoFactorValidateRequest encryptedLoginToken */
        encryptedLoginToken?: (Uint8Array|null);

        /** TwoFactorValidateRequest valueType */
        valueType?: (Authentication.TwoFactorValueType|null);

        /** TwoFactorValidateRequest value */
        value?: (string|null);

        /** TwoFactorValidateRequest channelUid */
        channelUid?: (Uint8Array|null);

        /** TwoFactorValidateRequest expireIn */
        expireIn?: (Authentication.TwoFactorExpiration|null);
    }

    /** Represents a TwoFactorValidateRequest. */
    class TwoFactorValidateRequest implements ITwoFactorValidateRequest {

        /**
         * Constructs a new TwoFactorValidateRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ITwoFactorValidateRequest);

        /** TwoFactorValidateRequest encryptedLoginToken. */
        public encryptedLoginToken: Uint8Array;

        /** TwoFactorValidateRequest valueType. */
        public valueType: Authentication.TwoFactorValueType;

        /** TwoFactorValidateRequest value. */
        public value: string;

        /** TwoFactorValidateRequest channelUid. */
        public channelUid: Uint8Array;

        /** TwoFactorValidateRequest expireIn. */
        public expireIn: Authentication.TwoFactorExpiration;

        /**
         * Creates a new TwoFactorValidateRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TwoFactorValidateRequest instance
         */
        public static create(properties?: Authentication.ITwoFactorValidateRequest): Authentication.TwoFactorValidateRequest;

        /**
         * Encodes the specified TwoFactorValidateRequest message. Does not implicitly {@link Authentication.TwoFactorValidateRequest.verify|verify} messages.
         * @param message TwoFactorValidateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ITwoFactorValidateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TwoFactorValidateRequest message, length delimited. Does not implicitly {@link Authentication.TwoFactorValidateRequest.verify|verify} messages.
         * @param message TwoFactorValidateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ITwoFactorValidateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TwoFactorValidateRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TwoFactorValidateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.TwoFactorValidateRequest;

        /**
         * Decodes a TwoFactorValidateRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TwoFactorValidateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.TwoFactorValidateRequest;

        /**
         * Verifies a TwoFactorValidateRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TwoFactorValidateRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TwoFactorValidateRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.TwoFactorValidateRequest;

        /**
         * Creates a plain object from a TwoFactorValidateRequest message. Also converts values to other types if specified.
         * @param message TwoFactorValidateRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.TwoFactorValidateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TwoFactorValidateRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TwoFactorValidateResponse. */
    interface ITwoFactorValidateResponse {

        /** TwoFactorValidateResponse encryptedLoginToken */
        encryptedLoginToken?: (Uint8Array|null);
    }

    /** Represents a TwoFactorValidateResponse. */
    class TwoFactorValidateResponse implements ITwoFactorValidateResponse {

        /**
         * Constructs a new TwoFactorValidateResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ITwoFactorValidateResponse);

        /** TwoFactorValidateResponse encryptedLoginToken. */
        public encryptedLoginToken: Uint8Array;

        /**
         * Creates a new TwoFactorValidateResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TwoFactorValidateResponse instance
         */
        public static create(properties?: Authentication.ITwoFactorValidateResponse): Authentication.TwoFactorValidateResponse;

        /**
         * Encodes the specified TwoFactorValidateResponse message. Does not implicitly {@link Authentication.TwoFactorValidateResponse.verify|verify} messages.
         * @param message TwoFactorValidateResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ITwoFactorValidateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TwoFactorValidateResponse message, length delimited. Does not implicitly {@link Authentication.TwoFactorValidateResponse.verify|verify} messages.
         * @param message TwoFactorValidateResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ITwoFactorValidateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TwoFactorValidateResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TwoFactorValidateResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.TwoFactorValidateResponse;

        /**
         * Decodes a TwoFactorValidateResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TwoFactorValidateResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.TwoFactorValidateResponse;

        /**
         * Verifies a TwoFactorValidateResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TwoFactorValidateResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TwoFactorValidateResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.TwoFactorValidateResponse;

        /**
         * Creates a plain object from a TwoFactorValidateResponse message. Also converts values to other types if specified.
         * @param message TwoFactorValidateResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.TwoFactorValidateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TwoFactorValidateResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TwoFactorSendPushRequest. */
    interface ITwoFactorSendPushRequest {

        /** TwoFactorSendPushRequest encryptedLoginToken */
        encryptedLoginToken?: (Uint8Array|null);

        /** TwoFactorSendPushRequest pushType */
        pushType?: (Authentication.TwoFactorPushType|null);

        /** TwoFactorSendPushRequest channelUid */
        channelUid?: (Uint8Array|null);

        /** TwoFactorSendPushRequest expireIn */
        expireIn?: (Authentication.TwoFactorExpiration|null);
    }

    /** Represents a TwoFactorSendPushRequest. */
    class TwoFactorSendPushRequest implements ITwoFactorSendPushRequest {

        /**
         * Constructs a new TwoFactorSendPushRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ITwoFactorSendPushRequest);

        /** TwoFactorSendPushRequest encryptedLoginToken. */
        public encryptedLoginToken: Uint8Array;

        /** TwoFactorSendPushRequest pushType. */
        public pushType: Authentication.TwoFactorPushType;

        /** TwoFactorSendPushRequest channelUid. */
        public channelUid: Uint8Array;

        /** TwoFactorSendPushRequest expireIn. */
        public expireIn: Authentication.TwoFactorExpiration;

        /**
         * Creates a new TwoFactorSendPushRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TwoFactorSendPushRequest instance
         */
        public static create(properties?: Authentication.ITwoFactorSendPushRequest): Authentication.TwoFactorSendPushRequest;

        /**
         * Encodes the specified TwoFactorSendPushRequest message. Does not implicitly {@link Authentication.TwoFactorSendPushRequest.verify|verify} messages.
         * @param message TwoFactorSendPushRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ITwoFactorSendPushRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TwoFactorSendPushRequest message, length delimited. Does not implicitly {@link Authentication.TwoFactorSendPushRequest.verify|verify} messages.
         * @param message TwoFactorSendPushRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ITwoFactorSendPushRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TwoFactorSendPushRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TwoFactorSendPushRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.TwoFactorSendPushRequest;

        /**
         * Decodes a TwoFactorSendPushRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TwoFactorSendPushRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.TwoFactorSendPushRequest;

        /**
         * Verifies a TwoFactorSendPushRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TwoFactorSendPushRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TwoFactorSendPushRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.TwoFactorSendPushRequest;

        /**
         * Creates a plain object from a TwoFactorSendPushRequest message. Also converts values to other types if specified.
         * @param message TwoFactorSendPushRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.TwoFactorSendPushRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TwoFactorSendPushRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a License. */
    interface ILicense {

        /** License created */
        created?: (number|Long|null);

        /** License expiration */
        expiration?: (number|Long|null);

        /** License licenseStatus */
        licenseStatus?: (Authentication.LicenseStatus|null);

        /** License paid */
        paid?: (boolean|null);

        /** License message */
        message?: (string|null);
    }

    /** Represents a License. */
    class License implements ILicense {

        /**
         * Constructs a new License.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ILicense);

        /** License created. */
        public created: (number|Long);

        /** License expiration. */
        public expiration: (number|Long);

        /** License licenseStatus. */
        public licenseStatus: Authentication.LicenseStatus;

        /** License paid. */
        public paid: boolean;

        /** License message. */
        public message: string;

        /**
         * Creates a new License instance using the specified properties.
         * @param [properties] Properties to set
         * @returns License instance
         */
        public static create(properties?: Authentication.ILicense): Authentication.License;

        /**
         * Encodes the specified License message. Does not implicitly {@link Authentication.License.verify|verify} messages.
         * @param message License message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ILicense, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified License message, length delimited. Does not implicitly {@link Authentication.License.verify|verify} messages.
         * @param message License message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ILicense, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a License message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns License
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.License;

        /**
         * Decodes a License message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns License
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.License;

        /**
         * Verifies a License message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a License message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns License
         */
        public static fromObject(object: { [k: string]: any }): Authentication.License;

        /**
         * Creates a plain object from a License message. Also converts values to other types if specified.
         * @param message License
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.License, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this License to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** LicenseType enum. */
    enum LicenseType {
        VAULT = 0,
        CHAT = 1,
        STORAGE = 2,
        BREACHWATCH = 3
    }

    /** Properties of an OwnerlessRecord. */
    interface IOwnerlessRecord {

        /** OwnerlessRecord recordUid */
        recordUid?: (Uint8Array|null);

        /** OwnerlessRecord recordKey */
        recordKey?: (Uint8Array|null);

        /** OwnerlessRecord status */
        status?: (number|null);
    }

    /** Represents an OwnerlessRecord. */
    class OwnerlessRecord implements IOwnerlessRecord {

        /**
         * Constructs a new OwnerlessRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IOwnerlessRecord);

        /** OwnerlessRecord recordUid. */
        public recordUid: Uint8Array;

        /** OwnerlessRecord recordKey. */
        public recordKey: Uint8Array;

        /** OwnerlessRecord status. */
        public status: number;

        /**
         * Creates a new OwnerlessRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OwnerlessRecord instance
         */
        public static create(properties?: Authentication.IOwnerlessRecord): Authentication.OwnerlessRecord;

        /**
         * Encodes the specified OwnerlessRecord message. Does not implicitly {@link Authentication.OwnerlessRecord.verify|verify} messages.
         * @param message OwnerlessRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IOwnerlessRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OwnerlessRecord message, length delimited. Does not implicitly {@link Authentication.OwnerlessRecord.verify|verify} messages.
         * @param message OwnerlessRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IOwnerlessRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OwnerlessRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OwnerlessRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.OwnerlessRecord;

        /**
         * Decodes an OwnerlessRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OwnerlessRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.OwnerlessRecord;

        /**
         * Verifies an OwnerlessRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OwnerlessRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OwnerlessRecord
         */
        public static fromObject(object: { [k: string]: any }): Authentication.OwnerlessRecord;

        /**
         * Creates a plain object from an OwnerlessRecord message. Also converts values to other types if specified.
         * @param message OwnerlessRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.OwnerlessRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OwnerlessRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OwnerlessRecords. */
    interface IOwnerlessRecords {

        /** OwnerlessRecords ownerlessRecord */
        ownerlessRecord?: (Authentication.IOwnerlessRecord[]|null);
    }

    /** Represents an OwnerlessRecords. */
    class OwnerlessRecords implements IOwnerlessRecords {

        /**
         * Constructs a new OwnerlessRecords.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IOwnerlessRecords);

        /** OwnerlessRecords ownerlessRecord. */
        public ownerlessRecord: Authentication.IOwnerlessRecord[];

        /**
         * Creates a new OwnerlessRecords instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OwnerlessRecords instance
         */
        public static create(properties?: Authentication.IOwnerlessRecords): Authentication.OwnerlessRecords;

        /**
         * Encodes the specified OwnerlessRecords message. Does not implicitly {@link Authentication.OwnerlessRecords.verify|verify} messages.
         * @param message OwnerlessRecords message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IOwnerlessRecords, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OwnerlessRecords message, length delimited. Does not implicitly {@link Authentication.OwnerlessRecords.verify|verify} messages.
         * @param message OwnerlessRecords message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IOwnerlessRecords, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OwnerlessRecords message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OwnerlessRecords
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.OwnerlessRecords;

        /**
         * Decodes an OwnerlessRecords message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OwnerlessRecords
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.OwnerlessRecords;

        /**
         * Verifies an OwnerlessRecords message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OwnerlessRecords message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OwnerlessRecords
         */
        public static fromObject(object: { [k: string]: any }): Authentication.OwnerlessRecords;

        /**
         * Creates a plain object from an OwnerlessRecords message. Also converts values to other types if specified.
         * @param message OwnerlessRecords
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.OwnerlessRecords, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OwnerlessRecords to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserAuthRequest. */
    interface IUserAuthRequest {

        /** UserAuthRequest uid */
        uid?: (Uint8Array|null);

        /** UserAuthRequest salt */
        salt?: (Uint8Array|null);

        /** UserAuthRequest iterations */
        iterations?: (number|null);

        /** UserAuthRequest encryptedClientKey */
        encryptedClientKey?: (Uint8Array|null);

        /** UserAuthRequest authHash */
        authHash?: (Uint8Array|null);

        /** UserAuthRequest encryptedDataKey */
        encryptedDataKey?: (Uint8Array|null);

        /** UserAuthRequest loginType */
        loginType?: (Authentication.LoginType|null);

        /** UserAuthRequest name */
        name?: (string|null);

        /** UserAuthRequest algorithm */
        algorithm?: (number|null);
    }

    /** Represents a UserAuthRequest. */
    class UserAuthRequest implements IUserAuthRequest {

        /**
         * Constructs a new UserAuthRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IUserAuthRequest);

        /** UserAuthRequest uid. */
        public uid: Uint8Array;

        /** UserAuthRequest salt. */
        public salt: Uint8Array;

        /** UserAuthRequest iterations. */
        public iterations: number;

        /** UserAuthRequest encryptedClientKey. */
        public encryptedClientKey: Uint8Array;

        /** UserAuthRequest authHash. */
        public authHash: Uint8Array;

        /** UserAuthRequest encryptedDataKey. */
        public encryptedDataKey: Uint8Array;

        /** UserAuthRequest loginType. */
        public loginType: Authentication.LoginType;

        /** UserAuthRequest name. */
        public name: string;

        /** UserAuthRequest algorithm. */
        public algorithm: number;

        /**
         * Creates a new UserAuthRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserAuthRequest instance
         */
        public static create(properties?: Authentication.IUserAuthRequest): Authentication.UserAuthRequest;

        /**
         * Encodes the specified UserAuthRequest message. Does not implicitly {@link Authentication.UserAuthRequest.verify|verify} messages.
         * @param message UserAuthRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IUserAuthRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserAuthRequest message, length delimited. Does not implicitly {@link Authentication.UserAuthRequest.verify|verify} messages.
         * @param message UserAuthRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IUserAuthRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserAuthRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserAuthRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.UserAuthRequest;

        /**
         * Decodes a UserAuthRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserAuthRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.UserAuthRequest;

        /**
         * Verifies a UserAuthRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserAuthRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserAuthRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.UserAuthRequest;

        /**
         * Creates a plain object from a UserAuthRequest message. Also converts values to other types if specified.
         * @param message UserAuthRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.UserAuthRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserAuthRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UidRequest. */
    interface IUidRequest {

        /** UidRequest uid */
        uid?: (Uint8Array[]|null);
    }

    /** Represents an UidRequest. */
    class UidRequest implements IUidRequest {

        /**
         * Constructs a new UidRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IUidRequest);

        /** UidRequest uid. */
        public uid: Uint8Array[];

        /**
         * Creates a new UidRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UidRequest instance
         */
        public static create(properties?: Authentication.IUidRequest): Authentication.UidRequest;

        /**
         * Encodes the specified UidRequest message. Does not implicitly {@link Authentication.UidRequest.verify|verify} messages.
         * @param message UidRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IUidRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UidRequest message, length delimited. Does not implicitly {@link Authentication.UidRequest.verify|verify} messages.
         * @param message UidRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IUidRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UidRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UidRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.UidRequest;

        /**
         * Decodes an UidRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UidRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.UidRequest;

        /**
         * Verifies an UidRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UidRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UidRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.UidRequest;

        /**
         * Creates a plain object from an UidRequest message. Also converts values to other types if specified.
         * @param message UidRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.UidRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UidRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeviceUpdateRequest. */
    interface IDeviceUpdateRequest {

        /** DeviceUpdateRequest encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);

        /** DeviceUpdateRequest clientVersion */
        clientVersion?: (string|null);

        /** DeviceUpdateRequest deviceName */
        deviceName?: (string|null);

        /** DeviceUpdateRequest devicePublicKey */
        devicePublicKey?: (Uint8Array|null);

        /** DeviceUpdateRequest deviceStatus */
        deviceStatus?: (Authentication.DeviceStatus|null);
    }

    /** Represents a DeviceUpdateRequest. */
    class DeviceUpdateRequest implements IDeviceUpdateRequest {

        /**
         * Constructs a new DeviceUpdateRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IDeviceUpdateRequest);

        /** DeviceUpdateRequest encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /** DeviceUpdateRequest clientVersion. */
        public clientVersion: string;

        /** DeviceUpdateRequest deviceName. */
        public deviceName: string;

        /** DeviceUpdateRequest devicePublicKey. */
        public devicePublicKey: Uint8Array;

        /** DeviceUpdateRequest deviceStatus. */
        public deviceStatus: Authentication.DeviceStatus;

        /**
         * Creates a new DeviceUpdateRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeviceUpdateRequest instance
         */
        public static create(properties?: Authentication.IDeviceUpdateRequest): Authentication.DeviceUpdateRequest;

        /**
         * Encodes the specified DeviceUpdateRequest message. Does not implicitly {@link Authentication.DeviceUpdateRequest.verify|verify} messages.
         * @param message DeviceUpdateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IDeviceUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeviceUpdateRequest message, length delimited. Does not implicitly {@link Authentication.DeviceUpdateRequest.verify|verify} messages.
         * @param message DeviceUpdateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IDeviceUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeviceUpdateRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeviceUpdateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.DeviceUpdateRequest;

        /**
         * Decodes a DeviceUpdateRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeviceUpdateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.DeviceUpdateRequest;

        /**
         * Verifies a DeviceUpdateRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeviceUpdateRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeviceUpdateRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.DeviceUpdateRequest;

        /**
         * Creates a plain object from a DeviceUpdateRequest message. Also converts values to other types if specified.
         * @param message DeviceUpdateRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.DeviceUpdateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeviceUpdateRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RegisterDeviceInRegionRequest. */
    interface IRegisterDeviceInRegionRequest {

        /** RegisterDeviceInRegionRequest encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);

        /** RegisterDeviceInRegionRequest clientVersion */
        clientVersion?: (string|null);

        /** RegisterDeviceInRegionRequest deviceName */
        deviceName?: (string|null);

        /** RegisterDeviceInRegionRequest devicePublicKey */
        devicePublicKey?: (Uint8Array|null);
    }

    /** Represents a RegisterDeviceInRegionRequest. */
    class RegisterDeviceInRegionRequest implements IRegisterDeviceInRegionRequest {

        /**
         * Constructs a new RegisterDeviceInRegionRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IRegisterDeviceInRegionRequest);

        /** RegisterDeviceInRegionRequest encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /** RegisterDeviceInRegionRequest clientVersion. */
        public clientVersion: string;

        /** RegisterDeviceInRegionRequest deviceName. */
        public deviceName: string;

        /** RegisterDeviceInRegionRequest devicePublicKey. */
        public devicePublicKey: Uint8Array;

        /**
         * Creates a new RegisterDeviceInRegionRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RegisterDeviceInRegionRequest instance
         */
        public static create(properties?: Authentication.IRegisterDeviceInRegionRequest): Authentication.RegisterDeviceInRegionRequest;

        /**
         * Encodes the specified RegisterDeviceInRegionRequest message. Does not implicitly {@link Authentication.RegisterDeviceInRegionRequest.verify|verify} messages.
         * @param message RegisterDeviceInRegionRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IRegisterDeviceInRegionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RegisterDeviceInRegionRequest message, length delimited. Does not implicitly {@link Authentication.RegisterDeviceInRegionRequest.verify|verify} messages.
         * @param message RegisterDeviceInRegionRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IRegisterDeviceInRegionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RegisterDeviceInRegionRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RegisterDeviceInRegionRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.RegisterDeviceInRegionRequest;

        /**
         * Decodes a RegisterDeviceInRegionRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RegisterDeviceInRegionRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.RegisterDeviceInRegionRequest;

        /**
         * Verifies a RegisterDeviceInRegionRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RegisterDeviceInRegionRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RegisterDeviceInRegionRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.RegisterDeviceInRegionRequest;

        /**
         * Creates a plain object from a RegisterDeviceInRegionRequest message. Also converts values to other types if specified.
         * @param message RegisterDeviceInRegionRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.RegisterDeviceInRegionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RegisterDeviceInRegionRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RegistrationRequest. */
    interface IRegistrationRequest {

        /** RegistrationRequest authRequest */
        authRequest?: (Authentication.IAuthRequest|null);

        /** RegistrationRequest userAuthRequest */
        userAuthRequest?: (Authentication.IUserAuthRequest|null);

        /** RegistrationRequest encryptedClientKey */
        encryptedClientKey?: (Uint8Array|null);

        /** RegistrationRequest encryptedPrivateKey */
        encryptedPrivateKey?: (Uint8Array|null);

        /** RegistrationRequest publicKey */
        publicKey?: (Uint8Array|null);

        /** RegistrationRequest verificationCode */
        verificationCode?: (string|null);

        /** RegistrationRequest deprecatedAuthHashHash */
        deprecatedAuthHashHash?: (Uint8Array|null);

        /** RegistrationRequest deprecatedEncryptedClientKey */
        deprecatedEncryptedClientKey?: (Uint8Array|null);

        /** RegistrationRequest deprecatedEncryptedPrivateKey */
        deprecatedEncryptedPrivateKey?: (Uint8Array|null);

        /** RegistrationRequest deprecatedEncryptionParams */
        deprecatedEncryptionParams?: (Uint8Array|null);
    }

    /** Represents a RegistrationRequest. */
    class RegistrationRequest implements IRegistrationRequest {

        /**
         * Constructs a new RegistrationRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IRegistrationRequest);

        /** RegistrationRequest authRequest. */
        public authRequest?: (Authentication.IAuthRequest|null);

        /** RegistrationRequest userAuthRequest. */
        public userAuthRequest?: (Authentication.IUserAuthRequest|null);

        /** RegistrationRequest encryptedClientKey. */
        public encryptedClientKey: Uint8Array;

        /** RegistrationRequest encryptedPrivateKey. */
        public encryptedPrivateKey: Uint8Array;

        /** RegistrationRequest publicKey. */
        public publicKey: Uint8Array;

        /** RegistrationRequest verificationCode. */
        public verificationCode: string;

        /** RegistrationRequest deprecatedAuthHashHash. */
        public deprecatedAuthHashHash: Uint8Array;

        /** RegistrationRequest deprecatedEncryptedClientKey. */
        public deprecatedEncryptedClientKey: Uint8Array;

        /** RegistrationRequest deprecatedEncryptedPrivateKey. */
        public deprecatedEncryptedPrivateKey: Uint8Array;

        /** RegistrationRequest deprecatedEncryptionParams. */
        public deprecatedEncryptionParams: Uint8Array;

        /**
         * Creates a new RegistrationRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RegistrationRequest instance
         */
        public static create(properties?: Authentication.IRegistrationRequest): Authentication.RegistrationRequest;

        /**
         * Encodes the specified RegistrationRequest message. Does not implicitly {@link Authentication.RegistrationRequest.verify|verify} messages.
         * @param message RegistrationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IRegistrationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RegistrationRequest message, length delimited. Does not implicitly {@link Authentication.RegistrationRequest.verify|verify} messages.
         * @param message RegistrationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IRegistrationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RegistrationRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RegistrationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.RegistrationRequest;

        /**
         * Decodes a RegistrationRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RegistrationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.RegistrationRequest;

        /**
         * Verifies a RegistrationRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RegistrationRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RegistrationRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.RegistrationRequest;

        /**
         * Creates a plain object from a RegistrationRequest message. Also converts values to other types if specified.
         * @param message RegistrationRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.RegistrationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RegistrationRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConvertUserToV3Request. */
    interface IConvertUserToV3Request {

        /** ConvertUserToV3Request authRequest */
        authRequest?: (Authentication.IAuthRequest|null);

        /** ConvertUserToV3Request userAuthRequest */
        userAuthRequest?: (Authentication.IUserAuthRequest|null);

        /** ConvertUserToV3Request encryptedClientKey */
        encryptedClientKey?: (Uint8Array|null);

        /** ConvertUserToV3Request encryptedPrivateKey */
        encryptedPrivateKey?: (Uint8Array|null);

        /** ConvertUserToV3Request publicKey */
        publicKey?: (Uint8Array|null);
    }

    /** Represents a ConvertUserToV3Request. */
    class ConvertUserToV3Request implements IConvertUserToV3Request {

        /**
         * Constructs a new ConvertUserToV3Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IConvertUserToV3Request);

        /** ConvertUserToV3Request authRequest. */
        public authRequest?: (Authentication.IAuthRequest|null);

        /** ConvertUserToV3Request userAuthRequest. */
        public userAuthRequest?: (Authentication.IUserAuthRequest|null);

        /** ConvertUserToV3Request encryptedClientKey. */
        public encryptedClientKey: Uint8Array;

        /** ConvertUserToV3Request encryptedPrivateKey. */
        public encryptedPrivateKey: Uint8Array;

        /** ConvertUserToV3Request publicKey. */
        public publicKey: Uint8Array;

        /**
         * Creates a new ConvertUserToV3Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConvertUserToV3Request instance
         */
        public static create(properties?: Authentication.IConvertUserToV3Request): Authentication.ConvertUserToV3Request;

        /**
         * Encodes the specified ConvertUserToV3Request message. Does not implicitly {@link Authentication.ConvertUserToV3Request.verify|verify} messages.
         * @param message ConvertUserToV3Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IConvertUserToV3Request, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConvertUserToV3Request message, length delimited. Does not implicitly {@link Authentication.ConvertUserToV3Request.verify|verify} messages.
         * @param message ConvertUserToV3Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IConvertUserToV3Request, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConvertUserToV3Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConvertUserToV3Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ConvertUserToV3Request;

        /**
         * Decodes a ConvertUserToV3Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConvertUserToV3Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ConvertUserToV3Request;

        /**
         * Verifies a ConvertUserToV3Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConvertUserToV3Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConvertUserToV3Request
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ConvertUserToV3Request;

        /**
         * Creates a plain object from a ConvertUserToV3Request message. Also converts values to other types if specified.
         * @param message ConvertUserToV3Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ConvertUserToV3Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConvertUserToV3Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RevisionResponse. */
    interface IRevisionResponse {

        /** RevisionResponse revision */
        revision?: (number|Long|null);
    }

    /** Represents a RevisionResponse. */
    class RevisionResponse implements IRevisionResponse {

        /**
         * Constructs a new RevisionResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IRevisionResponse);

        /** RevisionResponse revision. */
        public revision: (number|Long);

        /**
         * Creates a new RevisionResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RevisionResponse instance
         */
        public static create(properties?: Authentication.IRevisionResponse): Authentication.RevisionResponse;

        /**
         * Encodes the specified RevisionResponse message. Does not implicitly {@link Authentication.RevisionResponse.verify|verify} messages.
         * @param message RevisionResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IRevisionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RevisionResponse message, length delimited. Does not implicitly {@link Authentication.RevisionResponse.verify|verify} messages.
         * @param message RevisionResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IRevisionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RevisionResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RevisionResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.RevisionResponse;

        /**
         * Decodes a RevisionResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RevisionResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.RevisionResponse;

        /**
         * Verifies a RevisionResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RevisionResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RevisionResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.RevisionResponse;

        /**
         * Creates a plain object from a RevisionResponse message. Also converts values to other types if specified.
         * @param message RevisionResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.RevisionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RevisionResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChangeEmailRequest. */
    interface IChangeEmailRequest {

        /** ChangeEmailRequest newEmail */
        newEmail?: (string|null);
    }

    /** Represents a ChangeEmailRequest. */
    class ChangeEmailRequest implements IChangeEmailRequest {

        /**
         * Constructs a new ChangeEmailRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IChangeEmailRequest);

        /** ChangeEmailRequest newEmail. */
        public newEmail: string;

        /**
         * Creates a new ChangeEmailRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeEmailRequest instance
         */
        public static create(properties?: Authentication.IChangeEmailRequest): Authentication.ChangeEmailRequest;

        /**
         * Encodes the specified ChangeEmailRequest message. Does not implicitly {@link Authentication.ChangeEmailRequest.verify|verify} messages.
         * @param message ChangeEmailRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IChangeEmailRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChangeEmailRequest message, length delimited. Does not implicitly {@link Authentication.ChangeEmailRequest.verify|verify} messages.
         * @param message ChangeEmailRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IChangeEmailRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChangeEmailRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeEmailRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ChangeEmailRequest;

        /**
         * Decodes a ChangeEmailRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeEmailRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ChangeEmailRequest;

        /**
         * Verifies a ChangeEmailRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeEmailRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeEmailRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ChangeEmailRequest;

        /**
         * Creates a plain object from a ChangeEmailRequest message. Also converts values to other types if specified.
         * @param message ChangeEmailRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ChangeEmailRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeEmailRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChangeEmailResponse. */
    interface IChangeEmailResponse {

        /** ChangeEmailResponse encryptedChangeEmailToken */
        encryptedChangeEmailToken?: (Uint8Array|null);
    }

    /** Represents a ChangeEmailResponse. */
    class ChangeEmailResponse implements IChangeEmailResponse {

        /**
         * Constructs a new ChangeEmailResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IChangeEmailResponse);

        /** ChangeEmailResponse encryptedChangeEmailToken. */
        public encryptedChangeEmailToken: Uint8Array;

        /**
         * Creates a new ChangeEmailResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeEmailResponse instance
         */
        public static create(properties?: Authentication.IChangeEmailResponse): Authentication.ChangeEmailResponse;

        /**
         * Encodes the specified ChangeEmailResponse message. Does not implicitly {@link Authentication.ChangeEmailResponse.verify|verify} messages.
         * @param message ChangeEmailResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IChangeEmailResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChangeEmailResponse message, length delimited. Does not implicitly {@link Authentication.ChangeEmailResponse.verify|verify} messages.
         * @param message ChangeEmailResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IChangeEmailResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChangeEmailResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeEmailResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ChangeEmailResponse;

        /**
         * Decodes a ChangeEmailResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeEmailResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ChangeEmailResponse;

        /**
         * Verifies a ChangeEmailResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeEmailResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeEmailResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ChangeEmailResponse;

        /**
         * Creates a plain object from a ChangeEmailResponse message. Also converts values to other types if specified.
         * @param message ChangeEmailResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ChangeEmailResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeEmailResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EmailVerificationLinkResponse. */
    interface IEmailVerificationLinkResponse {

        /** EmailVerificationLinkResponse emailVerified */
        emailVerified?: (boolean|null);
    }

    /** Represents an EmailVerificationLinkResponse. */
    class EmailVerificationLinkResponse implements IEmailVerificationLinkResponse {

        /**
         * Constructs a new EmailVerificationLinkResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IEmailVerificationLinkResponse);

        /** EmailVerificationLinkResponse emailVerified. */
        public emailVerified: boolean;

        /**
         * Creates a new EmailVerificationLinkResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EmailVerificationLinkResponse instance
         */
        public static create(properties?: Authentication.IEmailVerificationLinkResponse): Authentication.EmailVerificationLinkResponse;

        /**
         * Encodes the specified EmailVerificationLinkResponse message. Does not implicitly {@link Authentication.EmailVerificationLinkResponse.verify|verify} messages.
         * @param message EmailVerificationLinkResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IEmailVerificationLinkResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EmailVerificationLinkResponse message, length delimited. Does not implicitly {@link Authentication.EmailVerificationLinkResponse.verify|verify} messages.
         * @param message EmailVerificationLinkResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IEmailVerificationLinkResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EmailVerificationLinkResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EmailVerificationLinkResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.EmailVerificationLinkResponse;

        /**
         * Decodes an EmailVerificationLinkResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EmailVerificationLinkResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.EmailVerificationLinkResponse;

        /**
         * Verifies an EmailVerificationLinkResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EmailVerificationLinkResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EmailVerificationLinkResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.EmailVerificationLinkResponse;

        /**
         * Creates a plain object from an EmailVerificationLinkResponse message. Also converts values to other types if specified.
         * @param message EmailVerificationLinkResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.EmailVerificationLinkResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EmailVerificationLinkResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SecurityData. */
    interface ISecurityData {

        /** SecurityData uid */
        uid?: (Uint8Array|null);

        /** SecurityData data */
        data?: (Uint8Array|null);
    }

    /** Represents a SecurityData. */
    class SecurityData implements ISecurityData {

        /**
         * Constructs a new SecurityData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ISecurityData);

        /** SecurityData uid. */
        public uid: Uint8Array;

        /** SecurityData data. */
        public data: Uint8Array;

        /**
         * Creates a new SecurityData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecurityData instance
         */
        public static create(properties?: Authentication.ISecurityData): Authentication.SecurityData;

        /**
         * Encodes the specified SecurityData message. Does not implicitly {@link Authentication.SecurityData.verify|verify} messages.
         * @param message SecurityData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ISecurityData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecurityData message, length delimited. Does not implicitly {@link Authentication.SecurityData.verify|verify} messages.
         * @param message SecurityData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ISecurityData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecurityData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecurityData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.SecurityData;

        /**
         * Decodes a SecurityData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecurityData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.SecurityData;

        /**
         * Verifies a SecurityData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecurityData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecurityData
         */
        public static fromObject(object: { [k: string]: any }): Authentication.SecurityData;

        /**
         * Creates a plain object from a SecurityData message. Also converts values to other types if specified.
         * @param message SecurityData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.SecurityData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecurityData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SecurityDataRequest. */
    interface ISecurityDataRequest {

        /** SecurityDataRequest recordSecurityData */
        recordSecurityData?: (Authentication.ISecurityData[]|null);

        /** SecurityDataRequest masterPasswordSecurityData */
        masterPasswordSecurityData?: (Authentication.ISecurityData[]|null);
    }

    /** Represents a SecurityDataRequest. */
    class SecurityDataRequest implements ISecurityDataRequest {

        /**
         * Constructs a new SecurityDataRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ISecurityDataRequest);

        /** SecurityDataRequest recordSecurityData. */
        public recordSecurityData: Authentication.ISecurityData[];

        /** SecurityDataRequest masterPasswordSecurityData. */
        public masterPasswordSecurityData: Authentication.ISecurityData[];

        /**
         * Creates a new SecurityDataRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecurityDataRequest instance
         */
        public static create(properties?: Authentication.ISecurityDataRequest): Authentication.SecurityDataRequest;

        /**
         * Encodes the specified SecurityDataRequest message. Does not implicitly {@link Authentication.SecurityDataRequest.verify|verify} messages.
         * @param message SecurityDataRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ISecurityDataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecurityDataRequest message, length delimited. Does not implicitly {@link Authentication.SecurityDataRequest.verify|verify} messages.
         * @param message SecurityDataRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ISecurityDataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecurityDataRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecurityDataRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.SecurityDataRequest;

        /**
         * Decodes a SecurityDataRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecurityDataRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.SecurityDataRequest;

        /**
         * Verifies a SecurityDataRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecurityDataRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecurityDataRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.SecurityDataRequest;

        /**
         * Creates a plain object from a SecurityDataRequest message. Also converts values to other types if specified.
         * @param message SecurityDataRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.SecurityDataRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecurityDataRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SecurityReportIncrementalData. */
    interface ISecurityReportIncrementalData {

        /** SecurityReportIncrementalData enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** SecurityReportIncrementalData currentSecurityData */
        currentSecurityData?: (Uint8Array|null);

        /** SecurityReportIncrementalData currentSecurityDataRevision */
        currentSecurityDataRevision?: (number|Long|null);

        /** SecurityReportIncrementalData oldSecurityData */
        oldSecurityData?: (Uint8Array|null);

        /** SecurityReportIncrementalData oldSecurityDataRevision */
        oldSecurityDataRevision?: (number|Long|null);
    }

    /** Represents a SecurityReportIncrementalData. */
    class SecurityReportIncrementalData implements ISecurityReportIncrementalData {

        /**
         * Constructs a new SecurityReportIncrementalData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ISecurityReportIncrementalData);

        /** SecurityReportIncrementalData enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** SecurityReportIncrementalData currentSecurityData. */
        public currentSecurityData: Uint8Array;

        /** SecurityReportIncrementalData currentSecurityDataRevision. */
        public currentSecurityDataRevision: (number|Long);

        /** SecurityReportIncrementalData oldSecurityData. */
        public oldSecurityData: Uint8Array;

        /** SecurityReportIncrementalData oldSecurityDataRevision. */
        public oldSecurityDataRevision: (number|Long);

        /**
         * Creates a new SecurityReportIncrementalData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecurityReportIncrementalData instance
         */
        public static create(properties?: Authentication.ISecurityReportIncrementalData): Authentication.SecurityReportIncrementalData;

        /**
         * Encodes the specified SecurityReportIncrementalData message. Does not implicitly {@link Authentication.SecurityReportIncrementalData.verify|verify} messages.
         * @param message SecurityReportIncrementalData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ISecurityReportIncrementalData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecurityReportIncrementalData message, length delimited. Does not implicitly {@link Authentication.SecurityReportIncrementalData.verify|verify} messages.
         * @param message SecurityReportIncrementalData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ISecurityReportIncrementalData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecurityReportIncrementalData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecurityReportIncrementalData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.SecurityReportIncrementalData;

        /**
         * Decodes a SecurityReportIncrementalData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecurityReportIncrementalData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.SecurityReportIncrementalData;

        /**
         * Verifies a SecurityReportIncrementalData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecurityReportIncrementalData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecurityReportIncrementalData
         */
        public static fromObject(object: { [k: string]: any }): Authentication.SecurityReportIncrementalData;

        /**
         * Creates a plain object from a SecurityReportIncrementalData message. Also converts values to other types if specified.
         * @param message SecurityReportIncrementalData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.SecurityReportIncrementalData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecurityReportIncrementalData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SecurityReport. */
    interface ISecurityReport {

        /** SecurityReport enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** SecurityReport encryptedReportData */
        encryptedReportData?: (Uint8Array|null);

        /** SecurityReport revision */
        revision?: (number|Long|null);

        /** SecurityReport twoFactor */
        twoFactor?: (string|null);

        /** SecurityReport lastLogin */
        lastLogin?: (number|Long|null);

        /** SecurityReport numberOfReusedPassword */
        numberOfReusedPassword?: (number|null);

        /** SecurityReport securityReportIncrementalData */
        securityReportIncrementalData?: (Authentication.ISecurityReportIncrementalData[]|null);

        /** SecurityReport userId */
        userId?: (number|null);
    }

    /** Represents a SecurityReport. */
    class SecurityReport implements ISecurityReport {

        /**
         * Constructs a new SecurityReport.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ISecurityReport);

        /** SecurityReport enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** SecurityReport encryptedReportData. */
        public encryptedReportData: Uint8Array;

        /** SecurityReport revision. */
        public revision: (number|Long);

        /** SecurityReport twoFactor. */
        public twoFactor: string;

        /** SecurityReport lastLogin. */
        public lastLogin: (number|Long);

        /** SecurityReport numberOfReusedPassword. */
        public numberOfReusedPassword: number;

        /** SecurityReport securityReportIncrementalData. */
        public securityReportIncrementalData: Authentication.ISecurityReportIncrementalData[];

        /** SecurityReport userId. */
        public userId: number;

        /**
         * Creates a new SecurityReport instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecurityReport instance
         */
        public static create(properties?: Authentication.ISecurityReport): Authentication.SecurityReport;

        /**
         * Encodes the specified SecurityReport message. Does not implicitly {@link Authentication.SecurityReport.verify|verify} messages.
         * @param message SecurityReport message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ISecurityReport, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecurityReport message, length delimited. Does not implicitly {@link Authentication.SecurityReport.verify|verify} messages.
         * @param message SecurityReport message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ISecurityReport, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecurityReport message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecurityReport
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.SecurityReport;

        /**
         * Decodes a SecurityReport message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecurityReport
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.SecurityReport;

        /**
         * Verifies a SecurityReport message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecurityReport message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecurityReport
         */
        public static fromObject(object: { [k: string]: any }): Authentication.SecurityReport;

        /**
         * Creates a plain object from a SecurityReport message. Also converts values to other types if specified.
         * @param message SecurityReport
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.SecurityReport, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecurityReport to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SecurityReportSaveRequest. */
    interface ISecurityReportSaveRequest {

        /** SecurityReportSaveRequest securityReport */
        securityReport?: (Authentication.ISecurityReport[]|null);
    }

    /** Represents a SecurityReportSaveRequest. */
    class SecurityReportSaveRequest implements ISecurityReportSaveRequest {

        /**
         * Constructs a new SecurityReportSaveRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ISecurityReportSaveRequest);

        /** SecurityReportSaveRequest securityReport. */
        public securityReport: Authentication.ISecurityReport[];

        /**
         * Creates a new SecurityReportSaveRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecurityReportSaveRequest instance
         */
        public static create(properties?: Authentication.ISecurityReportSaveRequest): Authentication.SecurityReportSaveRequest;

        /**
         * Encodes the specified SecurityReportSaveRequest message. Does not implicitly {@link Authentication.SecurityReportSaveRequest.verify|verify} messages.
         * @param message SecurityReportSaveRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ISecurityReportSaveRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecurityReportSaveRequest message, length delimited. Does not implicitly {@link Authentication.SecurityReportSaveRequest.verify|verify} messages.
         * @param message SecurityReportSaveRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ISecurityReportSaveRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecurityReportSaveRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecurityReportSaveRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.SecurityReportSaveRequest;

        /**
         * Decodes a SecurityReportSaveRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecurityReportSaveRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.SecurityReportSaveRequest;

        /**
         * Verifies a SecurityReportSaveRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecurityReportSaveRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecurityReportSaveRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.SecurityReportSaveRequest;

        /**
         * Creates a plain object from a SecurityReportSaveRequest message. Also converts values to other types if specified.
         * @param message SecurityReportSaveRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.SecurityReportSaveRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecurityReportSaveRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SecurityReportRequest. */
    interface ISecurityReportRequest {

        /** SecurityReportRequest fromPage */
        fromPage?: (number|Long|null);
    }

    /** Represents a SecurityReportRequest. */
    class SecurityReportRequest implements ISecurityReportRequest {

        /**
         * Constructs a new SecurityReportRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ISecurityReportRequest);

        /** SecurityReportRequest fromPage. */
        public fromPage: (number|Long);

        /**
         * Creates a new SecurityReportRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecurityReportRequest instance
         */
        public static create(properties?: Authentication.ISecurityReportRequest): Authentication.SecurityReportRequest;

        /**
         * Encodes the specified SecurityReportRequest message. Does not implicitly {@link Authentication.SecurityReportRequest.verify|verify} messages.
         * @param message SecurityReportRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ISecurityReportRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecurityReportRequest message, length delimited. Does not implicitly {@link Authentication.SecurityReportRequest.verify|verify} messages.
         * @param message SecurityReportRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ISecurityReportRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecurityReportRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecurityReportRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.SecurityReportRequest;

        /**
         * Decodes a SecurityReportRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecurityReportRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.SecurityReportRequest;

        /**
         * Verifies a SecurityReportRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecurityReportRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecurityReportRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.SecurityReportRequest;

        /**
         * Creates a plain object from a SecurityReportRequest message. Also converts values to other types if specified.
         * @param message SecurityReportRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.SecurityReportRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecurityReportRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SecurityReportResponse. */
    interface ISecurityReportResponse {

        /** SecurityReportResponse enterprisePrivateKey */
        enterprisePrivateKey?: (Uint8Array|null);

        /** SecurityReportResponse securityReport */
        securityReport?: (Authentication.ISecurityReport[]|null);

        /** SecurityReportResponse asOfRevision */
        asOfRevision?: (number|Long|null);

        /** SecurityReportResponse fromPage */
        fromPage?: (number|Long|null);

        /** SecurityReportResponse toPage */
        toPage?: (number|Long|null);

        /** SecurityReportResponse complete */
        complete?: (boolean|null);
    }

    /** Represents a SecurityReportResponse. */
    class SecurityReportResponse implements ISecurityReportResponse {

        /**
         * Constructs a new SecurityReportResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ISecurityReportResponse);

        /** SecurityReportResponse enterprisePrivateKey. */
        public enterprisePrivateKey: Uint8Array;

        /** SecurityReportResponse securityReport. */
        public securityReport: Authentication.ISecurityReport[];

        /** SecurityReportResponse asOfRevision. */
        public asOfRevision: (number|Long);

        /** SecurityReportResponse fromPage. */
        public fromPage: (number|Long);

        /** SecurityReportResponse toPage. */
        public toPage: (number|Long);

        /** SecurityReportResponse complete. */
        public complete: boolean;

        /**
         * Creates a new SecurityReportResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecurityReportResponse instance
         */
        public static create(properties?: Authentication.ISecurityReportResponse): Authentication.SecurityReportResponse;

        /**
         * Encodes the specified SecurityReportResponse message. Does not implicitly {@link Authentication.SecurityReportResponse.verify|verify} messages.
         * @param message SecurityReportResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ISecurityReportResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecurityReportResponse message, length delimited. Does not implicitly {@link Authentication.SecurityReportResponse.verify|verify} messages.
         * @param message SecurityReportResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ISecurityReportResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecurityReportResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecurityReportResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.SecurityReportResponse;

        /**
         * Decodes a SecurityReportResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecurityReportResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.SecurityReportResponse;

        /**
         * Verifies a SecurityReportResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecurityReportResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecurityReportResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.SecurityReportResponse;

        /**
         * Creates a plain object from a SecurityReportResponse message. Also converts values to other types if specified.
         * @param message SecurityReportResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.SecurityReportResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecurityReportResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReusedPasswordsRequest. */
    interface IReusedPasswordsRequest {

        /** ReusedPasswordsRequest count */
        count?: (number|null);
    }

    /** Represents a ReusedPasswordsRequest. */
    class ReusedPasswordsRequest implements IReusedPasswordsRequest {

        /**
         * Constructs a new ReusedPasswordsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IReusedPasswordsRequest);

        /** ReusedPasswordsRequest count. */
        public count: number;

        /**
         * Creates a new ReusedPasswordsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReusedPasswordsRequest instance
         */
        public static create(properties?: Authentication.IReusedPasswordsRequest): Authentication.ReusedPasswordsRequest;

        /**
         * Encodes the specified ReusedPasswordsRequest message. Does not implicitly {@link Authentication.ReusedPasswordsRequest.verify|verify} messages.
         * @param message ReusedPasswordsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IReusedPasswordsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReusedPasswordsRequest message, length delimited. Does not implicitly {@link Authentication.ReusedPasswordsRequest.verify|verify} messages.
         * @param message ReusedPasswordsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IReusedPasswordsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReusedPasswordsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReusedPasswordsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ReusedPasswordsRequest;

        /**
         * Decodes a ReusedPasswordsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReusedPasswordsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ReusedPasswordsRequest;

        /**
         * Verifies a ReusedPasswordsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReusedPasswordsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReusedPasswordsRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ReusedPasswordsRequest;

        /**
         * Creates a plain object from a ReusedPasswordsRequest message. Also converts values to other types if specified.
         * @param message ReusedPasswordsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ReusedPasswordsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReusedPasswordsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SummaryConsoleReport. */
    interface ISummaryConsoleReport {

        /** SummaryConsoleReport reportType */
        reportType?: (number|null);

        /** SummaryConsoleReport reportData */
        reportData?: (Uint8Array|null);
    }

    /** Represents a SummaryConsoleReport. */
    class SummaryConsoleReport implements ISummaryConsoleReport {

        /**
         * Constructs a new SummaryConsoleReport.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ISummaryConsoleReport);

        /** SummaryConsoleReport reportType. */
        public reportType: number;

        /** SummaryConsoleReport reportData. */
        public reportData: Uint8Array;

        /**
         * Creates a new SummaryConsoleReport instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SummaryConsoleReport instance
         */
        public static create(properties?: Authentication.ISummaryConsoleReport): Authentication.SummaryConsoleReport;

        /**
         * Encodes the specified SummaryConsoleReport message. Does not implicitly {@link Authentication.SummaryConsoleReport.verify|verify} messages.
         * @param message SummaryConsoleReport message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ISummaryConsoleReport, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SummaryConsoleReport message, length delimited. Does not implicitly {@link Authentication.SummaryConsoleReport.verify|verify} messages.
         * @param message SummaryConsoleReport message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ISummaryConsoleReport, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SummaryConsoleReport message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SummaryConsoleReport
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.SummaryConsoleReport;

        /**
         * Decodes a SummaryConsoleReport message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SummaryConsoleReport
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.SummaryConsoleReport;

        /**
         * Verifies a SummaryConsoleReport message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SummaryConsoleReport message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SummaryConsoleReport
         */
        public static fromObject(object: { [k: string]: any }): Authentication.SummaryConsoleReport;

        /**
         * Creates a plain object from a SummaryConsoleReport message. Also converts values to other types if specified.
         * @param message SummaryConsoleReport
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.SummaryConsoleReport, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SummaryConsoleReport to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** ObjectTypes enum. */
    enum ObjectTypes {
        RECORD = 0,
        SHARED_FOLDER_USER = 1,
        SHARED_FOLDER_TEAM = 2,
        USER_FOLDER = 3,
        TEAM_USER = 4
    }

    /** Properties of a ChangeToKeyTypeOne. */
    interface IChangeToKeyTypeOne {

        /** ChangeToKeyTypeOne objectType */
        objectType?: (Authentication.ObjectTypes|null);

        /** ChangeToKeyTypeOne primaryUid */
        primaryUid?: (Uint8Array|null);

        /** ChangeToKeyTypeOne secondaryUid */
        secondaryUid?: (Uint8Array|null);

        /** ChangeToKeyTypeOne key */
        key?: (Uint8Array|null);
    }

    /** Represents a ChangeToKeyTypeOne. */
    class ChangeToKeyTypeOne implements IChangeToKeyTypeOne {

        /**
         * Constructs a new ChangeToKeyTypeOne.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IChangeToKeyTypeOne);

        /** ChangeToKeyTypeOne objectType. */
        public objectType: Authentication.ObjectTypes;

        /** ChangeToKeyTypeOne primaryUid. */
        public primaryUid: Uint8Array;

        /** ChangeToKeyTypeOne secondaryUid. */
        public secondaryUid: Uint8Array;

        /** ChangeToKeyTypeOne key. */
        public key: Uint8Array;

        /**
         * Creates a new ChangeToKeyTypeOne instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeToKeyTypeOne instance
         */
        public static create(properties?: Authentication.IChangeToKeyTypeOne): Authentication.ChangeToKeyTypeOne;

        /**
         * Encodes the specified ChangeToKeyTypeOne message. Does not implicitly {@link Authentication.ChangeToKeyTypeOne.verify|verify} messages.
         * @param message ChangeToKeyTypeOne message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IChangeToKeyTypeOne, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChangeToKeyTypeOne message, length delimited. Does not implicitly {@link Authentication.ChangeToKeyTypeOne.verify|verify} messages.
         * @param message ChangeToKeyTypeOne message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IChangeToKeyTypeOne, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChangeToKeyTypeOne message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeToKeyTypeOne
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ChangeToKeyTypeOne;

        /**
         * Decodes a ChangeToKeyTypeOne message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeToKeyTypeOne
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ChangeToKeyTypeOne;

        /**
         * Verifies a ChangeToKeyTypeOne message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeToKeyTypeOne message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeToKeyTypeOne
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ChangeToKeyTypeOne;

        /**
         * Creates a plain object from a ChangeToKeyTypeOne message. Also converts values to other types if specified.
         * @param message ChangeToKeyTypeOne
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ChangeToKeyTypeOne, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeToKeyTypeOne to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChangeToKeyTypeOneRequest. */
    interface IChangeToKeyTypeOneRequest {

        /** ChangeToKeyTypeOneRequest changeToKeyTypeOne */
        changeToKeyTypeOne?: (Authentication.IChangeToKeyTypeOne[]|null);
    }

    /** Represents a ChangeToKeyTypeOneRequest. */
    class ChangeToKeyTypeOneRequest implements IChangeToKeyTypeOneRequest {

        /**
         * Constructs a new ChangeToKeyTypeOneRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IChangeToKeyTypeOneRequest);

        /** ChangeToKeyTypeOneRequest changeToKeyTypeOne. */
        public changeToKeyTypeOne: Authentication.IChangeToKeyTypeOne[];

        /**
         * Creates a new ChangeToKeyTypeOneRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeToKeyTypeOneRequest instance
         */
        public static create(properties?: Authentication.IChangeToKeyTypeOneRequest): Authentication.ChangeToKeyTypeOneRequest;

        /**
         * Encodes the specified ChangeToKeyTypeOneRequest message. Does not implicitly {@link Authentication.ChangeToKeyTypeOneRequest.verify|verify} messages.
         * @param message ChangeToKeyTypeOneRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IChangeToKeyTypeOneRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChangeToKeyTypeOneRequest message, length delimited. Does not implicitly {@link Authentication.ChangeToKeyTypeOneRequest.verify|verify} messages.
         * @param message ChangeToKeyTypeOneRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IChangeToKeyTypeOneRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChangeToKeyTypeOneRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeToKeyTypeOneRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ChangeToKeyTypeOneRequest;

        /**
         * Decodes a ChangeToKeyTypeOneRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeToKeyTypeOneRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ChangeToKeyTypeOneRequest;

        /**
         * Verifies a ChangeToKeyTypeOneRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeToKeyTypeOneRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeToKeyTypeOneRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ChangeToKeyTypeOneRequest;

        /**
         * Creates a plain object from a ChangeToKeyTypeOneRequest message. Also converts values to other types if specified.
         * @param message ChangeToKeyTypeOneRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ChangeToKeyTypeOneRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeToKeyTypeOneRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChangeToKeyTypeOneStatus. */
    interface IChangeToKeyTypeOneStatus {

        /** ChangeToKeyTypeOneStatus uid */
        uid?: (Uint8Array|null);

        /** ChangeToKeyTypeOneStatus type */
        type?: (string|null);

        /** ChangeToKeyTypeOneStatus status */
        status?: (string|null);

        /** ChangeToKeyTypeOneStatus reason */
        reason?: (string|null);
    }

    /** Represents a ChangeToKeyTypeOneStatus. */
    class ChangeToKeyTypeOneStatus implements IChangeToKeyTypeOneStatus {

        /**
         * Constructs a new ChangeToKeyTypeOneStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IChangeToKeyTypeOneStatus);

        /** ChangeToKeyTypeOneStatus uid. */
        public uid: Uint8Array;

        /** ChangeToKeyTypeOneStatus type. */
        public type: string;

        /** ChangeToKeyTypeOneStatus status. */
        public status: string;

        /** ChangeToKeyTypeOneStatus reason. */
        public reason: string;

        /**
         * Creates a new ChangeToKeyTypeOneStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeToKeyTypeOneStatus instance
         */
        public static create(properties?: Authentication.IChangeToKeyTypeOneStatus): Authentication.ChangeToKeyTypeOneStatus;

        /**
         * Encodes the specified ChangeToKeyTypeOneStatus message. Does not implicitly {@link Authentication.ChangeToKeyTypeOneStatus.verify|verify} messages.
         * @param message ChangeToKeyTypeOneStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IChangeToKeyTypeOneStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChangeToKeyTypeOneStatus message, length delimited. Does not implicitly {@link Authentication.ChangeToKeyTypeOneStatus.verify|verify} messages.
         * @param message ChangeToKeyTypeOneStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IChangeToKeyTypeOneStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChangeToKeyTypeOneStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeToKeyTypeOneStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ChangeToKeyTypeOneStatus;

        /**
         * Decodes a ChangeToKeyTypeOneStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeToKeyTypeOneStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ChangeToKeyTypeOneStatus;

        /**
         * Verifies a ChangeToKeyTypeOneStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeToKeyTypeOneStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeToKeyTypeOneStatus
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ChangeToKeyTypeOneStatus;

        /**
         * Creates a plain object from a ChangeToKeyTypeOneStatus message. Also converts values to other types if specified.
         * @param message ChangeToKeyTypeOneStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ChangeToKeyTypeOneStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeToKeyTypeOneStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChangeToKeyTypeOneResponse. */
    interface IChangeToKeyTypeOneResponse {

        /** ChangeToKeyTypeOneResponse changeToKeyTypeOneStatus */
        changeToKeyTypeOneStatus?: (Authentication.IChangeToKeyTypeOneStatus[]|null);
    }

    /** Represents a ChangeToKeyTypeOneResponse. */
    class ChangeToKeyTypeOneResponse implements IChangeToKeyTypeOneResponse {

        /**
         * Constructs a new ChangeToKeyTypeOneResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IChangeToKeyTypeOneResponse);

        /** ChangeToKeyTypeOneResponse changeToKeyTypeOneStatus. */
        public changeToKeyTypeOneStatus: Authentication.IChangeToKeyTypeOneStatus[];

        /**
         * Creates a new ChangeToKeyTypeOneResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeToKeyTypeOneResponse instance
         */
        public static create(properties?: Authentication.IChangeToKeyTypeOneResponse): Authentication.ChangeToKeyTypeOneResponse;

        /**
         * Encodes the specified ChangeToKeyTypeOneResponse message. Does not implicitly {@link Authentication.ChangeToKeyTypeOneResponse.verify|verify} messages.
         * @param message ChangeToKeyTypeOneResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IChangeToKeyTypeOneResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChangeToKeyTypeOneResponse message, length delimited. Does not implicitly {@link Authentication.ChangeToKeyTypeOneResponse.verify|verify} messages.
         * @param message ChangeToKeyTypeOneResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IChangeToKeyTypeOneResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChangeToKeyTypeOneResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeToKeyTypeOneResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ChangeToKeyTypeOneResponse;

        /**
         * Decodes a ChangeToKeyTypeOneResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeToKeyTypeOneResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ChangeToKeyTypeOneResponse;

        /**
         * Verifies a ChangeToKeyTypeOneResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeToKeyTypeOneResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeToKeyTypeOneResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ChangeToKeyTypeOneResponse;

        /**
         * Creates a plain object from a ChangeToKeyTypeOneResponse message. Also converts values to other types if specified.
         * @param message ChangeToKeyTypeOneResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ChangeToKeyTypeOneResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeToKeyTypeOneResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SetKey. */
    interface ISetKey {

        /** SetKey id */
        id?: (number|Long|null);

        /** SetKey key */
        key?: (Uint8Array|null);
    }

    /** Represents a SetKey. */
    class SetKey implements ISetKey {

        /**
         * Constructs a new SetKey.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ISetKey);

        /** SetKey id. */
        public id: (number|Long);

        /** SetKey key. */
        public key: Uint8Array;

        /**
         * Creates a new SetKey instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SetKey instance
         */
        public static create(properties?: Authentication.ISetKey): Authentication.SetKey;

        /**
         * Encodes the specified SetKey message. Does not implicitly {@link Authentication.SetKey.verify|verify} messages.
         * @param message SetKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ISetKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SetKey message, length delimited. Does not implicitly {@link Authentication.SetKey.verify|verify} messages.
         * @param message SetKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ISetKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SetKey message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SetKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.SetKey;

        /**
         * Decodes a SetKey message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SetKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.SetKey;

        /**
         * Verifies a SetKey message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SetKey message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SetKey
         */
        public static fromObject(object: { [k: string]: any }): Authentication.SetKey;

        /**
         * Creates a plain object from a SetKey message. Also converts values to other types if specified.
         * @param message SetKey
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.SetKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SetKey to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SetKeyRequest. */
    interface ISetKeyRequest {

        /** SetKeyRequest keys */
        keys?: (Authentication.ISetKey[]|null);
    }

    /** Represents a SetKeyRequest. */
    class SetKeyRequest implements ISetKeyRequest {

        /**
         * Constructs a new SetKeyRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ISetKeyRequest);

        /** SetKeyRequest keys. */
        public keys: Authentication.ISetKey[];

        /**
         * Creates a new SetKeyRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SetKeyRequest instance
         */
        public static create(properties?: Authentication.ISetKeyRequest): Authentication.SetKeyRequest;

        /**
         * Encodes the specified SetKeyRequest message. Does not implicitly {@link Authentication.SetKeyRequest.verify|verify} messages.
         * @param message SetKeyRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ISetKeyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SetKeyRequest message, length delimited. Does not implicitly {@link Authentication.SetKeyRequest.verify|verify} messages.
         * @param message SetKeyRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ISetKeyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SetKeyRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SetKeyRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.SetKeyRequest;

        /**
         * Decodes a SetKeyRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SetKeyRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.SetKeyRequest;

        /**
         * Verifies a SetKeyRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SetKeyRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SetKeyRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.SetKeyRequest;

        /**
         * Creates a plain object from a SetKeyRequest message. Also converts values to other types if specified.
         * @param message SetKeyRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.SetKeyRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SetKeyRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CreateUserRequest. */
    interface ICreateUserRequest {

        /** CreateUserRequest username */
        username?: (string|null);

        /** CreateUserRequest authVerifier */
        authVerifier?: (Uint8Array|null);

        /** CreateUserRequest encryptionParams */
        encryptionParams?: (Uint8Array|null);

        /** CreateUserRequest rsaPublicKey */
        rsaPublicKey?: (Uint8Array|null);

        /** CreateUserRequest rsaEncryptedPrivateKey */
        rsaEncryptedPrivateKey?: (Uint8Array|null);

        /** CreateUserRequest eccPublicKey */
        eccPublicKey?: (Uint8Array|null);

        /** CreateUserRequest eccEncryptedPrivateKey */
        eccEncryptedPrivateKey?: (Uint8Array|null);

        /** CreateUserRequest encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);

        /** CreateUserRequest encryptedClientKey */
        encryptedClientKey?: (Uint8Array|null);

        /** CreateUserRequest clientVersion */
        clientVersion?: (string|null);

        /** CreateUserRequest encryptedDeviceDataKey */
        encryptedDeviceDataKey?: (Uint8Array|null);

        /** CreateUserRequest encryptedLoginToken */
        encryptedLoginToken?: (Uint8Array|null);

        /** CreateUserRequest messageSessionUid */
        messageSessionUid?: (Uint8Array|null);

        /** CreateUserRequest installReferrer */
        installReferrer?: (string|null);

        /** CreateUserRequest mccMNC */
        mccMNC?: (number|null);

        /** CreateUserRequest mfg */
        mfg?: (string|null);

        /** CreateUserRequest model */
        model?: (string|null);

        /** CreateUserRequest brand */
        brand?: (string|null);

        /** CreateUserRequest product */
        product?: (string|null);

        /** CreateUserRequest device */
        device?: (string|null);

        /** CreateUserRequest carrier */
        carrier?: (string|null);

        /** CreateUserRequest verificationCode */
        verificationCode?: (string|null);

        /** CreateUserRequest enterpriseRegistration */
        enterpriseRegistration?: (Enterprise.IEnterpriseRegistration|null);

        /** CreateUserRequest encryptedVerificationToken */
        encryptedVerificationToken?: (Uint8Array|null);
    }

    /** Represents a CreateUserRequest. */
    class CreateUserRequest implements ICreateUserRequest {

        /**
         * Constructs a new CreateUserRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ICreateUserRequest);

        /** CreateUserRequest username. */
        public username: string;

        /** CreateUserRequest authVerifier. */
        public authVerifier: Uint8Array;

        /** CreateUserRequest encryptionParams. */
        public encryptionParams: Uint8Array;

        /** CreateUserRequest rsaPublicKey. */
        public rsaPublicKey: Uint8Array;

        /** CreateUserRequest rsaEncryptedPrivateKey. */
        public rsaEncryptedPrivateKey: Uint8Array;

        /** CreateUserRequest eccPublicKey. */
        public eccPublicKey: Uint8Array;

        /** CreateUserRequest eccEncryptedPrivateKey. */
        public eccEncryptedPrivateKey: Uint8Array;

        /** CreateUserRequest encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /** CreateUserRequest encryptedClientKey. */
        public encryptedClientKey: Uint8Array;

        /** CreateUserRequest clientVersion. */
        public clientVersion: string;

        /** CreateUserRequest encryptedDeviceDataKey. */
        public encryptedDeviceDataKey: Uint8Array;

        /** CreateUserRequest encryptedLoginToken. */
        public encryptedLoginToken: Uint8Array;

        /** CreateUserRequest messageSessionUid. */
        public messageSessionUid: Uint8Array;

        /** CreateUserRequest installReferrer. */
        public installReferrer: string;

        /** CreateUserRequest mccMNC. */
        public mccMNC: number;

        /** CreateUserRequest mfg. */
        public mfg: string;

        /** CreateUserRequest model. */
        public model: string;

        /** CreateUserRequest brand. */
        public brand: string;

        /** CreateUserRequest product. */
        public product: string;

        /** CreateUserRequest device. */
        public device: string;

        /** CreateUserRequest carrier. */
        public carrier: string;

        /** CreateUserRequest verificationCode. */
        public verificationCode: string;

        /** CreateUserRequest enterpriseRegistration. */
        public enterpriseRegistration?: (Enterprise.IEnterpriseRegistration|null);

        /** CreateUserRequest encryptedVerificationToken. */
        public encryptedVerificationToken: Uint8Array;

        /**
         * Creates a new CreateUserRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CreateUserRequest instance
         */
        public static create(properties?: Authentication.ICreateUserRequest): Authentication.CreateUserRequest;

        /**
         * Encodes the specified CreateUserRequest message. Does not implicitly {@link Authentication.CreateUserRequest.verify|verify} messages.
         * @param message CreateUserRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ICreateUserRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CreateUserRequest message, length delimited. Does not implicitly {@link Authentication.CreateUserRequest.verify|verify} messages.
         * @param message CreateUserRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ICreateUserRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CreateUserRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CreateUserRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.CreateUserRequest;

        /**
         * Decodes a CreateUserRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CreateUserRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.CreateUserRequest;

        /**
         * Verifies a CreateUserRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CreateUserRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CreateUserRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.CreateUserRequest;

        /**
         * Creates a plain object from a CreateUserRequest message. Also converts values to other types if specified.
         * @param message CreateUserRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.CreateUserRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CreateUserRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NodeEnforcementAddOrUpdateRequest. */
    interface INodeEnforcementAddOrUpdateRequest {

        /** NodeEnforcementAddOrUpdateRequest nodeId */
        nodeId?: (number|Long|null);

        /** NodeEnforcementAddOrUpdateRequest enforcement */
        enforcement?: (string|null);

        /** NodeEnforcementAddOrUpdateRequest value */
        value?: (string|null);
    }

    /** Represents a NodeEnforcementAddOrUpdateRequest. */
    class NodeEnforcementAddOrUpdateRequest implements INodeEnforcementAddOrUpdateRequest {

        /**
         * Constructs a new NodeEnforcementAddOrUpdateRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.INodeEnforcementAddOrUpdateRequest);

        /** NodeEnforcementAddOrUpdateRequest nodeId. */
        public nodeId: (number|Long);

        /** NodeEnforcementAddOrUpdateRequest enforcement. */
        public enforcement: string;

        /** NodeEnforcementAddOrUpdateRequest value. */
        public value: string;

        /**
         * Creates a new NodeEnforcementAddOrUpdateRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NodeEnforcementAddOrUpdateRequest instance
         */
        public static create(properties?: Authentication.INodeEnforcementAddOrUpdateRequest): Authentication.NodeEnforcementAddOrUpdateRequest;

        /**
         * Encodes the specified NodeEnforcementAddOrUpdateRequest message. Does not implicitly {@link Authentication.NodeEnforcementAddOrUpdateRequest.verify|verify} messages.
         * @param message NodeEnforcementAddOrUpdateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.INodeEnforcementAddOrUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NodeEnforcementAddOrUpdateRequest message, length delimited. Does not implicitly {@link Authentication.NodeEnforcementAddOrUpdateRequest.verify|verify} messages.
         * @param message NodeEnforcementAddOrUpdateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.INodeEnforcementAddOrUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NodeEnforcementAddOrUpdateRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NodeEnforcementAddOrUpdateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.NodeEnforcementAddOrUpdateRequest;

        /**
         * Decodes a NodeEnforcementAddOrUpdateRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NodeEnforcementAddOrUpdateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.NodeEnforcementAddOrUpdateRequest;

        /**
         * Verifies a NodeEnforcementAddOrUpdateRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NodeEnforcementAddOrUpdateRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NodeEnforcementAddOrUpdateRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.NodeEnforcementAddOrUpdateRequest;

        /**
         * Creates a plain object from a NodeEnforcementAddOrUpdateRequest message. Also converts values to other types if specified.
         * @param message NodeEnforcementAddOrUpdateRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.NodeEnforcementAddOrUpdateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NodeEnforcementAddOrUpdateRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NodeEnforcementRemoveRequest. */
    interface INodeEnforcementRemoveRequest {

        /** NodeEnforcementRemoveRequest nodeId */
        nodeId?: (number|Long|null);

        /** NodeEnforcementRemoveRequest enforcement */
        enforcement?: (string|null);
    }

    /** Represents a NodeEnforcementRemoveRequest. */
    class NodeEnforcementRemoveRequest implements INodeEnforcementRemoveRequest {

        /**
         * Constructs a new NodeEnforcementRemoveRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.INodeEnforcementRemoveRequest);

        /** NodeEnforcementRemoveRequest nodeId. */
        public nodeId: (number|Long);

        /** NodeEnforcementRemoveRequest enforcement. */
        public enforcement: string;

        /**
         * Creates a new NodeEnforcementRemoveRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NodeEnforcementRemoveRequest instance
         */
        public static create(properties?: Authentication.INodeEnforcementRemoveRequest): Authentication.NodeEnforcementRemoveRequest;

        /**
         * Encodes the specified NodeEnforcementRemoveRequest message. Does not implicitly {@link Authentication.NodeEnforcementRemoveRequest.verify|verify} messages.
         * @param message NodeEnforcementRemoveRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.INodeEnforcementRemoveRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NodeEnforcementRemoveRequest message, length delimited. Does not implicitly {@link Authentication.NodeEnforcementRemoveRequest.verify|verify} messages.
         * @param message NodeEnforcementRemoveRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.INodeEnforcementRemoveRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NodeEnforcementRemoveRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NodeEnforcementRemoveRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.NodeEnforcementRemoveRequest;

        /**
         * Decodes a NodeEnforcementRemoveRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NodeEnforcementRemoveRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.NodeEnforcementRemoveRequest;

        /**
         * Verifies a NodeEnforcementRemoveRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NodeEnforcementRemoveRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NodeEnforcementRemoveRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.NodeEnforcementRemoveRequest;

        /**
         * Creates a plain object from a NodeEnforcementRemoveRequest message. Also converts values to other types if specified.
         * @param message NodeEnforcementRemoveRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.NodeEnforcementRemoveRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NodeEnforcementRemoveRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ApiRequestByKey. */
    interface IApiRequestByKey {

        /** ApiRequestByKey keyId */
        keyId?: (number|null);

        /** ApiRequestByKey payload */
        payload?: (Uint8Array|null);

        /** ApiRequestByKey username */
        username?: (string|null);

        /** ApiRequestByKey locale */
        locale?: (string|null);

        /** ApiRequestByKey supportedLanguage */
        supportedLanguage?: (Authentication.SupportedLanguage|null);

        /** ApiRequestByKey type */
        type?: (number|null);
    }

    /** Represents an ApiRequestByKey. */
    class ApiRequestByKey implements IApiRequestByKey {

        /**
         * Constructs a new ApiRequestByKey.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IApiRequestByKey);

        /** ApiRequestByKey keyId. */
        public keyId: number;

        /** ApiRequestByKey payload. */
        public payload: Uint8Array;

        /** ApiRequestByKey username. */
        public username: string;

        /** ApiRequestByKey locale. */
        public locale: string;

        /** ApiRequestByKey supportedLanguage. */
        public supportedLanguage: Authentication.SupportedLanguage;

        /** ApiRequestByKey type. */
        public type: number;

        /**
         * Creates a new ApiRequestByKey instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApiRequestByKey instance
         */
        public static create(properties?: Authentication.IApiRequestByKey): Authentication.ApiRequestByKey;

        /**
         * Encodes the specified ApiRequestByKey message. Does not implicitly {@link Authentication.ApiRequestByKey.verify|verify} messages.
         * @param message ApiRequestByKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IApiRequestByKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ApiRequestByKey message, length delimited. Does not implicitly {@link Authentication.ApiRequestByKey.verify|verify} messages.
         * @param message ApiRequestByKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IApiRequestByKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ApiRequestByKey message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApiRequestByKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ApiRequestByKey;

        /**
         * Decodes an ApiRequestByKey message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApiRequestByKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ApiRequestByKey;

        /**
         * Verifies an ApiRequestByKey message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ApiRequestByKey message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ApiRequestByKey
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ApiRequestByKey;

        /**
         * Creates a plain object from an ApiRequestByKey message. Also converts values to other types if specified.
         * @param message ApiRequestByKey
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ApiRequestByKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ApiRequestByKey to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ApiRequestByKAtoKAKey. */
    interface IApiRequestByKAtoKAKey {

        /** ApiRequestByKAtoKAKey sourceRegion */
        sourceRegion?: (Authentication.Region|null);

        /** ApiRequestByKAtoKAKey payload */
        payload?: (Uint8Array|null);

        /** ApiRequestByKAtoKAKey supportedLanguage */
        supportedLanguage?: (Authentication.SupportedLanguage|null);

        /** ApiRequestByKAtoKAKey destinationRegion */
        destinationRegion?: (Authentication.Region|null);
    }

    /** Represents an ApiRequestByKAtoKAKey. */
    class ApiRequestByKAtoKAKey implements IApiRequestByKAtoKAKey {

        /**
         * Constructs a new ApiRequestByKAtoKAKey.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IApiRequestByKAtoKAKey);

        /** ApiRequestByKAtoKAKey sourceRegion. */
        public sourceRegion: Authentication.Region;

        /** ApiRequestByKAtoKAKey payload. */
        public payload: Uint8Array;

        /** ApiRequestByKAtoKAKey supportedLanguage. */
        public supportedLanguage: Authentication.SupportedLanguage;

        /** ApiRequestByKAtoKAKey destinationRegion. */
        public destinationRegion: Authentication.Region;

        /**
         * Creates a new ApiRequestByKAtoKAKey instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApiRequestByKAtoKAKey instance
         */
        public static create(properties?: Authentication.IApiRequestByKAtoKAKey): Authentication.ApiRequestByKAtoKAKey;

        /**
         * Encodes the specified ApiRequestByKAtoKAKey message. Does not implicitly {@link Authentication.ApiRequestByKAtoKAKey.verify|verify} messages.
         * @param message ApiRequestByKAtoKAKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IApiRequestByKAtoKAKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ApiRequestByKAtoKAKey message, length delimited. Does not implicitly {@link Authentication.ApiRequestByKAtoKAKey.verify|verify} messages.
         * @param message ApiRequestByKAtoKAKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IApiRequestByKAtoKAKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ApiRequestByKAtoKAKey message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApiRequestByKAtoKAKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ApiRequestByKAtoKAKey;

        /**
         * Decodes an ApiRequestByKAtoKAKey message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApiRequestByKAtoKAKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ApiRequestByKAtoKAKey;

        /**
         * Verifies an ApiRequestByKAtoKAKey message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ApiRequestByKAtoKAKey message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ApiRequestByKAtoKAKey
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ApiRequestByKAtoKAKey;

        /**
         * Creates a plain object from an ApiRequestByKAtoKAKey message. Also converts values to other types if specified.
         * @param message ApiRequestByKAtoKAKey
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ApiRequestByKAtoKAKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ApiRequestByKAtoKAKey to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MemcacheRequest. */
    interface IMemcacheRequest {

        /** MemcacheRequest key */
        key?: (string|null);

        /** MemcacheRequest userId */
        userId?: (number|null);
    }

    /** Represents a MemcacheRequest. */
    class MemcacheRequest implements IMemcacheRequest {

        /**
         * Constructs a new MemcacheRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IMemcacheRequest);

        /** MemcacheRequest key. */
        public key: string;

        /** MemcacheRequest userId. */
        public userId: number;

        /**
         * Creates a new MemcacheRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MemcacheRequest instance
         */
        public static create(properties?: Authentication.IMemcacheRequest): Authentication.MemcacheRequest;

        /**
         * Encodes the specified MemcacheRequest message. Does not implicitly {@link Authentication.MemcacheRequest.verify|verify} messages.
         * @param message MemcacheRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IMemcacheRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MemcacheRequest message, length delimited. Does not implicitly {@link Authentication.MemcacheRequest.verify|verify} messages.
         * @param message MemcacheRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IMemcacheRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MemcacheRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MemcacheRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.MemcacheRequest;

        /**
         * Decodes a MemcacheRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MemcacheRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.MemcacheRequest;

        /**
         * Verifies a MemcacheRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MemcacheRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MemcacheRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.MemcacheRequest;

        /**
         * Creates a plain object from a MemcacheRequest message. Also converts values to other types if specified.
         * @param message MemcacheRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.MemcacheRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MemcacheRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MemcacheResponse. */
    interface IMemcacheResponse {

        /** MemcacheResponse key */
        key?: (string|null);

        /** MemcacheResponse value */
        value?: (string|null);
    }

    /** Represents a MemcacheResponse. */
    class MemcacheResponse implements IMemcacheResponse {

        /**
         * Constructs a new MemcacheResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IMemcacheResponse);

        /** MemcacheResponse key. */
        public key: string;

        /** MemcacheResponse value. */
        public value: string;

        /**
         * Creates a new MemcacheResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MemcacheResponse instance
         */
        public static create(properties?: Authentication.IMemcacheResponse): Authentication.MemcacheResponse;

        /**
         * Encodes the specified MemcacheResponse message. Does not implicitly {@link Authentication.MemcacheResponse.verify|verify} messages.
         * @param message MemcacheResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IMemcacheResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MemcacheResponse message, length delimited. Does not implicitly {@link Authentication.MemcacheResponse.verify|verify} messages.
         * @param message MemcacheResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IMemcacheResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MemcacheResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MemcacheResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.MemcacheResponse;

        /**
         * Decodes a MemcacheResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MemcacheResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.MemcacheResponse;

        /**
         * Verifies a MemcacheResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MemcacheResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MemcacheResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.MemcacheResponse;

        /**
         * Creates a plain object from a MemcacheResponse message. Also converts values to other types if specified.
         * @param message MemcacheResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.MemcacheResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MemcacheResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MasterPasswordReentryRequest. */
    interface IMasterPasswordReentryRequest {

        /** MasterPasswordReentryRequest pbkdf2Password */
        pbkdf2Password?: (string|null);

        /** MasterPasswordReentryRequest action */
        action?: (Authentication.MasterPasswordReentryActionType|null);
    }

    /** Represents a MasterPasswordReentryRequest. */
    class MasterPasswordReentryRequest implements IMasterPasswordReentryRequest {

        /**
         * Constructs a new MasterPasswordReentryRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IMasterPasswordReentryRequest);

        /** MasterPasswordReentryRequest pbkdf2Password. */
        public pbkdf2Password: string;

        /** MasterPasswordReentryRequest action. */
        public action: Authentication.MasterPasswordReentryActionType;

        /**
         * Creates a new MasterPasswordReentryRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MasterPasswordReentryRequest instance
         */
        public static create(properties?: Authentication.IMasterPasswordReentryRequest): Authentication.MasterPasswordReentryRequest;

        /**
         * Encodes the specified MasterPasswordReentryRequest message. Does not implicitly {@link Authentication.MasterPasswordReentryRequest.verify|verify} messages.
         * @param message MasterPasswordReentryRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IMasterPasswordReentryRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MasterPasswordReentryRequest message, length delimited. Does not implicitly {@link Authentication.MasterPasswordReentryRequest.verify|verify} messages.
         * @param message MasterPasswordReentryRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IMasterPasswordReentryRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MasterPasswordReentryRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MasterPasswordReentryRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.MasterPasswordReentryRequest;

        /**
         * Decodes a MasterPasswordReentryRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MasterPasswordReentryRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.MasterPasswordReentryRequest;

        /**
         * Verifies a MasterPasswordReentryRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MasterPasswordReentryRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MasterPasswordReentryRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.MasterPasswordReentryRequest;

        /**
         * Creates a plain object from a MasterPasswordReentryRequest message. Also converts values to other types if specified.
         * @param message MasterPasswordReentryRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.MasterPasswordReentryRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MasterPasswordReentryRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeviceRegistrationRequest. */
    interface IDeviceRegistrationRequest {

        /** DeviceRegistrationRequest clientVersion */
        clientVersion?: (string|null);

        /** DeviceRegistrationRequest deviceName */
        deviceName?: (string|null);

        /** DeviceRegistrationRequest devicePublicKey */
        devicePublicKey?: (Uint8Array|null);
    }

    /** Represents a DeviceRegistrationRequest. */
    class DeviceRegistrationRequest implements IDeviceRegistrationRequest {

        /**
         * Constructs a new DeviceRegistrationRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IDeviceRegistrationRequest);

        /** DeviceRegistrationRequest clientVersion. */
        public clientVersion: string;

        /** DeviceRegistrationRequest deviceName. */
        public deviceName: string;

        /** DeviceRegistrationRequest devicePublicKey. */
        public devicePublicKey: Uint8Array;

        /**
         * Creates a new DeviceRegistrationRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeviceRegistrationRequest instance
         */
        public static create(properties?: Authentication.IDeviceRegistrationRequest): Authentication.DeviceRegistrationRequest;

        /**
         * Encodes the specified DeviceRegistrationRequest message. Does not implicitly {@link Authentication.DeviceRegistrationRequest.verify|verify} messages.
         * @param message DeviceRegistrationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IDeviceRegistrationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeviceRegistrationRequest message, length delimited. Does not implicitly {@link Authentication.DeviceRegistrationRequest.verify|verify} messages.
         * @param message DeviceRegistrationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IDeviceRegistrationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeviceRegistrationRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeviceRegistrationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.DeviceRegistrationRequest;

        /**
         * Decodes a DeviceRegistrationRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeviceRegistrationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.DeviceRegistrationRequest;

        /**
         * Verifies a DeviceRegistrationRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeviceRegistrationRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeviceRegistrationRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.DeviceRegistrationRequest;

        /**
         * Creates a plain object from a DeviceRegistrationRequest message. Also converts values to other types if specified.
         * @param message DeviceRegistrationRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.DeviceRegistrationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeviceRegistrationRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeviceVerificationRequest. */
    interface IDeviceVerificationRequest {

        /** DeviceVerificationRequest encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);

        /** DeviceVerificationRequest username */
        username?: (string|null);

        /** DeviceVerificationRequest verificationChannel */
        verificationChannel?: (string|null);

        /** DeviceVerificationRequest messageSessionUid */
        messageSessionUid?: (Uint8Array|null);

        /** DeviceVerificationRequest clientVersion */
        clientVersion?: (string|null);
    }

    /** Represents a DeviceVerificationRequest. */
    class DeviceVerificationRequest implements IDeviceVerificationRequest {

        /**
         * Constructs a new DeviceVerificationRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IDeviceVerificationRequest);

        /** DeviceVerificationRequest encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /** DeviceVerificationRequest username. */
        public username: string;

        /** DeviceVerificationRequest verificationChannel. */
        public verificationChannel: string;

        /** DeviceVerificationRequest messageSessionUid. */
        public messageSessionUid: Uint8Array;

        /** DeviceVerificationRequest clientVersion. */
        public clientVersion: string;

        /**
         * Creates a new DeviceVerificationRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeviceVerificationRequest instance
         */
        public static create(properties?: Authentication.IDeviceVerificationRequest): Authentication.DeviceVerificationRequest;

        /**
         * Encodes the specified DeviceVerificationRequest message. Does not implicitly {@link Authentication.DeviceVerificationRequest.verify|verify} messages.
         * @param message DeviceVerificationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IDeviceVerificationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeviceVerificationRequest message, length delimited. Does not implicitly {@link Authentication.DeviceVerificationRequest.verify|verify} messages.
         * @param message DeviceVerificationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IDeviceVerificationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeviceVerificationRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeviceVerificationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.DeviceVerificationRequest;

        /**
         * Decodes a DeviceVerificationRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeviceVerificationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.DeviceVerificationRequest;

        /**
         * Verifies a DeviceVerificationRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeviceVerificationRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeviceVerificationRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.DeviceVerificationRequest;

        /**
         * Creates a plain object from a DeviceVerificationRequest message. Also converts values to other types if specified.
         * @param message DeviceVerificationRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.DeviceVerificationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeviceVerificationRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeviceVerificationResponse. */
    interface IDeviceVerificationResponse {

        /** DeviceVerificationResponse encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);

        /** DeviceVerificationResponse username */
        username?: (string|null);

        /** DeviceVerificationResponse messageSessionUid */
        messageSessionUid?: (Uint8Array|null);

        /** DeviceVerificationResponse clientVersion */
        clientVersion?: (string|null);

        /** DeviceVerificationResponse deviceStatus */
        deviceStatus?: (Authentication.DeviceStatus|null);
    }

    /** Represents a DeviceVerificationResponse. */
    class DeviceVerificationResponse implements IDeviceVerificationResponse {

        /**
         * Constructs a new DeviceVerificationResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IDeviceVerificationResponse);

        /** DeviceVerificationResponse encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /** DeviceVerificationResponse username. */
        public username: string;

        /** DeviceVerificationResponse messageSessionUid. */
        public messageSessionUid: Uint8Array;

        /** DeviceVerificationResponse clientVersion. */
        public clientVersion: string;

        /** DeviceVerificationResponse deviceStatus. */
        public deviceStatus: Authentication.DeviceStatus;

        /**
         * Creates a new DeviceVerificationResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeviceVerificationResponse instance
         */
        public static create(properties?: Authentication.IDeviceVerificationResponse): Authentication.DeviceVerificationResponse;

        /**
         * Encodes the specified DeviceVerificationResponse message. Does not implicitly {@link Authentication.DeviceVerificationResponse.verify|verify} messages.
         * @param message DeviceVerificationResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IDeviceVerificationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeviceVerificationResponse message, length delimited. Does not implicitly {@link Authentication.DeviceVerificationResponse.verify|verify} messages.
         * @param message DeviceVerificationResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IDeviceVerificationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeviceVerificationResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeviceVerificationResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.DeviceVerificationResponse;

        /**
         * Decodes a DeviceVerificationResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeviceVerificationResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.DeviceVerificationResponse;

        /**
         * Verifies a DeviceVerificationResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeviceVerificationResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeviceVerificationResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.DeviceVerificationResponse;

        /**
         * Creates a plain object from a DeviceVerificationResponse message. Also converts values to other types if specified.
         * @param message DeviceVerificationResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.DeviceVerificationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeviceVerificationResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeviceApprovalRequest. */
    interface IDeviceApprovalRequest {

        /** DeviceApprovalRequest email */
        email?: (string|null);

        /** DeviceApprovalRequest twoFactorChannel */
        twoFactorChannel?: (string|null);

        /** DeviceApprovalRequest clientVersion */
        clientVersion?: (string|null);

        /** DeviceApprovalRequest locale */
        locale?: (string|null);

        /** DeviceApprovalRequest encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);

        /** DeviceApprovalRequest totpCode */
        totpCode?: (string|null);

        /** DeviceApprovalRequest deviceIp */
        deviceIp?: (string|null);

        /** DeviceApprovalRequest deviceTokenExpireDays */
        deviceTokenExpireDays?: (string|null);
    }

    /** Represents a DeviceApprovalRequest. */
    class DeviceApprovalRequest implements IDeviceApprovalRequest {

        /**
         * Constructs a new DeviceApprovalRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IDeviceApprovalRequest);

        /** DeviceApprovalRequest email. */
        public email: string;

        /** DeviceApprovalRequest twoFactorChannel. */
        public twoFactorChannel: string;

        /** DeviceApprovalRequest clientVersion. */
        public clientVersion: string;

        /** DeviceApprovalRequest locale. */
        public locale: string;

        /** DeviceApprovalRequest encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /** DeviceApprovalRequest totpCode. */
        public totpCode: string;

        /** DeviceApprovalRequest deviceIp. */
        public deviceIp: string;

        /** DeviceApprovalRequest deviceTokenExpireDays. */
        public deviceTokenExpireDays: string;

        /**
         * Creates a new DeviceApprovalRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeviceApprovalRequest instance
         */
        public static create(properties?: Authentication.IDeviceApprovalRequest): Authentication.DeviceApprovalRequest;

        /**
         * Encodes the specified DeviceApprovalRequest message. Does not implicitly {@link Authentication.DeviceApprovalRequest.verify|verify} messages.
         * @param message DeviceApprovalRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IDeviceApprovalRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeviceApprovalRequest message, length delimited. Does not implicitly {@link Authentication.DeviceApprovalRequest.verify|verify} messages.
         * @param message DeviceApprovalRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IDeviceApprovalRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeviceApprovalRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeviceApprovalRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.DeviceApprovalRequest;

        /**
         * Decodes a DeviceApprovalRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeviceApprovalRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.DeviceApprovalRequest;

        /**
         * Verifies a DeviceApprovalRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeviceApprovalRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeviceApprovalRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.DeviceApprovalRequest;

        /**
         * Creates a plain object from a DeviceApprovalRequest message. Also converts values to other types if specified.
         * @param message DeviceApprovalRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.DeviceApprovalRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeviceApprovalRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeviceApprovalResponse. */
    interface IDeviceApprovalResponse {

        /** DeviceApprovalResponse encryptedTwoFactorToken */
        encryptedTwoFactorToken?: (Uint8Array|null);
    }

    /** Represents a DeviceApprovalResponse. */
    class DeviceApprovalResponse implements IDeviceApprovalResponse {

        /**
         * Constructs a new DeviceApprovalResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IDeviceApprovalResponse);

        /** DeviceApprovalResponse encryptedTwoFactorToken. */
        public encryptedTwoFactorToken: Uint8Array;

        /**
         * Creates a new DeviceApprovalResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeviceApprovalResponse instance
         */
        public static create(properties?: Authentication.IDeviceApprovalResponse): Authentication.DeviceApprovalResponse;

        /**
         * Encodes the specified DeviceApprovalResponse message. Does not implicitly {@link Authentication.DeviceApprovalResponse.verify|verify} messages.
         * @param message DeviceApprovalResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IDeviceApprovalResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeviceApprovalResponse message, length delimited. Does not implicitly {@link Authentication.DeviceApprovalResponse.verify|verify} messages.
         * @param message DeviceApprovalResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IDeviceApprovalResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeviceApprovalResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeviceApprovalResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.DeviceApprovalResponse;

        /**
         * Decodes a DeviceApprovalResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeviceApprovalResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.DeviceApprovalResponse;

        /**
         * Verifies a DeviceApprovalResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeviceApprovalResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeviceApprovalResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.DeviceApprovalResponse;

        /**
         * Creates a plain object from a DeviceApprovalResponse message. Also converts values to other types if specified.
         * @param message DeviceApprovalResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.DeviceApprovalResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeviceApprovalResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ApproveDeviceRequest. */
    interface IApproveDeviceRequest {

        /** ApproveDeviceRequest encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);

        /** ApproveDeviceRequest encryptedDeviceDataKey */
        encryptedDeviceDataKey?: (Uint8Array|null);

        /** ApproveDeviceRequest denyApproval */
        denyApproval?: (boolean|null);

        /** ApproveDeviceRequest linkDevice */
        linkDevice?: (boolean|null);
    }

    /** Represents an ApproveDeviceRequest. */
    class ApproveDeviceRequest implements IApproveDeviceRequest {

        /**
         * Constructs a new ApproveDeviceRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IApproveDeviceRequest);

        /** ApproveDeviceRequest encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /** ApproveDeviceRequest encryptedDeviceDataKey. */
        public encryptedDeviceDataKey: Uint8Array;

        /** ApproveDeviceRequest denyApproval. */
        public denyApproval: boolean;

        /** ApproveDeviceRequest linkDevice. */
        public linkDevice: boolean;

        /**
         * Creates a new ApproveDeviceRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApproveDeviceRequest instance
         */
        public static create(properties?: Authentication.IApproveDeviceRequest): Authentication.ApproveDeviceRequest;

        /**
         * Encodes the specified ApproveDeviceRequest message. Does not implicitly {@link Authentication.ApproveDeviceRequest.verify|verify} messages.
         * @param message ApproveDeviceRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IApproveDeviceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ApproveDeviceRequest message, length delimited. Does not implicitly {@link Authentication.ApproveDeviceRequest.verify|verify} messages.
         * @param message ApproveDeviceRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IApproveDeviceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ApproveDeviceRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApproveDeviceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ApproveDeviceRequest;

        /**
         * Decodes an ApproveDeviceRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApproveDeviceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ApproveDeviceRequest;

        /**
         * Verifies an ApproveDeviceRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ApproveDeviceRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ApproveDeviceRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ApproveDeviceRequest;

        /**
         * Creates a plain object from an ApproveDeviceRequest message. Also converts values to other types if specified.
         * @param message ApproveDeviceRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ApproveDeviceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ApproveDeviceRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseUserAliasRequest. */
    interface IEnterpriseUserAliasRequest {

        /** EnterpriseUserAliasRequest enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** EnterpriseUserAliasRequest alias */
        alias?: (string|null);
    }

    /** Represents an EnterpriseUserAliasRequest. */
    class EnterpriseUserAliasRequest implements IEnterpriseUserAliasRequest {

        /**
         * Constructs a new EnterpriseUserAliasRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IEnterpriseUserAliasRequest);

        /** EnterpriseUserAliasRequest enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** EnterpriseUserAliasRequest alias. */
        public alias: string;

        /**
         * Creates a new EnterpriseUserAliasRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseUserAliasRequest instance
         */
        public static create(properties?: Authentication.IEnterpriseUserAliasRequest): Authentication.EnterpriseUserAliasRequest;

        /**
         * Encodes the specified EnterpriseUserAliasRequest message. Does not implicitly {@link Authentication.EnterpriseUserAliasRequest.verify|verify} messages.
         * @param message EnterpriseUserAliasRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IEnterpriseUserAliasRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseUserAliasRequest message, length delimited. Does not implicitly {@link Authentication.EnterpriseUserAliasRequest.verify|verify} messages.
         * @param message EnterpriseUserAliasRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IEnterpriseUserAliasRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseUserAliasRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseUserAliasRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.EnterpriseUserAliasRequest;

        /**
         * Decodes an EnterpriseUserAliasRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseUserAliasRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.EnterpriseUserAliasRequest;

        /**
         * Verifies an EnterpriseUserAliasRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseUserAliasRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseUserAliasRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.EnterpriseUserAliasRequest;

        /**
         * Creates a plain object from an EnterpriseUserAliasRequest message. Also converts values to other types if specified.
         * @param message EnterpriseUserAliasRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.EnterpriseUserAliasRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseUserAliasRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseUserAddAliasRequest. */
    interface IEnterpriseUserAddAliasRequest {

        /** EnterpriseUserAddAliasRequest enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** EnterpriseUserAddAliasRequest alias */
        alias?: (string|null);

        /** EnterpriseUserAddAliasRequest primary */
        primary?: (boolean|null);
    }

    /** Represents an EnterpriseUserAddAliasRequest. */
    class EnterpriseUserAddAliasRequest implements IEnterpriseUserAddAliasRequest {

        /**
         * Constructs a new EnterpriseUserAddAliasRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IEnterpriseUserAddAliasRequest);

        /** EnterpriseUserAddAliasRequest enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** EnterpriseUserAddAliasRequest alias. */
        public alias: string;

        /** EnterpriseUserAddAliasRequest primary. */
        public primary: boolean;

        /**
         * Creates a new EnterpriseUserAddAliasRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseUserAddAliasRequest instance
         */
        public static create(properties?: Authentication.IEnterpriseUserAddAliasRequest): Authentication.EnterpriseUserAddAliasRequest;

        /**
         * Encodes the specified EnterpriseUserAddAliasRequest message. Does not implicitly {@link Authentication.EnterpriseUserAddAliasRequest.verify|verify} messages.
         * @param message EnterpriseUserAddAliasRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IEnterpriseUserAddAliasRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseUserAddAliasRequest message, length delimited. Does not implicitly {@link Authentication.EnterpriseUserAddAliasRequest.verify|verify} messages.
         * @param message EnterpriseUserAddAliasRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IEnterpriseUserAddAliasRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseUserAddAliasRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseUserAddAliasRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.EnterpriseUserAddAliasRequest;

        /**
         * Decodes an EnterpriseUserAddAliasRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseUserAddAliasRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.EnterpriseUserAddAliasRequest;

        /**
         * Verifies an EnterpriseUserAddAliasRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseUserAddAliasRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseUserAddAliasRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.EnterpriseUserAddAliasRequest;

        /**
         * Creates a plain object from an EnterpriseUserAddAliasRequest message. Also converts values to other types if specified.
         * @param message EnterpriseUserAddAliasRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.EnterpriseUserAddAliasRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseUserAddAliasRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Device. */
    interface IDevice {

        /** Device encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);
    }

    /** Represents a Device. */
    class Device implements IDevice {

        /**
         * Constructs a new Device.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IDevice);

        /** Device encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /**
         * Creates a new Device instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Device instance
         */
        public static create(properties?: Authentication.IDevice): Authentication.Device;

        /**
         * Encodes the specified Device message. Does not implicitly {@link Authentication.Device.verify|verify} messages.
         * @param message Device message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IDevice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Device message, length delimited. Does not implicitly {@link Authentication.Device.verify|verify} messages.
         * @param message Device message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IDevice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Device message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Device
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.Device;

        /**
         * Decodes a Device message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Device
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.Device;

        /**
         * Verifies a Device message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Device message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Device
         */
        public static fromObject(object: { [k: string]: any }): Authentication.Device;

        /**
         * Creates a plain object from a Device message. Also converts values to other types if specified.
         * @param message Device
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.Device, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Device to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RegisterDeviceDataKeyRequest. */
    interface IRegisterDeviceDataKeyRequest {

        /** RegisterDeviceDataKeyRequest encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);

        /** RegisterDeviceDataKeyRequest encryptedDeviceDataKey */
        encryptedDeviceDataKey?: (Uint8Array|null);
    }

    /** Represents a RegisterDeviceDataKeyRequest. */
    class RegisterDeviceDataKeyRequest implements IRegisterDeviceDataKeyRequest {

        /**
         * Constructs a new RegisterDeviceDataKeyRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IRegisterDeviceDataKeyRequest);

        /** RegisterDeviceDataKeyRequest encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /** RegisterDeviceDataKeyRequest encryptedDeviceDataKey. */
        public encryptedDeviceDataKey: Uint8Array;

        /**
         * Creates a new RegisterDeviceDataKeyRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RegisterDeviceDataKeyRequest instance
         */
        public static create(properties?: Authentication.IRegisterDeviceDataKeyRequest): Authentication.RegisterDeviceDataKeyRequest;

        /**
         * Encodes the specified RegisterDeviceDataKeyRequest message. Does not implicitly {@link Authentication.RegisterDeviceDataKeyRequest.verify|verify} messages.
         * @param message RegisterDeviceDataKeyRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IRegisterDeviceDataKeyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RegisterDeviceDataKeyRequest message, length delimited. Does not implicitly {@link Authentication.RegisterDeviceDataKeyRequest.verify|verify} messages.
         * @param message RegisterDeviceDataKeyRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IRegisterDeviceDataKeyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RegisterDeviceDataKeyRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RegisterDeviceDataKeyRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.RegisterDeviceDataKeyRequest;

        /**
         * Decodes a RegisterDeviceDataKeyRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RegisterDeviceDataKeyRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.RegisterDeviceDataKeyRequest;

        /**
         * Verifies a RegisterDeviceDataKeyRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RegisterDeviceDataKeyRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RegisterDeviceDataKeyRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.RegisterDeviceDataKeyRequest;

        /**
         * Creates a plain object from a RegisterDeviceDataKeyRequest message. Also converts values to other types if specified.
         * @param message RegisterDeviceDataKeyRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.RegisterDeviceDataKeyRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RegisterDeviceDataKeyRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ValidateCreateUserVerificationCodeRequest. */
    interface IValidateCreateUserVerificationCodeRequest {

        /** ValidateCreateUserVerificationCodeRequest username */
        username?: (string|null);

        /** ValidateCreateUserVerificationCodeRequest clientVersion */
        clientVersion?: (string|null);

        /** ValidateCreateUserVerificationCodeRequest verificationCode */
        verificationCode?: (string|null);
    }

    /** Represents a ValidateCreateUserVerificationCodeRequest. */
    class ValidateCreateUserVerificationCodeRequest implements IValidateCreateUserVerificationCodeRequest {

        /**
         * Constructs a new ValidateCreateUserVerificationCodeRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IValidateCreateUserVerificationCodeRequest);

        /** ValidateCreateUserVerificationCodeRequest username. */
        public username: string;

        /** ValidateCreateUserVerificationCodeRequest clientVersion. */
        public clientVersion: string;

        /** ValidateCreateUserVerificationCodeRequest verificationCode. */
        public verificationCode: string;

        /**
         * Creates a new ValidateCreateUserVerificationCodeRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ValidateCreateUserVerificationCodeRequest instance
         */
        public static create(properties?: Authentication.IValidateCreateUserVerificationCodeRequest): Authentication.ValidateCreateUserVerificationCodeRequest;

        /**
         * Encodes the specified ValidateCreateUserVerificationCodeRequest message. Does not implicitly {@link Authentication.ValidateCreateUserVerificationCodeRequest.verify|verify} messages.
         * @param message ValidateCreateUserVerificationCodeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IValidateCreateUserVerificationCodeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ValidateCreateUserVerificationCodeRequest message, length delimited. Does not implicitly {@link Authentication.ValidateCreateUserVerificationCodeRequest.verify|verify} messages.
         * @param message ValidateCreateUserVerificationCodeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IValidateCreateUserVerificationCodeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ValidateCreateUserVerificationCodeRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ValidateCreateUserVerificationCodeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ValidateCreateUserVerificationCodeRequest;

        /**
         * Decodes a ValidateCreateUserVerificationCodeRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ValidateCreateUserVerificationCodeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ValidateCreateUserVerificationCodeRequest;

        /**
         * Verifies a ValidateCreateUserVerificationCodeRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ValidateCreateUserVerificationCodeRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ValidateCreateUserVerificationCodeRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ValidateCreateUserVerificationCodeRequest;

        /**
         * Creates a plain object from a ValidateCreateUserVerificationCodeRequest message. Also converts values to other types if specified.
         * @param message ValidateCreateUserVerificationCodeRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ValidateCreateUserVerificationCodeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ValidateCreateUserVerificationCodeRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ValidateDeviceVerificationCodeRequest. */
    interface IValidateDeviceVerificationCodeRequest {

        /** ValidateDeviceVerificationCodeRequest username */
        username?: (string|null);

        /** ValidateDeviceVerificationCodeRequest clientVersion */
        clientVersion?: (string|null);

        /** ValidateDeviceVerificationCodeRequest verificationCode */
        verificationCode?: (string|null);

        /** ValidateDeviceVerificationCodeRequest messageSessionUid */
        messageSessionUid?: (Uint8Array|null);

        /** ValidateDeviceVerificationCodeRequest encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);
    }

    /** Represents a ValidateDeviceVerificationCodeRequest. */
    class ValidateDeviceVerificationCodeRequest implements IValidateDeviceVerificationCodeRequest {

        /**
         * Constructs a new ValidateDeviceVerificationCodeRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IValidateDeviceVerificationCodeRequest);

        /** ValidateDeviceVerificationCodeRequest username. */
        public username: string;

        /** ValidateDeviceVerificationCodeRequest clientVersion. */
        public clientVersion: string;

        /** ValidateDeviceVerificationCodeRequest verificationCode. */
        public verificationCode: string;

        /** ValidateDeviceVerificationCodeRequest messageSessionUid. */
        public messageSessionUid: Uint8Array;

        /** ValidateDeviceVerificationCodeRequest encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /**
         * Creates a new ValidateDeviceVerificationCodeRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ValidateDeviceVerificationCodeRequest instance
         */
        public static create(properties?: Authentication.IValidateDeviceVerificationCodeRequest): Authentication.ValidateDeviceVerificationCodeRequest;

        /**
         * Encodes the specified ValidateDeviceVerificationCodeRequest message. Does not implicitly {@link Authentication.ValidateDeviceVerificationCodeRequest.verify|verify} messages.
         * @param message ValidateDeviceVerificationCodeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IValidateDeviceVerificationCodeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ValidateDeviceVerificationCodeRequest message, length delimited. Does not implicitly {@link Authentication.ValidateDeviceVerificationCodeRequest.verify|verify} messages.
         * @param message ValidateDeviceVerificationCodeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IValidateDeviceVerificationCodeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ValidateDeviceVerificationCodeRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ValidateDeviceVerificationCodeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ValidateDeviceVerificationCodeRequest;

        /**
         * Decodes a ValidateDeviceVerificationCodeRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ValidateDeviceVerificationCodeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ValidateDeviceVerificationCodeRequest;

        /**
         * Verifies a ValidateDeviceVerificationCodeRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ValidateDeviceVerificationCodeRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ValidateDeviceVerificationCodeRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ValidateDeviceVerificationCodeRequest;

        /**
         * Creates a plain object from a ValidateDeviceVerificationCodeRequest message. Also converts values to other types if specified.
         * @param message ValidateDeviceVerificationCodeRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ValidateDeviceVerificationCodeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ValidateDeviceVerificationCodeRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SendSessionMessageRequest. */
    interface ISendSessionMessageRequest {

        /** SendSessionMessageRequest messageSessionUid */
        messageSessionUid?: (Uint8Array|null);

        /** SendSessionMessageRequest command */
        command?: (string|null);

        /** SendSessionMessageRequest username */
        username?: (string|null);
    }

    /** Represents a SendSessionMessageRequest. */
    class SendSessionMessageRequest implements ISendSessionMessageRequest {

        /**
         * Constructs a new SendSessionMessageRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ISendSessionMessageRequest);

        /** SendSessionMessageRequest messageSessionUid. */
        public messageSessionUid: Uint8Array;

        /** SendSessionMessageRequest command. */
        public command: string;

        /** SendSessionMessageRequest username. */
        public username: string;

        /**
         * Creates a new SendSessionMessageRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SendSessionMessageRequest instance
         */
        public static create(properties?: Authentication.ISendSessionMessageRequest): Authentication.SendSessionMessageRequest;

        /**
         * Encodes the specified SendSessionMessageRequest message. Does not implicitly {@link Authentication.SendSessionMessageRequest.verify|verify} messages.
         * @param message SendSessionMessageRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ISendSessionMessageRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SendSessionMessageRequest message, length delimited. Does not implicitly {@link Authentication.SendSessionMessageRequest.verify|verify} messages.
         * @param message SendSessionMessageRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ISendSessionMessageRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SendSessionMessageRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SendSessionMessageRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.SendSessionMessageRequest;

        /**
         * Decodes a SendSessionMessageRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SendSessionMessageRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.SendSessionMessageRequest;

        /**
         * Verifies a SendSessionMessageRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SendSessionMessageRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SendSessionMessageRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.SendSessionMessageRequest;

        /**
         * Creates a plain object from a SendSessionMessageRequest message. Also converts values to other types if specified.
         * @param message SendSessionMessageRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.SendSessionMessageRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SendSessionMessageRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GlobalUserAccount. */
    interface IGlobalUserAccount {

        /** GlobalUserAccount username */
        username?: (string|null);

        /** GlobalUserAccount accountUid */
        accountUid?: (Uint8Array|null);

        /** GlobalUserAccount regionName */
        regionName?: (string|null);
    }

    /** Represents a GlobalUserAccount. */
    class GlobalUserAccount implements IGlobalUserAccount {

        /**
         * Constructs a new GlobalUserAccount.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IGlobalUserAccount);

        /** GlobalUserAccount username. */
        public username: string;

        /** GlobalUserAccount accountUid. */
        public accountUid: Uint8Array;

        /** GlobalUserAccount regionName. */
        public regionName: string;

        /**
         * Creates a new GlobalUserAccount instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GlobalUserAccount instance
         */
        public static create(properties?: Authentication.IGlobalUserAccount): Authentication.GlobalUserAccount;

        /**
         * Encodes the specified GlobalUserAccount message. Does not implicitly {@link Authentication.GlobalUserAccount.verify|verify} messages.
         * @param message GlobalUserAccount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IGlobalUserAccount, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GlobalUserAccount message, length delimited. Does not implicitly {@link Authentication.GlobalUserAccount.verify|verify} messages.
         * @param message GlobalUserAccount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IGlobalUserAccount, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GlobalUserAccount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GlobalUserAccount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.GlobalUserAccount;

        /**
         * Decodes a GlobalUserAccount message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GlobalUserAccount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.GlobalUserAccount;

        /**
         * Verifies a GlobalUserAccount message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GlobalUserAccount message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GlobalUserAccount
         */
        public static fromObject(object: { [k: string]: any }): Authentication.GlobalUserAccount;

        /**
         * Creates a plain object from a GlobalUserAccount message. Also converts values to other types if specified.
         * @param message GlobalUserAccount
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.GlobalUserAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GlobalUserAccount to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AccountUsername. */
    interface IAccountUsername {

        /** AccountUsername username */
        username?: (string|null);

        /** AccountUsername dateActive */
        dateActive?: (string|null);
    }

    /** Represents an AccountUsername. */
    class AccountUsername implements IAccountUsername {

        /**
         * Constructs a new AccountUsername.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IAccountUsername);

        /** AccountUsername username. */
        public username: string;

        /** AccountUsername dateActive. */
        public dateActive: string;

        /**
         * Creates a new AccountUsername instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AccountUsername instance
         */
        public static create(properties?: Authentication.IAccountUsername): Authentication.AccountUsername;

        /**
         * Encodes the specified AccountUsername message. Does not implicitly {@link Authentication.AccountUsername.verify|verify} messages.
         * @param message AccountUsername message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IAccountUsername, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AccountUsername message, length delimited. Does not implicitly {@link Authentication.AccountUsername.verify|verify} messages.
         * @param message AccountUsername message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IAccountUsername, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AccountUsername message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AccountUsername
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.AccountUsername;

        /**
         * Decodes an AccountUsername message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AccountUsername
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.AccountUsername;

        /**
         * Verifies an AccountUsername message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AccountUsername message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AccountUsername
         */
        public static fromObject(object: { [k: string]: any }): Authentication.AccountUsername;

        /**
         * Creates a plain object from an AccountUsername message. Also converts values to other types if specified.
         * @param message AccountUsername
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.AccountUsername, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AccountUsername to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoServiceProviderRequest. */
    interface ISsoServiceProviderRequest {

        /** SsoServiceProviderRequest name */
        name?: (string|null);

        /** SsoServiceProviderRequest clientVersion */
        clientVersion?: (string|null);

        /** SsoServiceProviderRequest locale */
        locale?: (string|null);
    }

    /** This is the input to the get_sso_service_provider command. */
    class SsoServiceProviderRequest implements ISsoServiceProviderRequest {

        /**
         * Constructs a new SsoServiceProviderRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ISsoServiceProviderRequest);

        /** SsoServiceProviderRequest name. */
        public name: string;

        /** SsoServiceProviderRequest clientVersion. */
        public clientVersion: string;

        /** SsoServiceProviderRequest locale. */
        public locale: string;

        /**
         * Creates a new SsoServiceProviderRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoServiceProviderRequest instance
         */
        public static create(properties?: Authentication.ISsoServiceProviderRequest): Authentication.SsoServiceProviderRequest;

        /**
         * Encodes the specified SsoServiceProviderRequest message. Does not implicitly {@link Authentication.SsoServiceProviderRequest.verify|verify} messages.
         * @param message SsoServiceProviderRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ISsoServiceProviderRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoServiceProviderRequest message, length delimited. Does not implicitly {@link Authentication.SsoServiceProviderRequest.verify|verify} messages.
         * @param message SsoServiceProviderRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ISsoServiceProviderRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoServiceProviderRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoServiceProviderRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.SsoServiceProviderRequest;

        /**
         * Decodes a SsoServiceProviderRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoServiceProviderRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.SsoServiceProviderRequest;

        /**
         * Verifies a SsoServiceProviderRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoServiceProviderRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoServiceProviderRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.SsoServiceProviderRequest;

        /**
         * Creates a plain object from a SsoServiceProviderRequest message. Also converts values to other types if specified.
         * @param message SsoServiceProviderRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.SsoServiceProviderRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoServiceProviderRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoServiceProviderResponse. */
    interface ISsoServiceProviderResponse {

        /** SsoServiceProviderResponse name */
        name?: (string|null);

        /** SsoServiceProviderResponse spUrl */
        spUrl?: (string|null);

        /** SsoServiceProviderResponse isCloud */
        isCloud?: (boolean|null);

        /** SsoServiceProviderResponse clientVersion */
        clientVersion?: (string|null);
    }

    /** This is the response from the get_sso_service_provider command. */
    class SsoServiceProviderResponse implements ISsoServiceProviderResponse {

        /**
         * Constructs a new SsoServiceProviderResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ISsoServiceProviderResponse);

        /** SsoServiceProviderResponse name. */
        public name: string;

        /** SsoServiceProviderResponse spUrl. */
        public spUrl: string;

        /** SsoServiceProviderResponse isCloud. */
        public isCloud: boolean;

        /** SsoServiceProviderResponse clientVersion. */
        public clientVersion: string;

        /**
         * Creates a new SsoServiceProviderResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoServiceProviderResponse instance
         */
        public static create(properties?: Authentication.ISsoServiceProviderResponse): Authentication.SsoServiceProviderResponse;

        /**
         * Encodes the specified SsoServiceProviderResponse message. Does not implicitly {@link Authentication.SsoServiceProviderResponse.verify|verify} messages.
         * @param message SsoServiceProviderResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ISsoServiceProviderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoServiceProviderResponse message, length delimited. Does not implicitly {@link Authentication.SsoServiceProviderResponse.verify|verify} messages.
         * @param message SsoServiceProviderResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ISsoServiceProviderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoServiceProviderResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoServiceProviderResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.SsoServiceProviderResponse;

        /**
         * Decodes a SsoServiceProviderResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoServiceProviderResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.SsoServiceProviderResponse;

        /**
         * Verifies a SsoServiceProviderResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoServiceProviderResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoServiceProviderResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.SsoServiceProviderResponse;

        /**
         * Creates a plain object from a SsoServiceProviderResponse message. Also converts values to other types if specified.
         * @param message SsoServiceProviderResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.SsoServiceProviderResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoServiceProviderResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserSettingRequest. */
    interface IUserSettingRequest {

        /** UserSettingRequest setting */
        setting?: (string|null);

        /** UserSettingRequest value */
        value?: (string|null);
    }

    /** Represents a UserSettingRequest. */
    class UserSettingRequest implements IUserSettingRequest {

        /**
         * Constructs a new UserSettingRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IUserSettingRequest);

        /** UserSettingRequest setting. */
        public setting: string;

        /** UserSettingRequest value. */
        public value: string;

        /**
         * Creates a new UserSettingRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserSettingRequest instance
         */
        public static create(properties?: Authentication.IUserSettingRequest): Authentication.UserSettingRequest;

        /**
         * Encodes the specified UserSettingRequest message. Does not implicitly {@link Authentication.UserSettingRequest.verify|verify} messages.
         * @param message UserSettingRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IUserSettingRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserSettingRequest message, length delimited. Does not implicitly {@link Authentication.UserSettingRequest.verify|verify} messages.
         * @param message UserSettingRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IUserSettingRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserSettingRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserSettingRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.UserSettingRequest;

        /**
         * Decodes a UserSettingRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserSettingRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.UserSettingRequest;

        /**
         * Verifies a UserSettingRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserSettingRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserSettingRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.UserSettingRequest;

        /**
         * Creates a plain object from a UserSettingRequest message. Also converts values to other types if specified.
         * @param message UserSettingRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.UserSettingRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserSettingRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** AlternateAuthenticationType enum. */
    enum AlternateAuthenticationType {
        ALTERNATE_MASTER_PASSWORD = 0,
        BIOMETRIC = 1,
        ACCOUNT_RECOVER = 2
    }

    /** ThrottleType enum. */
    enum ThrottleType {
        PASSWORD_RETRY_THROTTLE = 0,
        PASSWORD_RETRY_LEGACY_THROTTLE = 1,
        TWO_FA_THROTTLE = 2,
        TWO_FA_LEGACY_THROTTLE = 3,
        QA_RETRY_THROTTLE = 4,
        ACCOUNT_RECOVER_THROTTLE = 5,
        VALIDATE_DEVICE_VERIFICATION_CODE_THROTTLE = 6,
        VALIDATE_CREATE_USER_VERIFICATION_CODE_THROTTLE = 7
    }

    /** Properties of a ThrottleState. */
    interface IThrottleState {

        /** ThrottleState type */
        type?: (Authentication.ThrottleType|null);

        /** ThrottleState key */
        key?: (string|null);

        /** ThrottleState value */
        value?: (string|null);

        /** ThrottleState state */
        state?: (boolean|null);
    }

    /** Represents a ThrottleState. */
    class ThrottleState implements IThrottleState {

        /**
         * Constructs a new ThrottleState.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IThrottleState);

        /** ThrottleState type. */
        public type: Authentication.ThrottleType;

        /** ThrottleState key. */
        public key: string;

        /** ThrottleState value. */
        public value: string;

        /** ThrottleState state. */
        public state: boolean;

        /**
         * Creates a new ThrottleState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ThrottleState instance
         */
        public static create(properties?: Authentication.IThrottleState): Authentication.ThrottleState;

        /**
         * Encodes the specified ThrottleState message. Does not implicitly {@link Authentication.ThrottleState.verify|verify} messages.
         * @param message ThrottleState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IThrottleState, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ThrottleState message, length delimited. Does not implicitly {@link Authentication.ThrottleState.verify|verify} messages.
         * @param message ThrottleState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IThrottleState, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ThrottleState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ThrottleState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ThrottleState;

        /**
         * Decodes a ThrottleState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ThrottleState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ThrottleState;

        /**
         * Verifies a ThrottleState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ThrottleState message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ThrottleState
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ThrottleState;

        /**
         * Creates a plain object from a ThrottleState message. Also converts values to other types if specified.
         * @param message ThrottleState
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ThrottleState, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ThrottleState to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ThrottleState2. */
    interface IThrottleState2 {

        /** ThrottleState2 key */
        key?: (string|null);

        /** ThrottleState2 keyDescription */
        keyDescription?: (string|null);

        /** ThrottleState2 value */
        value?: (string|null);

        /** ThrottleState2 valueDescription */
        valueDescription?: (string|null);

        /** ThrottleState2 identifier */
        identifier?: (string|null);

        /** ThrottleState2 locked */
        locked?: (boolean|null);

        /** ThrottleState2 includedInAllClear */
        includedInAllClear?: (boolean|null);

        /** ThrottleState2 expireSeconds */
        expireSeconds?: (number|null);
    }

    /** Represents a ThrottleState2. */
    class ThrottleState2 implements IThrottleState2 {

        /**
         * Constructs a new ThrottleState2.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IThrottleState2);

        /** ThrottleState2 key. */
        public key: string;

        /** ThrottleState2 keyDescription. */
        public keyDescription: string;

        /** ThrottleState2 value. */
        public value: string;

        /** ThrottleState2 valueDescription. */
        public valueDescription: string;

        /** ThrottleState2 identifier. */
        public identifier: string;

        /** ThrottleState2 locked. */
        public locked: boolean;

        /** ThrottleState2 includedInAllClear. */
        public includedInAllClear: boolean;

        /** ThrottleState2 expireSeconds. */
        public expireSeconds: number;

        /**
         * Creates a new ThrottleState2 instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ThrottleState2 instance
         */
        public static create(properties?: Authentication.IThrottleState2): Authentication.ThrottleState2;

        /**
         * Encodes the specified ThrottleState2 message. Does not implicitly {@link Authentication.ThrottleState2.verify|verify} messages.
         * @param message ThrottleState2 message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IThrottleState2, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ThrottleState2 message, length delimited. Does not implicitly {@link Authentication.ThrottleState2.verify|verify} messages.
         * @param message ThrottleState2 message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IThrottleState2, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ThrottleState2 message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ThrottleState2
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ThrottleState2;

        /**
         * Decodes a ThrottleState2 message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ThrottleState2
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ThrottleState2;

        /**
         * Verifies a ThrottleState2 message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ThrottleState2 message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ThrottleState2
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ThrottleState2;

        /**
         * Creates a plain object from a ThrottleState2 message. Also converts values to other types if specified.
         * @param message ThrottleState2
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ThrottleState2, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ThrottleState2 to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeviceInformation. */
    interface IDeviceInformation {

        /** DeviceInformation deviceId */
        deviceId?: (number|Long|null);

        /** DeviceInformation deviceName */
        deviceName?: (string|null);

        /** DeviceInformation clientVersion */
        clientVersion?: (string|null);

        /** DeviceInformation lastLogin */
        lastLogin?: (number|Long|null);

        /** DeviceInformation deviceStatus */
        deviceStatus?: (Authentication.DeviceStatus|null);
    }

    /** Represents a DeviceInformation. */
    class DeviceInformation implements IDeviceInformation {

        /**
         * Constructs a new DeviceInformation.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IDeviceInformation);

        /** DeviceInformation deviceId. */
        public deviceId: (number|Long);

        /** DeviceInformation deviceName. */
        public deviceName: string;

        /** DeviceInformation clientVersion. */
        public clientVersion: string;

        /** DeviceInformation lastLogin. */
        public lastLogin: (number|Long);

        /** DeviceInformation deviceStatus. */
        public deviceStatus: Authentication.DeviceStatus;

        /**
         * Creates a new DeviceInformation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeviceInformation instance
         */
        public static create(properties?: Authentication.IDeviceInformation): Authentication.DeviceInformation;

        /**
         * Encodes the specified DeviceInformation message. Does not implicitly {@link Authentication.DeviceInformation.verify|verify} messages.
         * @param message DeviceInformation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IDeviceInformation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeviceInformation message, length delimited. Does not implicitly {@link Authentication.DeviceInformation.verify|verify} messages.
         * @param message DeviceInformation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IDeviceInformation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeviceInformation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeviceInformation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.DeviceInformation;

        /**
         * Decodes a DeviceInformation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeviceInformation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.DeviceInformation;

        /**
         * Verifies a DeviceInformation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeviceInformation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeviceInformation
         */
        public static fromObject(object: { [k: string]: any }): Authentication.DeviceInformation;

        /**
         * Creates a plain object from a DeviceInformation message. Also converts values to other types if specified.
         * @param message DeviceInformation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.DeviceInformation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeviceInformation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserSetting. */
    interface IUserSetting {

        /** UserSetting name */
        name?: (string|null);

        /** UserSetting value */
        value?: (boolean|null);
    }

    /** Represents a UserSetting. */
    class UserSetting implements IUserSetting {

        /**
         * Constructs a new UserSetting.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IUserSetting);

        /** UserSetting name. */
        public name: string;

        /** UserSetting value. */
        public value: boolean;

        /**
         * Creates a new UserSetting instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserSetting instance
         */
        public static create(properties?: Authentication.IUserSetting): Authentication.UserSetting;

        /**
         * Encodes the specified UserSetting message. Does not implicitly {@link Authentication.UserSetting.verify|verify} messages.
         * @param message UserSetting message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IUserSetting, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserSetting message, length delimited. Does not implicitly {@link Authentication.UserSetting.verify|verify} messages.
         * @param message UserSetting message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IUserSetting, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserSetting message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserSetting
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.UserSetting;

        /**
         * Decodes a UserSetting message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserSetting
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.UserSetting;

        /**
         * Verifies a UserSetting message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserSetting message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserSetting
         */
        public static fromObject(object: { [k: string]: any }): Authentication.UserSetting;

        /**
         * Creates a plain object from a UserSetting message. Also converts values to other types if specified.
         * @param message UserSetting
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.UserSetting, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserSetting to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserDataKeyRequest. */
    interface IUserDataKeyRequest {

        /** UserDataKeyRequest enterpriseUserId */
        enterpriseUserId?: ((number|Long)[]|null);
    }

    /** Represents a UserDataKeyRequest. */
    class UserDataKeyRequest implements IUserDataKeyRequest {

        /**
         * Constructs a new UserDataKeyRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IUserDataKeyRequest);

        /** UserDataKeyRequest enterpriseUserId. */
        public enterpriseUserId: (number|Long)[];

        /**
         * Creates a new UserDataKeyRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserDataKeyRequest instance
         */
        public static create(properties?: Authentication.IUserDataKeyRequest): Authentication.UserDataKeyRequest;

        /**
         * Encodes the specified UserDataKeyRequest message. Does not implicitly {@link Authentication.UserDataKeyRequest.verify|verify} messages.
         * @param message UserDataKeyRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IUserDataKeyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserDataKeyRequest message, length delimited. Does not implicitly {@link Authentication.UserDataKeyRequest.verify|verify} messages.
         * @param message UserDataKeyRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IUserDataKeyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserDataKeyRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserDataKeyRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.UserDataKeyRequest;

        /**
         * Decodes a UserDataKeyRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserDataKeyRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.UserDataKeyRequest;

        /**
         * Verifies a UserDataKeyRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserDataKeyRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserDataKeyRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.UserDataKeyRequest;

        /**
         * Creates a plain object from a UserDataKeyRequest message. Also converts values to other types if specified.
         * @param message UserDataKeyRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.UserDataKeyRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserDataKeyRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseUserIdDataKeyPair. */
    interface IEnterpriseUserIdDataKeyPair {

        /** EnterpriseUserIdDataKeyPair enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** EnterpriseUserIdDataKeyPair encryptedDataKey */
        encryptedDataKey?: (Uint8Array|null);
    }

    /** Represents an EnterpriseUserIdDataKeyPair. */
    class EnterpriseUserIdDataKeyPair implements IEnterpriseUserIdDataKeyPair {

        /**
         * Constructs a new EnterpriseUserIdDataKeyPair.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IEnterpriseUserIdDataKeyPair);

        /** EnterpriseUserIdDataKeyPair enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** EnterpriseUserIdDataKeyPair encryptedDataKey. */
        public encryptedDataKey: Uint8Array;

        /**
         * Creates a new EnterpriseUserIdDataKeyPair instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseUserIdDataKeyPair instance
         */
        public static create(properties?: Authentication.IEnterpriseUserIdDataKeyPair): Authentication.EnterpriseUserIdDataKeyPair;

        /**
         * Encodes the specified EnterpriseUserIdDataKeyPair message. Does not implicitly {@link Authentication.EnterpriseUserIdDataKeyPair.verify|verify} messages.
         * @param message EnterpriseUserIdDataKeyPair message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IEnterpriseUserIdDataKeyPair, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseUserIdDataKeyPair message, length delimited. Does not implicitly {@link Authentication.EnterpriseUserIdDataKeyPair.verify|verify} messages.
         * @param message EnterpriseUserIdDataKeyPair message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IEnterpriseUserIdDataKeyPair, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseUserIdDataKeyPair message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseUserIdDataKeyPair
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.EnterpriseUserIdDataKeyPair;

        /**
         * Decodes an EnterpriseUserIdDataKeyPair message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseUserIdDataKeyPair
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.EnterpriseUserIdDataKeyPair;

        /**
         * Verifies an EnterpriseUserIdDataKeyPair message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseUserIdDataKeyPair message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseUserIdDataKeyPair
         */
        public static fromObject(object: { [k: string]: any }): Authentication.EnterpriseUserIdDataKeyPair;

        /**
         * Creates a plain object from an EnterpriseUserIdDataKeyPair message. Also converts values to other types if specified.
         * @param message EnterpriseUserIdDataKeyPair
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.EnterpriseUserIdDataKeyPair, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseUserIdDataKeyPair to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserDataKey. */
    interface IUserDataKey {

        /** UserDataKey roleId */
        roleId?: (number|Long|null);

        /** UserDataKey roleKey */
        roleKey?: (Uint8Array|null);

        /** UserDataKey privateKey */
        privateKey?: (string|null);

        /** UserDataKey enterpriseUserIdDataKeyPairs */
        enterpriseUserIdDataKeyPairs?: (Authentication.IEnterpriseUserIdDataKeyPair[]|null);
    }

    /** Represents a UserDataKey. */
    class UserDataKey implements IUserDataKey {

        /**
         * Constructs a new UserDataKey.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IUserDataKey);

        /** UserDataKey roleId. */
        public roleId: (number|Long);

        /** UserDataKey roleKey. */
        public roleKey: Uint8Array;

        /** UserDataKey privateKey. */
        public privateKey: string;

        /** UserDataKey enterpriseUserIdDataKeyPairs. */
        public enterpriseUserIdDataKeyPairs: Authentication.IEnterpriseUserIdDataKeyPair[];

        /**
         * Creates a new UserDataKey instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserDataKey instance
         */
        public static create(properties?: Authentication.IUserDataKey): Authentication.UserDataKey;

        /**
         * Encodes the specified UserDataKey message. Does not implicitly {@link Authentication.UserDataKey.verify|verify} messages.
         * @param message UserDataKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IUserDataKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserDataKey message, length delimited. Does not implicitly {@link Authentication.UserDataKey.verify|verify} messages.
         * @param message UserDataKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IUserDataKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserDataKey message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserDataKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.UserDataKey;

        /**
         * Decodes a UserDataKey message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserDataKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.UserDataKey;

        /**
         * Verifies a UserDataKey message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserDataKey message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserDataKey
         */
        public static fromObject(object: { [k: string]: any }): Authentication.UserDataKey;

        /**
         * Creates a plain object from a UserDataKey message. Also converts values to other types if specified.
         * @param message UserDataKey
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.UserDataKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserDataKey to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserDataKeyResponse. */
    interface IUserDataKeyResponse {

        /** UserDataKeyResponse userDataKeys */
        userDataKeys?: (Authentication.IUserDataKey[]|null);

        /** UserDataKeyResponse accessDenied */
        accessDenied?: ((number|Long)[]|null);

        /** UserDataKeyResponse noEncryptedDataKey */
        noEncryptedDataKey?: ((number|Long)[]|null);
    }

    /** Represents a UserDataKeyResponse. */
    class UserDataKeyResponse implements IUserDataKeyResponse {

        /**
         * Constructs a new UserDataKeyResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IUserDataKeyResponse);

        /** UserDataKeyResponse userDataKeys. */
        public userDataKeys: Authentication.IUserDataKey[];

        /** UserDataKeyResponse accessDenied. */
        public accessDenied: (number|Long)[];

        /** UserDataKeyResponse noEncryptedDataKey. */
        public noEncryptedDataKey: (number|Long)[];

        /**
         * Creates a new UserDataKeyResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserDataKeyResponse instance
         */
        public static create(properties?: Authentication.IUserDataKeyResponse): Authentication.UserDataKeyResponse;

        /**
         * Encodes the specified UserDataKeyResponse message. Does not implicitly {@link Authentication.UserDataKeyResponse.verify|verify} messages.
         * @param message UserDataKeyResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IUserDataKeyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserDataKeyResponse message, length delimited. Does not implicitly {@link Authentication.UserDataKeyResponse.verify|verify} messages.
         * @param message UserDataKeyResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IUserDataKeyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserDataKeyResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserDataKeyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.UserDataKeyResponse;

        /**
         * Decodes a UserDataKeyResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserDataKeyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.UserDataKeyResponse;

        /**
         * Verifies a UserDataKeyResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserDataKeyResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserDataKeyResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.UserDataKeyResponse;

        /**
         * Creates a plain object from a UserDataKeyResponse message. Also converts values to other types if specified.
         * @param message UserDataKeyResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.UserDataKeyResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserDataKeyResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MasterPasswordRecoveryVerificationRequest. */
    interface IMasterPasswordRecoveryVerificationRequest {

        /** MasterPasswordRecoveryVerificationRequest encryptedLoginToken */
        encryptedLoginToken?: (Uint8Array|null);
    }

    /** Represents a MasterPasswordRecoveryVerificationRequest. */
    class MasterPasswordRecoveryVerificationRequest implements IMasterPasswordRecoveryVerificationRequest {

        /**
         * Constructs a new MasterPasswordRecoveryVerificationRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IMasterPasswordRecoveryVerificationRequest);

        /** MasterPasswordRecoveryVerificationRequest encryptedLoginToken. */
        public encryptedLoginToken: Uint8Array;

        /**
         * Creates a new MasterPasswordRecoveryVerificationRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MasterPasswordRecoveryVerificationRequest instance
         */
        public static create(properties?: Authentication.IMasterPasswordRecoveryVerificationRequest): Authentication.MasterPasswordRecoveryVerificationRequest;

        /**
         * Encodes the specified MasterPasswordRecoveryVerificationRequest message. Does not implicitly {@link Authentication.MasterPasswordRecoveryVerificationRequest.verify|verify} messages.
         * @param message MasterPasswordRecoveryVerificationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IMasterPasswordRecoveryVerificationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MasterPasswordRecoveryVerificationRequest message, length delimited. Does not implicitly {@link Authentication.MasterPasswordRecoveryVerificationRequest.verify|verify} messages.
         * @param message MasterPasswordRecoveryVerificationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IMasterPasswordRecoveryVerificationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MasterPasswordRecoveryVerificationRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MasterPasswordRecoveryVerificationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.MasterPasswordRecoveryVerificationRequest;

        /**
         * Decodes a MasterPasswordRecoveryVerificationRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MasterPasswordRecoveryVerificationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.MasterPasswordRecoveryVerificationRequest;

        /**
         * Verifies a MasterPasswordRecoveryVerificationRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MasterPasswordRecoveryVerificationRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MasterPasswordRecoveryVerificationRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.MasterPasswordRecoveryVerificationRequest;

        /**
         * Creates a plain object from a MasterPasswordRecoveryVerificationRequest message. Also converts values to other types if specified.
         * @param message MasterPasswordRecoveryVerificationRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.MasterPasswordRecoveryVerificationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MasterPasswordRecoveryVerificationRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetSecurityQuestionV3Request. */
    interface IGetSecurityQuestionV3Request {

        /** GetSecurityQuestionV3Request encryptedLoginToken */
        encryptedLoginToken?: (Uint8Array|null);

        /** GetSecurityQuestionV3Request verificationCode */
        verificationCode?: (string|null);
    }

    /** Represents a GetSecurityQuestionV3Request. */
    class GetSecurityQuestionV3Request implements IGetSecurityQuestionV3Request {

        /**
         * Constructs a new GetSecurityQuestionV3Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IGetSecurityQuestionV3Request);

        /** GetSecurityQuestionV3Request encryptedLoginToken. */
        public encryptedLoginToken: Uint8Array;

        /** GetSecurityQuestionV3Request verificationCode. */
        public verificationCode: string;

        /**
         * Creates a new GetSecurityQuestionV3Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetSecurityQuestionV3Request instance
         */
        public static create(properties?: Authentication.IGetSecurityQuestionV3Request): Authentication.GetSecurityQuestionV3Request;

        /**
         * Encodes the specified GetSecurityQuestionV3Request message. Does not implicitly {@link Authentication.GetSecurityQuestionV3Request.verify|verify} messages.
         * @param message GetSecurityQuestionV3Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IGetSecurityQuestionV3Request, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetSecurityQuestionV3Request message, length delimited. Does not implicitly {@link Authentication.GetSecurityQuestionV3Request.verify|verify} messages.
         * @param message GetSecurityQuestionV3Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IGetSecurityQuestionV3Request, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetSecurityQuestionV3Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetSecurityQuestionV3Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.GetSecurityQuestionV3Request;

        /**
         * Decodes a GetSecurityQuestionV3Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetSecurityQuestionV3Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.GetSecurityQuestionV3Request;

        /**
         * Verifies a GetSecurityQuestionV3Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetSecurityQuestionV3Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetSecurityQuestionV3Request
         */
        public static fromObject(object: { [k: string]: any }): Authentication.GetSecurityQuestionV3Request;

        /**
         * Creates a plain object from a GetSecurityQuestionV3Request message. Also converts values to other types if specified.
         * @param message GetSecurityQuestionV3Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.GetSecurityQuestionV3Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetSecurityQuestionV3Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetSecurityQuestionV3Response. */
    interface IGetSecurityQuestionV3Response {

        /** GetSecurityQuestionV3Response securityQuestion */
        securityQuestion?: (string|null);

        /** GetSecurityQuestionV3Response backupKeyDate */
        backupKeyDate?: (number|Long|null);

        /** GetSecurityQuestionV3Response salt */
        salt?: (Uint8Array|null);

        /** GetSecurityQuestionV3Response iterations */
        iterations?: (number|null);
    }

    /** Represents a GetSecurityQuestionV3Response. */
    class GetSecurityQuestionV3Response implements IGetSecurityQuestionV3Response {

        /**
         * Constructs a new GetSecurityQuestionV3Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IGetSecurityQuestionV3Response);

        /** GetSecurityQuestionV3Response securityQuestion. */
        public securityQuestion: string;

        /** GetSecurityQuestionV3Response backupKeyDate. */
        public backupKeyDate: (number|Long);

        /** GetSecurityQuestionV3Response salt. */
        public salt: Uint8Array;

        /** GetSecurityQuestionV3Response iterations. */
        public iterations: number;

        /**
         * Creates a new GetSecurityQuestionV3Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetSecurityQuestionV3Response instance
         */
        public static create(properties?: Authentication.IGetSecurityQuestionV3Response): Authentication.GetSecurityQuestionV3Response;

        /**
         * Encodes the specified GetSecurityQuestionV3Response message. Does not implicitly {@link Authentication.GetSecurityQuestionV3Response.verify|verify} messages.
         * @param message GetSecurityQuestionV3Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IGetSecurityQuestionV3Response, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetSecurityQuestionV3Response message, length delimited. Does not implicitly {@link Authentication.GetSecurityQuestionV3Response.verify|verify} messages.
         * @param message GetSecurityQuestionV3Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IGetSecurityQuestionV3Response, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetSecurityQuestionV3Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetSecurityQuestionV3Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.GetSecurityQuestionV3Response;

        /**
         * Decodes a GetSecurityQuestionV3Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetSecurityQuestionV3Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.GetSecurityQuestionV3Response;

        /**
         * Verifies a GetSecurityQuestionV3Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetSecurityQuestionV3Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetSecurityQuestionV3Response
         */
        public static fromObject(object: { [k: string]: any }): Authentication.GetSecurityQuestionV3Response;

        /**
         * Creates a plain object from a GetSecurityQuestionV3Response message. Also converts values to other types if specified.
         * @param message GetSecurityQuestionV3Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.GetSecurityQuestionV3Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetSecurityQuestionV3Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetDataKeyBackupV3Request. */
    interface IGetDataKeyBackupV3Request {

        /** GetDataKeyBackupV3Request encryptedLoginToken */
        encryptedLoginToken?: (Uint8Array|null);

        /** GetDataKeyBackupV3Request verificationCode */
        verificationCode?: (string|null);

        /** GetDataKeyBackupV3Request securityAnswerHash */
        securityAnswerHash?: (Uint8Array|null);
    }

    /** Represents a GetDataKeyBackupV3Request. */
    class GetDataKeyBackupV3Request implements IGetDataKeyBackupV3Request {

        /**
         * Constructs a new GetDataKeyBackupV3Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IGetDataKeyBackupV3Request);

        /** GetDataKeyBackupV3Request encryptedLoginToken. */
        public encryptedLoginToken: Uint8Array;

        /** GetDataKeyBackupV3Request verificationCode. */
        public verificationCode: string;

        /** GetDataKeyBackupV3Request securityAnswerHash. */
        public securityAnswerHash: Uint8Array;

        /**
         * Creates a new GetDataKeyBackupV3Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetDataKeyBackupV3Request instance
         */
        public static create(properties?: Authentication.IGetDataKeyBackupV3Request): Authentication.GetDataKeyBackupV3Request;

        /**
         * Encodes the specified GetDataKeyBackupV3Request message. Does not implicitly {@link Authentication.GetDataKeyBackupV3Request.verify|verify} messages.
         * @param message GetDataKeyBackupV3Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IGetDataKeyBackupV3Request, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetDataKeyBackupV3Request message, length delimited. Does not implicitly {@link Authentication.GetDataKeyBackupV3Request.verify|verify} messages.
         * @param message GetDataKeyBackupV3Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IGetDataKeyBackupV3Request, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetDataKeyBackupV3Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetDataKeyBackupV3Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.GetDataKeyBackupV3Request;

        /**
         * Decodes a GetDataKeyBackupV3Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetDataKeyBackupV3Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.GetDataKeyBackupV3Request;

        /**
         * Verifies a GetDataKeyBackupV3Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetDataKeyBackupV3Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetDataKeyBackupV3Request
         */
        public static fromObject(object: { [k: string]: any }): Authentication.GetDataKeyBackupV3Request;

        /**
         * Creates a plain object from a GetDataKeyBackupV3Request message. Also converts values to other types if specified.
         * @param message GetDataKeyBackupV3Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.GetDataKeyBackupV3Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetDataKeyBackupV3Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PasswordRules. */
    interface IPasswordRules {

        /** PasswordRules ruleType */
        ruleType?: (string|null);

        /** PasswordRules match */
        match?: (boolean|null);

        /** PasswordRules pattern */
        pattern?: (string|null);

        /** PasswordRules description */
        description?: (string|null);

        /** PasswordRules minimum */
        minimum?: (number|null);

        /** PasswordRules value */
        value?: (string|null);
    }

    /** Represents a PasswordRules. */
    class PasswordRules implements IPasswordRules {

        /**
         * Constructs a new PasswordRules.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IPasswordRules);

        /** PasswordRules ruleType. */
        public ruleType: string;

        /** PasswordRules match. */
        public match: boolean;

        /** PasswordRules pattern. */
        public pattern: string;

        /** PasswordRules description. */
        public description: string;

        /** PasswordRules minimum. */
        public minimum: number;

        /** PasswordRules value. */
        public value: string;

        /**
         * Creates a new PasswordRules instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PasswordRules instance
         */
        public static create(properties?: Authentication.IPasswordRules): Authentication.PasswordRules;

        /**
         * Encodes the specified PasswordRules message. Does not implicitly {@link Authentication.PasswordRules.verify|verify} messages.
         * @param message PasswordRules message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IPasswordRules, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PasswordRules message, length delimited. Does not implicitly {@link Authentication.PasswordRules.verify|verify} messages.
         * @param message PasswordRules message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IPasswordRules, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PasswordRules message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PasswordRules
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.PasswordRules;

        /**
         * Decodes a PasswordRules message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PasswordRules
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.PasswordRules;

        /**
         * Verifies a PasswordRules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PasswordRules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PasswordRules
         */
        public static fromObject(object: { [k: string]: any }): Authentication.PasswordRules;

        /**
         * Creates a plain object from a PasswordRules message. Also converts values to other types if specified.
         * @param message PasswordRules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.PasswordRules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PasswordRules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetDataKeyBackupV3Response. */
    interface IGetDataKeyBackupV3Response {

        /** GetDataKeyBackupV3Response dataKeyBackup */
        dataKeyBackup?: (Uint8Array|null);

        /** GetDataKeyBackupV3Response dataKeyBackupDate */
        dataKeyBackupDate?: (number|Long|null);

        /** GetDataKeyBackupV3Response publicKey */
        publicKey?: (Uint8Array|null);

        /** GetDataKeyBackupV3Response encryptedPrivateKey */
        encryptedPrivateKey?: (Uint8Array|null);

        /** GetDataKeyBackupV3Response clientKey */
        clientKey?: (Uint8Array|null);

        /** GetDataKeyBackupV3Response encryptedSessionToken */
        encryptedSessionToken?: (Uint8Array|null);

        /** GetDataKeyBackupV3Response passwordRules */
        passwordRules?: (Authentication.IPasswordRules[]|null);

        /** GetDataKeyBackupV3Response passwordRulesIntro */
        passwordRulesIntro?: (string|null);

        /** GetDataKeyBackupV3Response minimumPbkdf2Iterations */
        minimumPbkdf2Iterations?: (number|null);
    }

    /** Represents a GetDataKeyBackupV3Response. */
    class GetDataKeyBackupV3Response implements IGetDataKeyBackupV3Response {

        /**
         * Constructs a new GetDataKeyBackupV3Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IGetDataKeyBackupV3Response);

        /** GetDataKeyBackupV3Response dataKeyBackup. */
        public dataKeyBackup: Uint8Array;

        /** GetDataKeyBackupV3Response dataKeyBackupDate. */
        public dataKeyBackupDate: (number|Long);

        /** GetDataKeyBackupV3Response publicKey. */
        public publicKey: Uint8Array;

        /** GetDataKeyBackupV3Response encryptedPrivateKey. */
        public encryptedPrivateKey: Uint8Array;

        /** GetDataKeyBackupV3Response clientKey. */
        public clientKey: Uint8Array;

        /** GetDataKeyBackupV3Response encryptedSessionToken. */
        public encryptedSessionToken: Uint8Array;

        /** GetDataKeyBackupV3Response passwordRules. */
        public passwordRules: Authentication.IPasswordRules[];

        /** GetDataKeyBackupV3Response passwordRulesIntro. */
        public passwordRulesIntro: string;

        /** GetDataKeyBackupV3Response minimumPbkdf2Iterations. */
        public minimumPbkdf2Iterations: number;

        /**
         * Creates a new GetDataKeyBackupV3Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetDataKeyBackupV3Response instance
         */
        public static create(properties?: Authentication.IGetDataKeyBackupV3Response): Authentication.GetDataKeyBackupV3Response;

        /**
         * Encodes the specified GetDataKeyBackupV3Response message. Does not implicitly {@link Authentication.GetDataKeyBackupV3Response.verify|verify} messages.
         * @param message GetDataKeyBackupV3Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IGetDataKeyBackupV3Response, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetDataKeyBackupV3Response message, length delimited. Does not implicitly {@link Authentication.GetDataKeyBackupV3Response.verify|verify} messages.
         * @param message GetDataKeyBackupV3Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IGetDataKeyBackupV3Response, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetDataKeyBackupV3Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetDataKeyBackupV3Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.GetDataKeyBackupV3Response;

        /**
         * Decodes a GetDataKeyBackupV3Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetDataKeyBackupV3Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.GetDataKeyBackupV3Response;

        /**
         * Verifies a GetDataKeyBackupV3Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetDataKeyBackupV3Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetDataKeyBackupV3Response
         */
        public static fromObject(object: { [k: string]: any }): Authentication.GetDataKeyBackupV3Response;

        /**
         * Creates a plain object from a GetDataKeyBackupV3Response message. Also converts values to other types if specified.
         * @param message GetDataKeyBackupV3Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.GetDataKeyBackupV3Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetDataKeyBackupV3Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetPublicKeysRequest. */
    interface IGetPublicKeysRequest {

        /** GetPublicKeysRequest usernames */
        usernames?: (string[]|null);
    }

    /** Represents a GetPublicKeysRequest. */
    class GetPublicKeysRequest implements IGetPublicKeysRequest {

        /**
         * Constructs a new GetPublicKeysRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IGetPublicKeysRequest);

        /** GetPublicKeysRequest usernames. */
        public usernames: string[];

        /**
         * Creates a new GetPublicKeysRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetPublicKeysRequest instance
         */
        public static create(properties?: Authentication.IGetPublicKeysRequest): Authentication.GetPublicKeysRequest;

        /**
         * Encodes the specified GetPublicKeysRequest message. Does not implicitly {@link Authentication.GetPublicKeysRequest.verify|verify} messages.
         * @param message GetPublicKeysRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IGetPublicKeysRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetPublicKeysRequest message, length delimited. Does not implicitly {@link Authentication.GetPublicKeysRequest.verify|verify} messages.
         * @param message GetPublicKeysRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IGetPublicKeysRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetPublicKeysRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetPublicKeysRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.GetPublicKeysRequest;

        /**
         * Decodes a GetPublicKeysRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetPublicKeysRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.GetPublicKeysRequest;

        /**
         * Verifies a GetPublicKeysRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetPublicKeysRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetPublicKeysRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.GetPublicKeysRequest;

        /**
         * Creates a plain object from a GetPublicKeysRequest message. Also converts values to other types if specified.
         * @param message GetPublicKeysRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.GetPublicKeysRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetPublicKeysRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PublicKeyResponse. */
    interface IPublicKeyResponse {

        /** PublicKeyResponse username */
        username?: (string|null);

        /** PublicKeyResponse publicKey */
        publicKey?: (Uint8Array|null);

        /** PublicKeyResponse publicEccKey */
        publicEccKey?: (Uint8Array|null);

        /** PublicKeyResponse message */
        message?: (string|null);

        /** PublicKeyResponse errorCode */
        errorCode?: (string|null);
    }

    /** Represents a PublicKeyResponse. */
    class PublicKeyResponse implements IPublicKeyResponse {

        /**
         * Constructs a new PublicKeyResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IPublicKeyResponse);

        /** PublicKeyResponse username. */
        public username: string;

        /** PublicKeyResponse publicKey. */
        public publicKey: Uint8Array;

        /** PublicKeyResponse publicEccKey. */
        public publicEccKey: Uint8Array;

        /** PublicKeyResponse message. */
        public message: string;

        /** PublicKeyResponse errorCode. */
        public errorCode: string;

        /**
         * Creates a new PublicKeyResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PublicKeyResponse instance
         */
        public static create(properties?: Authentication.IPublicKeyResponse): Authentication.PublicKeyResponse;

        /**
         * Encodes the specified PublicKeyResponse message. Does not implicitly {@link Authentication.PublicKeyResponse.verify|verify} messages.
         * @param message PublicKeyResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IPublicKeyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PublicKeyResponse message, length delimited. Does not implicitly {@link Authentication.PublicKeyResponse.verify|verify} messages.
         * @param message PublicKeyResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IPublicKeyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PublicKeyResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PublicKeyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.PublicKeyResponse;

        /**
         * Decodes a PublicKeyResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PublicKeyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.PublicKeyResponse;

        /**
         * Verifies a PublicKeyResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PublicKeyResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PublicKeyResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.PublicKeyResponse;

        /**
         * Creates a plain object from a PublicKeyResponse message. Also converts values to other types if specified.
         * @param message PublicKeyResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.PublicKeyResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PublicKeyResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetPublicKeysResponse. */
    interface IGetPublicKeysResponse {

        /** GetPublicKeysResponse keyResponses */
        keyResponses?: (Authentication.IPublicKeyResponse[]|null);
    }

    /** Represents a GetPublicKeysResponse. */
    class GetPublicKeysResponse implements IGetPublicKeysResponse {

        /**
         * Constructs a new GetPublicKeysResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IGetPublicKeysResponse);

        /** GetPublicKeysResponse keyResponses. */
        public keyResponses: Authentication.IPublicKeyResponse[];

        /**
         * Creates a new GetPublicKeysResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetPublicKeysResponse instance
         */
        public static create(properties?: Authentication.IGetPublicKeysResponse): Authentication.GetPublicKeysResponse;

        /**
         * Encodes the specified GetPublicKeysResponse message. Does not implicitly {@link Authentication.GetPublicKeysResponse.verify|verify} messages.
         * @param message GetPublicKeysResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IGetPublicKeysResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetPublicKeysResponse message, length delimited. Does not implicitly {@link Authentication.GetPublicKeysResponse.verify|verify} messages.
         * @param message GetPublicKeysResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IGetPublicKeysResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetPublicKeysResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetPublicKeysResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.GetPublicKeysResponse;

        /**
         * Decodes a GetPublicKeysResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetPublicKeysResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.GetPublicKeysResponse;

        /**
         * Verifies a GetPublicKeysResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetPublicKeysResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetPublicKeysResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.GetPublicKeysResponse;

        /**
         * Creates a plain object from a GetPublicKeysResponse message. Also converts values to other types if specified.
         * @param message GetPublicKeysResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.GetPublicKeysResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetPublicKeysResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SetEccKeyPairRequest. */
    interface ISetEccKeyPairRequest {

        /** SetEccKeyPairRequest publicKey */
        publicKey?: (Uint8Array|null);

        /** SetEccKeyPairRequest encryptedPrivateKey */
        encryptedPrivateKey?: (Uint8Array|null);
    }

    /** Represents a SetEccKeyPairRequest. */
    class SetEccKeyPairRequest implements ISetEccKeyPairRequest {

        /**
         * Constructs a new SetEccKeyPairRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ISetEccKeyPairRequest);

        /** SetEccKeyPairRequest publicKey. */
        public publicKey: Uint8Array;

        /** SetEccKeyPairRequest encryptedPrivateKey. */
        public encryptedPrivateKey: Uint8Array;

        /**
         * Creates a new SetEccKeyPairRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SetEccKeyPairRequest instance
         */
        public static create(properties?: Authentication.ISetEccKeyPairRequest): Authentication.SetEccKeyPairRequest;

        /**
         * Encodes the specified SetEccKeyPairRequest message. Does not implicitly {@link Authentication.SetEccKeyPairRequest.verify|verify} messages.
         * @param message SetEccKeyPairRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ISetEccKeyPairRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SetEccKeyPairRequest message, length delimited. Does not implicitly {@link Authentication.SetEccKeyPairRequest.verify|verify} messages.
         * @param message SetEccKeyPairRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ISetEccKeyPairRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SetEccKeyPairRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SetEccKeyPairRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.SetEccKeyPairRequest;

        /**
         * Decodes a SetEccKeyPairRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SetEccKeyPairRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.SetEccKeyPairRequest;

        /**
         * Verifies a SetEccKeyPairRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SetEccKeyPairRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SetEccKeyPairRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.SetEccKeyPairRequest;

        /**
         * Creates a plain object from a SetEccKeyPairRequest message. Also converts values to other types if specified.
         * @param message SetEccKeyPairRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.SetEccKeyPairRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SetEccKeyPairRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** The names and IDs in this class correspond to the Kinfo database entries and to the Region class in Keeperpap. */
    enum Region {
        UNKNOWN = 0,
        eu = 1,
        us = 2,
        usgov = 3,
        au = 4,
        jp = 5,
        ca = 6
    }

    /** ApplicationShareType enum. */
    enum ApplicationShareType {
        SHARE_TYPE_RECORD = 0,
        SHARE_TYPE_FOLDER = 1
    }

    /** Properties of an AddAppSharesRequest. */
    interface IAddAppSharesRequest {

        /** AddAppSharesRequest appRecordUid */
        appRecordUid?: (Uint8Array|null);

        /** AddAppSharesRequest shares */
        shares?: (Authentication.IAppShareAdd[]|null);
    }

    /** Represents an AddAppSharesRequest. */
    class AddAppSharesRequest implements IAddAppSharesRequest {

        /**
         * Constructs a new AddAppSharesRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IAddAppSharesRequest);

        /** AddAppSharesRequest appRecordUid. */
        public appRecordUid: Uint8Array;

        /** AddAppSharesRequest shares. */
        public shares: Authentication.IAppShareAdd[];

        /**
         * Creates a new AddAppSharesRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AddAppSharesRequest instance
         */
        public static create(properties?: Authentication.IAddAppSharesRequest): Authentication.AddAppSharesRequest;

        /**
         * Encodes the specified AddAppSharesRequest message. Does not implicitly {@link Authentication.AddAppSharesRequest.verify|verify} messages.
         * @param message AddAppSharesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IAddAppSharesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AddAppSharesRequest message, length delimited. Does not implicitly {@link Authentication.AddAppSharesRequest.verify|verify} messages.
         * @param message AddAppSharesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IAddAppSharesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AddAppSharesRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AddAppSharesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.AddAppSharesRequest;

        /**
         * Decodes an AddAppSharesRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AddAppSharesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.AddAppSharesRequest;

        /**
         * Verifies an AddAppSharesRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AddAppSharesRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AddAppSharesRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.AddAppSharesRequest;

        /**
         * Creates a plain object from an AddAppSharesRequest message. Also converts values to other types if specified.
         * @param message AddAppSharesRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.AddAppSharesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AddAppSharesRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RemoveAppSharesRequest. */
    interface IRemoveAppSharesRequest {

        /** RemoveAppSharesRequest appRecordUid */
        appRecordUid?: (Uint8Array|null);

        /** RemoveAppSharesRequest shares */
        shares?: (Uint8Array[]|null);
    }

    /** Represents a RemoveAppSharesRequest. */
    class RemoveAppSharesRequest implements IRemoveAppSharesRequest {

        /**
         * Constructs a new RemoveAppSharesRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IRemoveAppSharesRequest);

        /** RemoveAppSharesRequest appRecordUid. */
        public appRecordUid: Uint8Array;

        /** RemoveAppSharesRequest shares. */
        public shares: Uint8Array[];

        /**
         * Creates a new RemoveAppSharesRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RemoveAppSharesRequest instance
         */
        public static create(properties?: Authentication.IRemoveAppSharesRequest): Authentication.RemoveAppSharesRequest;

        /**
         * Encodes the specified RemoveAppSharesRequest message. Does not implicitly {@link Authentication.RemoveAppSharesRequest.verify|verify} messages.
         * @param message RemoveAppSharesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IRemoveAppSharesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RemoveAppSharesRequest message, length delimited. Does not implicitly {@link Authentication.RemoveAppSharesRequest.verify|verify} messages.
         * @param message RemoveAppSharesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IRemoveAppSharesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RemoveAppSharesRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RemoveAppSharesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.RemoveAppSharesRequest;

        /**
         * Decodes a RemoveAppSharesRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RemoveAppSharesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.RemoveAppSharesRequest;

        /**
         * Verifies a RemoveAppSharesRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RemoveAppSharesRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RemoveAppSharesRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.RemoveAppSharesRequest;

        /**
         * Creates a plain object from a RemoveAppSharesRequest message. Also converts values to other types if specified.
         * @param message RemoveAppSharesRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.RemoveAppSharesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RemoveAppSharesRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AppShareAdd. */
    interface IAppShareAdd {

        /** AppShareAdd secretUid */
        secretUid?: (Uint8Array|null);

        /** AppShareAdd shareType */
        shareType?: (Authentication.ApplicationShareType|null);

        /** AppShareAdd encryptedSecretKey */
        encryptedSecretKey?: (Uint8Array|null);

        /** AppShareAdd editable */
        editable?: (boolean|null);
    }

    /** Represents an AppShareAdd. */
    class AppShareAdd implements IAppShareAdd {

        /**
         * Constructs a new AppShareAdd.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IAppShareAdd);

        /** AppShareAdd secretUid. */
        public secretUid: Uint8Array;

        /** AppShareAdd shareType. */
        public shareType: Authentication.ApplicationShareType;

        /** AppShareAdd encryptedSecretKey. */
        public encryptedSecretKey: Uint8Array;

        /** AppShareAdd editable. */
        public editable: boolean;

        /**
         * Creates a new AppShareAdd instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AppShareAdd instance
         */
        public static create(properties?: Authentication.IAppShareAdd): Authentication.AppShareAdd;

        /**
         * Encodes the specified AppShareAdd message. Does not implicitly {@link Authentication.AppShareAdd.verify|verify} messages.
         * @param message AppShareAdd message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IAppShareAdd, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AppShareAdd message, length delimited. Does not implicitly {@link Authentication.AppShareAdd.verify|verify} messages.
         * @param message AppShareAdd message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IAppShareAdd, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AppShareAdd message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AppShareAdd
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.AppShareAdd;

        /**
         * Decodes an AppShareAdd message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AppShareAdd
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.AppShareAdd;

        /**
         * Verifies an AppShareAdd message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AppShareAdd message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AppShareAdd
         */
        public static fromObject(object: { [k: string]: any }): Authentication.AppShareAdd;

        /**
         * Creates a plain object from an AppShareAdd message. Also converts values to other types if specified.
         * @param message AppShareAdd
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.AppShareAdd, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AppShareAdd to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AppShare. */
    interface IAppShare {

        /** AppShare secretUid */
        secretUid?: (Uint8Array|null);

        /** AppShare shareType */
        shareType?: (Authentication.ApplicationShareType|null);

        /** AppShare editable */
        editable?: (boolean|null);

        /** AppShare createdOn */
        createdOn?: (number|Long|null);
    }

    /** Represents an AppShare. */
    class AppShare implements IAppShare {

        /**
         * Constructs a new AppShare.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IAppShare);

        /** AppShare secretUid. */
        public secretUid: Uint8Array;

        /** AppShare shareType. */
        public shareType: Authentication.ApplicationShareType;

        /** AppShare editable. */
        public editable: boolean;

        /** AppShare createdOn. */
        public createdOn: (number|Long);

        /**
         * Creates a new AppShare instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AppShare instance
         */
        public static create(properties?: Authentication.IAppShare): Authentication.AppShare;

        /**
         * Encodes the specified AppShare message. Does not implicitly {@link Authentication.AppShare.verify|verify} messages.
         * @param message AppShare message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IAppShare, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AppShare message, length delimited. Does not implicitly {@link Authentication.AppShare.verify|verify} messages.
         * @param message AppShare message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IAppShare, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AppShare message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AppShare
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.AppShare;

        /**
         * Decodes an AppShare message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AppShare
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.AppShare;

        /**
         * Verifies an AppShare message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AppShare message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AppShare
         */
        public static fromObject(object: { [k: string]: any }): Authentication.AppShare;

        /**
         * Creates a plain object from an AppShare message. Also converts values to other types if specified.
         * @param message AppShare
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.AppShare, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AppShare to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AddAppClientRequest. */
    interface IAddAppClientRequest {

        /** AddAppClientRequest appRecordUid */
        appRecordUid?: (Uint8Array|null);

        /** AddAppClientRequest encryptedAppKey */
        encryptedAppKey?: (Uint8Array|null);

        /** AddAppClientRequest clientId */
        clientId?: (Uint8Array|null);

        /** AddAppClientRequest lockIp */
        lockIp?: (boolean|null);

        /** AddAppClientRequest firstAccessExpireOn */
        firstAccessExpireOn?: (number|Long|null);

        /** AddAppClientRequest accessExpireOn */
        accessExpireOn?: (number|Long|null);

        /** AddAppClientRequest id */
        id?: (string|null);

        /** AddAppClientRequest appClientType */
        appClientType?: (Enterprise.AppClientType|null);
    }

    /** Represents an AddAppClientRequest. */
    class AddAppClientRequest implements IAddAppClientRequest {

        /**
         * Constructs a new AddAppClientRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IAddAppClientRequest);

        /** AddAppClientRequest appRecordUid. */
        public appRecordUid: Uint8Array;

        /** AddAppClientRequest encryptedAppKey. */
        public encryptedAppKey: Uint8Array;

        /** AddAppClientRequest clientId. */
        public clientId: Uint8Array;

        /** AddAppClientRequest lockIp. */
        public lockIp: boolean;

        /** AddAppClientRequest firstAccessExpireOn. */
        public firstAccessExpireOn: (number|Long);

        /** AddAppClientRequest accessExpireOn. */
        public accessExpireOn: (number|Long);

        /** AddAppClientRequest id. */
        public id: string;

        /** AddAppClientRequest appClientType. */
        public appClientType: Enterprise.AppClientType;

        /**
         * Creates a new AddAppClientRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AddAppClientRequest instance
         */
        public static create(properties?: Authentication.IAddAppClientRequest): Authentication.AddAppClientRequest;

        /**
         * Encodes the specified AddAppClientRequest message. Does not implicitly {@link Authentication.AddAppClientRequest.verify|verify} messages.
         * @param message AddAppClientRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IAddAppClientRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AddAppClientRequest message, length delimited. Does not implicitly {@link Authentication.AddAppClientRequest.verify|verify} messages.
         * @param message AddAppClientRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IAddAppClientRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AddAppClientRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AddAppClientRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.AddAppClientRequest;

        /**
         * Decodes an AddAppClientRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AddAppClientRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.AddAppClientRequest;

        /**
         * Verifies an AddAppClientRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AddAppClientRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AddAppClientRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.AddAppClientRequest;

        /**
         * Creates a plain object from an AddAppClientRequest message. Also converts values to other types if specified.
         * @param message AddAppClientRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.AddAppClientRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AddAppClientRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RemoveAppClientsRequest. */
    interface IRemoveAppClientsRequest {

        /** RemoveAppClientsRequest appRecordUid */
        appRecordUid?: (Uint8Array|null);

        /** RemoveAppClientsRequest clients */
        clients?: (Uint8Array[]|null);
    }

    /** Represents a RemoveAppClientsRequest. */
    class RemoveAppClientsRequest implements IRemoveAppClientsRequest {

        /**
         * Constructs a new RemoveAppClientsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IRemoveAppClientsRequest);

        /** RemoveAppClientsRequest appRecordUid. */
        public appRecordUid: Uint8Array;

        /** RemoveAppClientsRequest clients. */
        public clients: Uint8Array[];

        /**
         * Creates a new RemoveAppClientsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RemoveAppClientsRequest instance
         */
        public static create(properties?: Authentication.IRemoveAppClientsRequest): Authentication.RemoveAppClientsRequest;

        /**
         * Encodes the specified RemoveAppClientsRequest message. Does not implicitly {@link Authentication.RemoveAppClientsRequest.verify|verify} messages.
         * @param message RemoveAppClientsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IRemoveAppClientsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RemoveAppClientsRequest message, length delimited. Does not implicitly {@link Authentication.RemoveAppClientsRequest.verify|verify} messages.
         * @param message RemoveAppClientsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IRemoveAppClientsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RemoveAppClientsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RemoveAppClientsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.RemoveAppClientsRequest;

        /**
         * Decodes a RemoveAppClientsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RemoveAppClientsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.RemoveAppClientsRequest;

        /**
         * Verifies a RemoveAppClientsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RemoveAppClientsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RemoveAppClientsRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.RemoveAppClientsRequest;

        /**
         * Creates a plain object from a RemoveAppClientsRequest message. Also converts values to other types if specified.
         * @param message RemoveAppClientsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.RemoveAppClientsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RemoveAppClientsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AddExternalShareRequest. */
    interface IAddExternalShareRequest {

        /** AddExternalShareRequest recordUid */
        recordUid?: (Uint8Array|null);

        /** AddExternalShareRequest encryptedRecordKey */
        encryptedRecordKey?: (Uint8Array|null);

        /** AddExternalShareRequest clientId */
        clientId?: (Uint8Array|null);

        /** AddExternalShareRequest accessExpireOn */
        accessExpireOn?: (number|Long|null);

        /** AddExternalShareRequest id */
        id?: (string|null);
    }

    /** Represents an AddExternalShareRequest. */
    class AddExternalShareRequest implements IAddExternalShareRequest {

        /**
         * Constructs a new AddExternalShareRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IAddExternalShareRequest);

        /** AddExternalShareRequest recordUid. */
        public recordUid: Uint8Array;

        /** AddExternalShareRequest encryptedRecordKey. */
        public encryptedRecordKey: Uint8Array;

        /** AddExternalShareRequest clientId. */
        public clientId: Uint8Array;

        /** AddExternalShareRequest accessExpireOn. */
        public accessExpireOn: (number|Long);

        /** AddExternalShareRequest id. */
        public id: string;

        /**
         * Creates a new AddExternalShareRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AddExternalShareRequest instance
         */
        public static create(properties?: Authentication.IAddExternalShareRequest): Authentication.AddExternalShareRequest;

        /**
         * Encodes the specified AddExternalShareRequest message. Does not implicitly {@link Authentication.AddExternalShareRequest.verify|verify} messages.
         * @param message AddExternalShareRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IAddExternalShareRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AddExternalShareRequest message, length delimited. Does not implicitly {@link Authentication.AddExternalShareRequest.verify|verify} messages.
         * @param message AddExternalShareRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IAddExternalShareRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AddExternalShareRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AddExternalShareRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.AddExternalShareRequest;

        /**
         * Decodes an AddExternalShareRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AddExternalShareRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.AddExternalShareRequest;

        /**
         * Verifies an AddExternalShareRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AddExternalShareRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AddExternalShareRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.AddExternalShareRequest;

        /**
         * Creates a plain object from an AddExternalShareRequest message. Also converts values to other types if specified.
         * @param message AddExternalShareRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.AddExternalShareRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AddExternalShareRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AppClient. */
    interface IAppClient {

        /** AppClient id */
        id?: (string|null);

        /** AppClient clientId */
        clientId?: (Uint8Array|null);

        /** AppClient createdOn */
        createdOn?: (number|Long|null);

        /** AppClient firstAccess */
        firstAccess?: (number|Long|null);

        /** AppClient lastAccess */
        lastAccess?: (number|Long|null);

        /** AppClient publicKey */
        publicKey?: (Uint8Array|null);

        /** AppClient lockIp */
        lockIp?: (boolean|null);

        /** AppClient ipAddress */
        ipAddress?: (string|null);

        /** AppClient firstAccessExpireOn */
        firstAccessExpireOn?: (number|Long|null);

        /** AppClient accessExpireOn */
        accessExpireOn?: (number|Long|null);

        /** AppClient appClientType */
        appClientType?: (Enterprise.AppClientType|null);
    }

    /** Represents an AppClient. */
    class AppClient implements IAppClient {

        /**
         * Constructs a new AppClient.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IAppClient);

        /** AppClient id. */
        public id: string;

        /** AppClient clientId. */
        public clientId: Uint8Array;

        /** AppClient createdOn. */
        public createdOn: (number|Long);

        /** AppClient firstAccess. */
        public firstAccess: (number|Long);

        /** AppClient lastAccess. */
        public lastAccess: (number|Long);

        /** AppClient publicKey. */
        public publicKey: Uint8Array;

        /** AppClient lockIp. */
        public lockIp: boolean;

        /** AppClient ipAddress. */
        public ipAddress: string;

        /** AppClient firstAccessExpireOn. */
        public firstAccessExpireOn: (number|Long);

        /** AppClient accessExpireOn. */
        public accessExpireOn: (number|Long);

        /** AppClient appClientType. */
        public appClientType: Enterprise.AppClientType;

        /**
         * Creates a new AppClient instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AppClient instance
         */
        public static create(properties?: Authentication.IAppClient): Authentication.AppClient;

        /**
         * Encodes the specified AppClient message. Does not implicitly {@link Authentication.AppClient.verify|verify} messages.
         * @param message AppClient message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IAppClient, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AppClient message, length delimited. Does not implicitly {@link Authentication.AppClient.verify|verify} messages.
         * @param message AppClient message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IAppClient, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AppClient message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AppClient
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.AppClient;

        /**
         * Decodes an AppClient message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AppClient
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.AppClient;

        /**
         * Verifies an AppClient message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AppClient message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AppClient
         */
        public static fromObject(object: { [k: string]: any }): Authentication.AppClient;

        /**
         * Creates a plain object from an AppClient message. Also converts values to other types if specified.
         * @param message AppClient
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.AppClient, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AppClient to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetAppInfoRequest. */
    interface IGetAppInfoRequest {

        /** GetAppInfoRequest appRecordUid */
        appRecordUid?: (Uint8Array[]|null);
    }

    /** Represents a GetAppInfoRequest. */
    class GetAppInfoRequest implements IGetAppInfoRequest {

        /**
         * Constructs a new GetAppInfoRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IGetAppInfoRequest);

        /** GetAppInfoRequest appRecordUid. */
        public appRecordUid: Uint8Array[];

        /**
         * Creates a new GetAppInfoRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetAppInfoRequest instance
         */
        public static create(properties?: Authentication.IGetAppInfoRequest): Authentication.GetAppInfoRequest;

        /**
         * Encodes the specified GetAppInfoRequest message. Does not implicitly {@link Authentication.GetAppInfoRequest.verify|verify} messages.
         * @param message GetAppInfoRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IGetAppInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetAppInfoRequest message, length delimited. Does not implicitly {@link Authentication.GetAppInfoRequest.verify|verify} messages.
         * @param message GetAppInfoRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IGetAppInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetAppInfoRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetAppInfoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.GetAppInfoRequest;

        /**
         * Decodes a GetAppInfoRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetAppInfoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.GetAppInfoRequest;

        /**
         * Verifies a GetAppInfoRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetAppInfoRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetAppInfoRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.GetAppInfoRequest;

        /**
         * Creates a plain object from a GetAppInfoRequest message. Also converts values to other types if specified.
         * @param message GetAppInfoRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.GetAppInfoRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetAppInfoRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AppInfo. */
    interface IAppInfo {

        /** AppInfo appRecordUid */
        appRecordUid?: (Uint8Array|null);

        /** AppInfo shares */
        shares?: (Authentication.IAppShare[]|null);

        /** AppInfo clients */
        clients?: (Authentication.IAppClient[]|null);

        /** AppInfo isExternalShare */
        isExternalShare?: (boolean|null);
    }

    /** Represents an AppInfo. */
    class AppInfo implements IAppInfo {

        /**
         * Constructs a new AppInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IAppInfo);

        /** AppInfo appRecordUid. */
        public appRecordUid: Uint8Array;

        /** AppInfo shares. */
        public shares: Authentication.IAppShare[];

        /** AppInfo clients. */
        public clients: Authentication.IAppClient[];

        /** AppInfo isExternalShare. */
        public isExternalShare: boolean;

        /**
         * Creates a new AppInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AppInfo instance
         */
        public static create(properties?: Authentication.IAppInfo): Authentication.AppInfo;

        /**
         * Encodes the specified AppInfo message. Does not implicitly {@link Authentication.AppInfo.verify|verify} messages.
         * @param message AppInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IAppInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AppInfo message, length delimited. Does not implicitly {@link Authentication.AppInfo.verify|verify} messages.
         * @param message AppInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IAppInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AppInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AppInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.AppInfo;

        /**
         * Decodes an AppInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AppInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.AppInfo;

        /**
         * Verifies an AppInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AppInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AppInfo
         */
        public static fromObject(object: { [k: string]: any }): Authentication.AppInfo;

        /**
         * Creates a plain object from an AppInfo message. Also converts values to other types if specified.
         * @param message AppInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.AppInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AppInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetAppInfoResponse. */
    interface IGetAppInfoResponse {

        /** GetAppInfoResponse appInfo */
        appInfo?: (Authentication.IAppInfo[]|null);
    }

    /** Represents a GetAppInfoResponse. */
    class GetAppInfoResponse implements IGetAppInfoResponse {

        /**
         * Constructs a new GetAppInfoResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IGetAppInfoResponse);

        /** GetAppInfoResponse appInfo. */
        public appInfo: Authentication.IAppInfo[];

        /**
         * Creates a new GetAppInfoResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetAppInfoResponse instance
         */
        public static create(properties?: Authentication.IGetAppInfoResponse): Authentication.GetAppInfoResponse;

        /**
         * Encodes the specified GetAppInfoResponse message. Does not implicitly {@link Authentication.GetAppInfoResponse.verify|verify} messages.
         * @param message GetAppInfoResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IGetAppInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetAppInfoResponse message, length delimited. Does not implicitly {@link Authentication.GetAppInfoResponse.verify|verify} messages.
         * @param message GetAppInfoResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IGetAppInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetAppInfoResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetAppInfoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.GetAppInfoResponse;

        /**
         * Decodes a GetAppInfoResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetAppInfoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.GetAppInfoResponse;

        /**
         * Verifies a GetAppInfoResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetAppInfoResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetAppInfoResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.GetAppInfoResponse;

        /**
         * Creates a plain object from a GetAppInfoResponse message. Also converts values to other types if specified.
         * @param message GetAppInfoResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.GetAppInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetAppInfoResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ApplicationSummary. */
    interface IApplicationSummary {

        /** ApplicationSummary appRecordUid */
        appRecordUid?: (Uint8Array|null);

        /** ApplicationSummary lastAccess */
        lastAccess?: (number|Long|null);

        /** ApplicationSummary recordShares */
        recordShares?: (number|null);

        /** ApplicationSummary folderShares */
        folderShares?: (number|null);

        /** ApplicationSummary folderRecords */
        folderRecords?: (number|null);

        /** ApplicationSummary clientCount */
        clientCount?: (number|null);

        /** ApplicationSummary expiredClientCount */
        expiredClientCount?: (number|null);
    }

    /** Represents an ApplicationSummary. */
    class ApplicationSummary implements IApplicationSummary {

        /**
         * Constructs a new ApplicationSummary.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IApplicationSummary);

        /** ApplicationSummary appRecordUid. */
        public appRecordUid: Uint8Array;

        /** ApplicationSummary lastAccess. */
        public lastAccess: (number|Long);

        /** ApplicationSummary recordShares. */
        public recordShares: number;

        /** ApplicationSummary folderShares. */
        public folderShares: number;

        /** ApplicationSummary folderRecords. */
        public folderRecords: number;

        /** ApplicationSummary clientCount. */
        public clientCount: number;

        /** ApplicationSummary expiredClientCount. */
        public expiredClientCount: number;

        /**
         * Creates a new ApplicationSummary instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApplicationSummary instance
         */
        public static create(properties?: Authentication.IApplicationSummary): Authentication.ApplicationSummary;

        /**
         * Encodes the specified ApplicationSummary message. Does not implicitly {@link Authentication.ApplicationSummary.verify|verify} messages.
         * @param message ApplicationSummary message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IApplicationSummary, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ApplicationSummary message, length delimited. Does not implicitly {@link Authentication.ApplicationSummary.verify|verify} messages.
         * @param message ApplicationSummary message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IApplicationSummary, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ApplicationSummary message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApplicationSummary
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ApplicationSummary;

        /**
         * Decodes an ApplicationSummary message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApplicationSummary
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ApplicationSummary;

        /**
         * Verifies an ApplicationSummary message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ApplicationSummary message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ApplicationSummary
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ApplicationSummary;

        /**
         * Creates a plain object from an ApplicationSummary message. Also converts values to other types if specified.
         * @param message ApplicationSummary
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ApplicationSummary, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ApplicationSummary to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetApplicationsSummaryResponse. */
    interface IGetApplicationsSummaryResponse {

        /** GetApplicationsSummaryResponse applicationSummary */
        applicationSummary?: (Authentication.IApplicationSummary[]|null);
    }

    /** Represents a GetApplicationsSummaryResponse. */
    class GetApplicationsSummaryResponse implements IGetApplicationsSummaryResponse {

        /**
         * Constructs a new GetApplicationsSummaryResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IGetApplicationsSummaryResponse);

        /** GetApplicationsSummaryResponse applicationSummary. */
        public applicationSummary: Authentication.IApplicationSummary[];

        /**
         * Creates a new GetApplicationsSummaryResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetApplicationsSummaryResponse instance
         */
        public static create(properties?: Authentication.IGetApplicationsSummaryResponse): Authentication.GetApplicationsSummaryResponse;

        /**
         * Encodes the specified GetApplicationsSummaryResponse message. Does not implicitly {@link Authentication.GetApplicationsSummaryResponse.verify|verify} messages.
         * @param message GetApplicationsSummaryResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IGetApplicationsSummaryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetApplicationsSummaryResponse message, length delimited. Does not implicitly {@link Authentication.GetApplicationsSummaryResponse.verify|verify} messages.
         * @param message GetApplicationsSummaryResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IGetApplicationsSummaryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetApplicationsSummaryResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetApplicationsSummaryResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.GetApplicationsSummaryResponse;

        /**
         * Decodes a GetApplicationsSummaryResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetApplicationsSummaryResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.GetApplicationsSummaryResponse;

        /**
         * Verifies a GetApplicationsSummaryResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetApplicationsSummaryResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetApplicationsSummaryResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.GetApplicationsSummaryResponse;

        /**
         * Creates a plain object from a GetApplicationsSummaryResponse message. Also converts values to other types if specified.
         * @param message GetApplicationsSummaryResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.GetApplicationsSummaryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetApplicationsSummaryResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetVerificationTokenRequest. */
    interface IGetVerificationTokenRequest {

        /** GetVerificationTokenRequest username */
        username?: (string|null);
    }

    /** Represents a GetVerificationTokenRequest. */
    class GetVerificationTokenRequest implements IGetVerificationTokenRequest {

        /**
         * Constructs a new GetVerificationTokenRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IGetVerificationTokenRequest);

        /** GetVerificationTokenRequest username. */
        public username: string;

        /**
         * Creates a new GetVerificationTokenRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetVerificationTokenRequest instance
         */
        public static create(properties?: Authentication.IGetVerificationTokenRequest): Authentication.GetVerificationTokenRequest;

        /**
         * Encodes the specified GetVerificationTokenRequest message. Does not implicitly {@link Authentication.GetVerificationTokenRequest.verify|verify} messages.
         * @param message GetVerificationTokenRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IGetVerificationTokenRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetVerificationTokenRequest message, length delimited. Does not implicitly {@link Authentication.GetVerificationTokenRequest.verify|verify} messages.
         * @param message GetVerificationTokenRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IGetVerificationTokenRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetVerificationTokenRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetVerificationTokenRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.GetVerificationTokenRequest;

        /**
         * Decodes a GetVerificationTokenRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetVerificationTokenRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.GetVerificationTokenRequest;

        /**
         * Verifies a GetVerificationTokenRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetVerificationTokenRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetVerificationTokenRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.GetVerificationTokenRequest;

        /**
         * Creates a plain object from a GetVerificationTokenRequest message. Also converts values to other types if specified.
         * @param message GetVerificationTokenRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.GetVerificationTokenRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetVerificationTokenRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetVerificationTokenResponse. */
    interface IGetVerificationTokenResponse {

        /** GetVerificationTokenResponse encryptedVerificationToken */
        encryptedVerificationToken?: (Uint8Array|null);
    }

    /** Represents a GetVerificationTokenResponse. */
    class GetVerificationTokenResponse implements IGetVerificationTokenResponse {

        /**
         * Constructs a new GetVerificationTokenResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IGetVerificationTokenResponse);

        /** GetVerificationTokenResponse encryptedVerificationToken. */
        public encryptedVerificationToken: Uint8Array;

        /**
         * Creates a new GetVerificationTokenResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetVerificationTokenResponse instance
         */
        public static create(properties?: Authentication.IGetVerificationTokenResponse): Authentication.GetVerificationTokenResponse;

        /**
         * Encodes the specified GetVerificationTokenResponse message. Does not implicitly {@link Authentication.GetVerificationTokenResponse.verify|verify} messages.
         * @param message GetVerificationTokenResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IGetVerificationTokenResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetVerificationTokenResponse message, length delimited. Does not implicitly {@link Authentication.GetVerificationTokenResponse.verify|verify} messages.
         * @param message GetVerificationTokenResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IGetVerificationTokenResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetVerificationTokenResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetVerificationTokenResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.GetVerificationTokenResponse;

        /**
         * Decodes a GetVerificationTokenResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetVerificationTokenResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.GetVerificationTokenResponse;

        /**
         * Verifies a GetVerificationTokenResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetVerificationTokenResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetVerificationTokenResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.GetVerificationTokenResponse;

        /**
         * Creates a plain object from a GetVerificationTokenResponse message. Also converts values to other types if specified.
         * @param message GetVerificationTokenResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.GetVerificationTokenResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetVerificationTokenResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SendShareInviteRequest. */
    interface ISendShareInviteRequest {

        /** SendShareInviteRequest email */
        email?: (string|null);
    }

    /** Represents a SendShareInviteRequest. */
    class SendShareInviteRequest implements ISendShareInviteRequest {

        /**
         * Constructs a new SendShareInviteRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ISendShareInviteRequest);

        /** SendShareInviteRequest email. */
        public email: string;

        /**
         * Creates a new SendShareInviteRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SendShareInviteRequest instance
         */
        public static create(properties?: Authentication.ISendShareInviteRequest): Authentication.SendShareInviteRequest;

        /**
         * Encodes the specified SendShareInviteRequest message. Does not implicitly {@link Authentication.SendShareInviteRequest.verify|verify} messages.
         * @param message SendShareInviteRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ISendShareInviteRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SendShareInviteRequest message, length delimited. Does not implicitly {@link Authentication.SendShareInviteRequest.verify|verify} messages.
         * @param message SendShareInviteRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ISendShareInviteRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SendShareInviteRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SendShareInviteRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.SendShareInviteRequest;

        /**
         * Decodes a SendShareInviteRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SendShareInviteRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.SendShareInviteRequest;

        /**
         * Verifies a SendShareInviteRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SendShareInviteRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SendShareInviteRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.SendShareInviteRequest;

        /**
         * Creates a plain object from a SendShareInviteRequest message. Also converts values to other types if specified.
         * @param message SendShareInviteRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.SendShareInviteRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SendShareInviteRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** TimeLimitedAccessType enum. */
    enum TimeLimitedAccessType {
        INVALID_TIME_LIMITED_ACCESS_TYPE = 0,
        USER_ACCESS_TO_RECORD = 1,
        USER_OR_TEAM_ACCESS_TO_SHAREDFOLDER = 2,
        RECORD_ACCESS_TO_SHAREDFOLDER = 3
    }

    /** Properties of a TimeLimitedAccessRequest. */
    interface ITimeLimitedAccessRequest {

        /** TimeLimitedAccessRequest accountUid */
        accountUid?: (Uint8Array[]|null);

        /** TimeLimitedAccessRequest teamUid */
        teamUid?: (Uint8Array[]|null);

        /** TimeLimitedAccessRequest recordUid */
        recordUid?: (Uint8Array[]|null);

        /** TimeLimitedAccessRequest sharedObjectUid */
        sharedObjectUid?: (Uint8Array|null);

        /** TimeLimitedAccessRequest timeLimitedAccessType */
        timeLimitedAccessType?: (Authentication.TimeLimitedAccessType|null);

        /** TimeLimitedAccessRequest expiration */
        expiration?: (number|Long|null);
    }

    /** Represents a TimeLimitedAccessRequest. */
    class TimeLimitedAccessRequest implements ITimeLimitedAccessRequest {

        /**
         * Constructs a new TimeLimitedAccessRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ITimeLimitedAccessRequest);

        /** TimeLimitedAccessRequest accountUid. */
        public accountUid: Uint8Array[];

        /** TimeLimitedAccessRequest teamUid. */
        public teamUid: Uint8Array[];

        /** TimeLimitedAccessRequest recordUid. */
        public recordUid: Uint8Array[];

        /** TimeLimitedAccessRequest sharedObjectUid. */
        public sharedObjectUid: Uint8Array;

        /** TimeLimitedAccessRequest timeLimitedAccessType. */
        public timeLimitedAccessType: Authentication.TimeLimitedAccessType;

        /** TimeLimitedAccessRequest expiration. */
        public expiration: (number|Long);

        /**
         * Creates a new TimeLimitedAccessRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TimeLimitedAccessRequest instance
         */
        public static create(properties?: Authentication.ITimeLimitedAccessRequest): Authentication.TimeLimitedAccessRequest;

        /**
         * Encodes the specified TimeLimitedAccessRequest message. Does not implicitly {@link Authentication.TimeLimitedAccessRequest.verify|verify} messages.
         * @param message TimeLimitedAccessRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ITimeLimitedAccessRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TimeLimitedAccessRequest message, length delimited. Does not implicitly {@link Authentication.TimeLimitedAccessRequest.verify|verify} messages.
         * @param message TimeLimitedAccessRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ITimeLimitedAccessRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TimeLimitedAccessRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TimeLimitedAccessRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.TimeLimitedAccessRequest;

        /**
         * Decodes a TimeLimitedAccessRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TimeLimitedAccessRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.TimeLimitedAccessRequest;

        /**
         * Verifies a TimeLimitedAccessRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TimeLimitedAccessRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TimeLimitedAccessRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.TimeLimitedAccessRequest;

        /**
         * Creates a plain object from a TimeLimitedAccessRequest message. Also converts values to other types if specified.
         * @param message TimeLimitedAccessRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.TimeLimitedAccessRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TimeLimitedAccessRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TimeLimitedAccessStatus. */
    interface ITimeLimitedAccessStatus {

        /** TimeLimitedAccessStatus uid */
        uid?: (Uint8Array|null);

        /** TimeLimitedAccessStatus message */
        message?: (string|null);
    }

    /** Represents a TimeLimitedAccessStatus. */
    class TimeLimitedAccessStatus implements ITimeLimitedAccessStatus {

        /**
         * Constructs a new TimeLimitedAccessStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ITimeLimitedAccessStatus);

        /** TimeLimitedAccessStatus uid. */
        public uid: Uint8Array;

        /** TimeLimitedAccessStatus message. */
        public message: string;

        /**
         * Creates a new TimeLimitedAccessStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TimeLimitedAccessStatus instance
         */
        public static create(properties?: Authentication.ITimeLimitedAccessStatus): Authentication.TimeLimitedAccessStatus;

        /**
         * Encodes the specified TimeLimitedAccessStatus message. Does not implicitly {@link Authentication.TimeLimitedAccessStatus.verify|verify} messages.
         * @param message TimeLimitedAccessStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ITimeLimitedAccessStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TimeLimitedAccessStatus message, length delimited. Does not implicitly {@link Authentication.TimeLimitedAccessStatus.verify|verify} messages.
         * @param message TimeLimitedAccessStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ITimeLimitedAccessStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TimeLimitedAccessStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TimeLimitedAccessStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.TimeLimitedAccessStatus;

        /**
         * Decodes a TimeLimitedAccessStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TimeLimitedAccessStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.TimeLimitedAccessStatus;

        /**
         * Verifies a TimeLimitedAccessStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TimeLimitedAccessStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TimeLimitedAccessStatus
         */
        public static fromObject(object: { [k: string]: any }): Authentication.TimeLimitedAccessStatus;

        /**
         * Creates a plain object from a TimeLimitedAccessStatus message. Also converts values to other types if specified.
         * @param message TimeLimitedAccessStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.TimeLimitedAccessStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TimeLimitedAccessStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TimeLimitedAccessResponse. */
    interface ITimeLimitedAccessResponse {

        /** TimeLimitedAccessResponse revision */
        revision?: (number|Long|null);

        /** TimeLimitedAccessResponse userAccessStatus */
        userAccessStatus?: (Authentication.ITimeLimitedAccessStatus[]|null);

        /** TimeLimitedAccessResponse teamAccessStatus */
        teamAccessStatus?: (Authentication.ITimeLimitedAccessStatus[]|null);

        /** TimeLimitedAccessResponse recordAccessStatus */
        recordAccessStatus?: (Authentication.ITimeLimitedAccessStatus[]|null);
    }

    /** Represents a TimeLimitedAccessResponse. */
    class TimeLimitedAccessResponse implements ITimeLimitedAccessResponse {

        /**
         * Constructs a new TimeLimitedAccessResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.ITimeLimitedAccessResponse);

        /** TimeLimitedAccessResponse revision. */
        public revision: (number|Long);

        /** TimeLimitedAccessResponse userAccessStatus. */
        public userAccessStatus: Authentication.ITimeLimitedAccessStatus[];

        /** TimeLimitedAccessResponse teamAccessStatus. */
        public teamAccessStatus: Authentication.ITimeLimitedAccessStatus[];

        /** TimeLimitedAccessResponse recordAccessStatus. */
        public recordAccessStatus: Authentication.ITimeLimitedAccessStatus[];

        /**
         * Creates a new TimeLimitedAccessResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TimeLimitedAccessResponse instance
         */
        public static create(properties?: Authentication.ITimeLimitedAccessResponse): Authentication.TimeLimitedAccessResponse;

        /**
         * Encodes the specified TimeLimitedAccessResponse message. Does not implicitly {@link Authentication.TimeLimitedAccessResponse.verify|verify} messages.
         * @param message TimeLimitedAccessResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.ITimeLimitedAccessResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TimeLimitedAccessResponse message, length delimited. Does not implicitly {@link Authentication.TimeLimitedAccessResponse.verify|verify} messages.
         * @param message TimeLimitedAccessResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.ITimeLimitedAccessResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TimeLimitedAccessResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TimeLimitedAccessResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.TimeLimitedAccessResponse;

        /**
         * Decodes a TimeLimitedAccessResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TimeLimitedAccessResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.TimeLimitedAccessResponse;

        /**
         * Verifies a TimeLimitedAccessResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TimeLimitedAccessResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TimeLimitedAccessResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.TimeLimitedAccessResponse;

        /**
         * Creates a plain object from a TimeLimitedAccessResponse message. Also converts values to other types if specified.
         * @param message TimeLimitedAccessResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.TimeLimitedAccessResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TimeLimitedAccessResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RequestDownloadRequest. */
    interface IRequestDownloadRequest {

        /** RequestDownloadRequest fileNames */
        fileNames?: (string[]|null);
    }

    /** Represents a RequestDownloadRequest. */
    class RequestDownloadRequest implements IRequestDownloadRequest {

        /**
         * Constructs a new RequestDownloadRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IRequestDownloadRequest);

        /** RequestDownloadRequest fileNames. */
        public fileNames: string[];

        /**
         * Creates a new RequestDownloadRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RequestDownloadRequest instance
         */
        public static create(properties?: Authentication.IRequestDownloadRequest): Authentication.RequestDownloadRequest;

        /**
         * Encodes the specified RequestDownloadRequest message. Does not implicitly {@link Authentication.RequestDownloadRequest.verify|verify} messages.
         * @param message RequestDownloadRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IRequestDownloadRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RequestDownloadRequest message, length delimited. Does not implicitly {@link Authentication.RequestDownloadRequest.verify|verify} messages.
         * @param message RequestDownloadRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IRequestDownloadRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RequestDownloadRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RequestDownloadRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.RequestDownloadRequest;

        /**
         * Decodes a RequestDownloadRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RequestDownloadRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.RequestDownloadRequest;

        /**
         * Verifies a RequestDownloadRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RequestDownloadRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RequestDownloadRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.RequestDownloadRequest;

        /**
         * Creates a plain object from a RequestDownloadRequest message. Also converts values to other types if specified.
         * @param message RequestDownloadRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.RequestDownloadRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RequestDownloadRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RequestDownloadResponse. */
    interface IRequestDownloadResponse {

        /** RequestDownloadResponse result */
        result?: (string|null);

        /** RequestDownloadResponse message */
        message?: (string|null);

        /** RequestDownloadResponse downloads */
        downloads?: (Authentication.IDownload[]|null);
    }

    /** Represents a RequestDownloadResponse. */
    class RequestDownloadResponse implements IRequestDownloadResponse {

        /**
         * Constructs a new RequestDownloadResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IRequestDownloadResponse);

        /** RequestDownloadResponse result. */
        public result: string;

        /** RequestDownloadResponse message. */
        public message: string;

        /** RequestDownloadResponse downloads. */
        public downloads: Authentication.IDownload[];

        /**
         * Creates a new RequestDownloadResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RequestDownloadResponse instance
         */
        public static create(properties?: Authentication.IRequestDownloadResponse): Authentication.RequestDownloadResponse;

        /**
         * Encodes the specified RequestDownloadResponse message. Does not implicitly {@link Authentication.RequestDownloadResponse.verify|verify} messages.
         * @param message RequestDownloadResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IRequestDownloadResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RequestDownloadResponse message, length delimited. Does not implicitly {@link Authentication.RequestDownloadResponse.verify|verify} messages.
         * @param message RequestDownloadResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IRequestDownloadResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RequestDownloadResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RequestDownloadResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.RequestDownloadResponse;

        /**
         * Decodes a RequestDownloadResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RequestDownloadResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.RequestDownloadResponse;

        /**
         * Verifies a RequestDownloadResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RequestDownloadResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RequestDownloadResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.RequestDownloadResponse;

        /**
         * Creates a plain object from a RequestDownloadResponse message. Also converts values to other types if specified.
         * @param message RequestDownloadResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.RequestDownloadResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RequestDownloadResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Download. */
    interface IDownload {

        /** Download fileName */
        fileName?: (string|null);

        /** Download url */
        url?: (string|null);

        /** Download successStatusCode */
        successStatusCode?: (number|null);
    }

    /** Represents a Download. */
    class Download implements IDownload {

        /**
         * Constructs a new Download.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IDownload);

        /** Download fileName. */
        public fileName: string;

        /** Download url. */
        public url: string;

        /** Download successStatusCode. */
        public successStatusCode: number;

        /**
         * Creates a new Download instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Download instance
         */
        public static create(properties?: Authentication.IDownload): Authentication.Download;

        /**
         * Encodes the specified Download message. Does not implicitly {@link Authentication.Download.verify|verify} messages.
         * @param message Download message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IDownload, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Download message, length delimited. Does not implicitly {@link Authentication.Download.verify|verify} messages.
         * @param message Download message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IDownload, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Download message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Download
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.Download;

        /**
         * Decodes a Download message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Download
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.Download;

        /**
         * Verifies a Download message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Download message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Download
         */
        public static fromObject(object: { [k: string]: any }): Authentication.Download;

        /**
         * Creates a plain object from a Download message. Also converts values to other types if specified.
         * @param message Download
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.Download, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Download to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeleteUserRequest. */
    interface IDeleteUserRequest {

        /** DeleteUserRequest reason */
        reason?: (string|null);
    }

    /** Represents a DeleteUserRequest. */
    class DeleteUserRequest implements IDeleteUserRequest {

        /**
         * Constructs a new DeleteUserRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IDeleteUserRequest);

        /** DeleteUserRequest reason. */
        public reason: string;

        /**
         * Creates a new DeleteUserRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeleteUserRequest instance
         */
        public static create(properties?: Authentication.IDeleteUserRequest): Authentication.DeleteUserRequest;

        /**
         * Encodes the specified DeleteUserRequest message. Does not implicitly {@link Authentication.DeleteUserRequest.verify|verify} messages.
         * @param message DeleteUserRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IDeleteUserRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeleteUserRequest message, length delimited. Does not implicitly {@link Authentication.DeleteUserRequest.verify|verify} messages.
         * @param message DeleteUserRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IDeleteUserRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeleteUserRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeleteUserRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.DeleteUserRequest;

        /**
         * Decodes a DeleteUserRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeleteUserRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.DeleteUserRequest;

        /**
         * Verifies a DeleteUserRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeleteUserRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeleteUserRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.DeleteUserRequest;

        /**
         * Creates a plain object from a DeleteUserRequest message. Also converts values to other types if specified.
         * @param message DeleteUserRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.DeleteUserRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeleteUserRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChangeMasterPasswordRequest. */
    interface IChangeMasterPasswordRequest {

        /** ChangeMasterPasswordRequest authVerifier */
        authVerifier?: (Uint8Array|null);

        /** ChangeMasterPasswordRequest encryptionParams */
        encryptionParams?: (Uint8Array|null);

        /** ChangeMasterPasswordRequest fromServiceProvider */
        fromServiceProvider?: (boolean|null);

        /** ChangeMasterPasswordRequest iterationsChange */
        iterationsChange?: (boolean|null);
    }

    /** Represents a ChangeMasterPasswordRequest. */
    class ChangeMasterPasswordRequest implements IChangeMasterPasswordRequest {

        /**
         * Constructs a new ChangeMasterPasswordRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IChangeMasterPasswordRequest);

        /** ChangeMasterPasswordRequest authVerifier. */
        public authVerifier: Uint8Array;

        /** ChangeMasterPasswordRequest encryptionParams. */
        public encryptionParams: Uint8Array;

        /** ChangeMasterPasswordRequest fromServiceProvider. */
        public fromServiceProvider: boolean;

        /** ChangeMasterPasswordRequest iterationsChange. */
        public iterationsChange: boolean;

        /**
         * Creates a new ChangeMasterPasswordRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeMasterPasswordRequest instance
         */
        public static create(properties?: Authentication.IChangeMasterPasswordRequest): Authentication.ChangeMasterPasswordRequest;

        /**
         * Encodes the specified ChangeMasterPasswordRequest message. Does not implicitly {@link Authentication.ChangeMasterPasswordRequest.verify|verify} messages.
         * @param message ChangeMasterPasswordRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IChangeMasterPasswordRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChangeMasterPasswordRequest message, length delimited. Does not implicitly {@link Authentication.ChangeMasterPasswordRequest.verify|verify} messages.
         * @param message ChangeMasterPasswordRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IChangeMasterPasswordRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChangeMasterPasswordRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeMasterPasswordRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ChangeMasterPasswordRequest;

        /**
         * Decodes a ChangeMasterPasswordRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeMasterPasswordRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ChangeMasterPasswordRequest;

        /**
         * Verifies a ChangeMasterPasswordRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeMasterPasswordRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeMasterPasswordRequest
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ChangeMasterPasswordRequest;

        /**
         * Creates a plain object from a ChangeMasterPasswordRequest message. Also converts values to other types if specified.
         * @param message ChangeMasterPasswordRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ChangeMasterPasswordRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeMasterPasswordRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChangeMasterPasswordResponse. */
    interface IChangeMasterPasswordResponse {

        /** ChangeMasterPasswordResponse encryptedSessionToken */
        encryptedSessionToken?: (Uint8Array|null);
    }

    /** Represents a ChangeMasterPasswordResponse. */
    class ChangeMasterPasswordResponse implements IChangeMasterPasswordResponse {

        /**
         * Constructs a new ChangeMasterPasswordResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Authentication.IChangeMasterPasswordResponse);

        /** ChangeMasterPasswordResponse encryptedSessionToken. */
        public encryptedSessionToken: Uint8Array;

        /**
         * Creates a new ChangeMasterPasswordResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeMasterPasswordResponse instance
         */
        public static create(properties?: Authentication.IChangeMasterPasswordResponse): Authentication.ChangeMasterPasswordResponse;

        /**
         * Encodes the specified ChangeMasterPasswordResponse message. Does not implicitly {@link Authentication.ChangeMasterPasswordResponse.verify|verify} messages.
         * @param message ChangeMasterPasswordResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Authentication.IChangeMasterPasswordResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChangeMasterPasswordResponse message, length delimited. Does not implicitly {@link Authentication.ChangeMasterPasswordResponse.verify|verify} messages.
         * @param message ChangeMasterPasswordResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Authentication.IChangeMasterPasswordResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChangeMasterPasswordResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeMasterPasswordResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Authentication.ChangeMasterPasswordResponse;

        /**
         * Decodes a ChangeMasterPasswordResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeMasterPasswordResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Authentication.ChangeMasterPasswordResponse;

        /**
         * Verifies a ChangeMasterPasswordResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeMasterPasswordResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeMasterPasswordResponse
         */
        public static fromObject(object: { [k: string]: any }): Authentication.ChangeMasterPasswordResponse;

        /**
         * Creates a plain object from a ChangeMasterPasswordResponse message. Also converts values to other types if specified.
         * @param message ChangeMasterPasswordResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Authentication.ChangeMasterPasswordResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeMasterPasswordResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Enterprise. */
export namespace Enterprise {

    /** KeyType enum. */
    enum KeyType {
        RSA = 0,
        ECC = 1
    }

    /** Properties of an EnterpriseKeyPairRequest. */
    interface IEnterpriseKeyPairRequest {

        /** EnterpriseKeyPairRequest enterprisePublicKey */
        enterprisePublicKey?: (Uint8Array|null);

        /** EnterpriseKeyPairRequest encryptedEnterprisePrivateKey */
        encryptedEnterprisePrivateKey?: (Uint8Array|null);

        /** EnterpriseKeyPairRequest keyType */
        keyType?: (Enterprise.KeyType|null);
    }

    /** Represents an EnterpriseKeyPairRequest. */
    class EnterpriseKeyPairRequest implements IEnterpriseKeyPairRequest {

        /**
         * Constructs a new EnterpriseKeyPairRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEnterpriseKeyPairRequest);

        /** EnterpriseKeyPairRequest enterprisePublicKey. */
        public enterprisePublicKey: Uint8Array;

        /** EnterpriseKeyPairRequest encryptedEnterprisePrivateKey. */
        public encryptedEnterprisePrivateKey: Uint8Array;

        /** EnterpriseKeyPairRequest keyType. */
        public keyType: Enterprise.KeyType;

        /**
         * Creates a new EnterpriseKeyPairRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseKeyPairRequest instance
         */
        public static create(properties?: Enterprise.IEnterpriseKeyPairRequest): Enterprise.EnterpriseKeyPairRequest;

        /**
         * Encodes the specified EnterpriseKeyPairRequest message. Does not implicitly {@link Enterprise.EnterpriseKeyPairRequest.verify|verify} messages.
         * @param message EnterpriseKeyPairRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEnterpriseKeyPairRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseKeyPairRequest message, length delimited. Does not implicitly {@link Enterprise.EnterpriseKeyPairRequest.verify|verify} messages.
         * @param message EnterpriseKeyPairRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEnterpriseKeyPairRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseKeyPairRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseKeyPairRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EnterpriseKeyPairRequest;

        /**
         * Decodes an EnterpriseKeyPairRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseKeyPairRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EnterpriseKeyPairRequest;

        /**
         * Verifies an EnterpriseKeyPairRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseKeyPairRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseKeyPairRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EnterpriseKeyPairRequest;

        /**
         * Creates a plain object from an EnterpriseKeyPairRequest message. Also converts values to other types if specified.
         * @param message EnterpriseKeyPairRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EnterpriseKeyPairRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseKeyPairRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetTeamMemberRequest. */
    interface IGetTeamMemberRequest {

        /** GetTeamMemberRequest teamUid */
        teamUid?: (Uint8Array|null);
    }

    /** Represents a GetTeamMemberRequest. */
    class GetTeamMemberRequest implements IGetTeamMemberRequest {

        /**
         * Constructs a new GetTeamMemberRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IGetTeamMemberRequest);

        /** GetTeamMemberRequest teamUid. */
        public teamUid: Uint8Array;

        /**
         * Creates a new GetTeamMemberRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetTeamMemberRequest instance
         */
        public static create(properties?: Enterprise.IGetTeamMemberRequest): Enterprise.GetTeamMemberRequest;

        /**
         * Encodes the specified GetTeamMemberRequest message. Does not implicitly {@link Enterprise.GetTeamMemberRequest.verify|verify} messages.
         * @param message GetTeamMemberRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IGetTeamMemberRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetTeamMemberRequest message, length delimited. Does not implicitly {@link Enterprise.GetTeamMemberRequest.verify|verify} messages.
         * @param message GetTeamMemberRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IGetTeamMemberRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetTeamMemberRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetTeamMemberRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.GetTeamMemberRequest;

        /**
         * Decodes a GetTeamMemberRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetTeamMemberRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.GetTeamMemberRequest;

        /**
         * Verifies a GetTeamMemberRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetTeamMemberRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetTeamMemberRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.GetTeamMemberRequest;

        /**
         * Creates a plain object from a GetTeamMemberRequest message. Also converts values to other types if specified.
         * @param message GetTeamMemberRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.GetTeamMemberRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetTeamMemberRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseUser. */
    interface IEnterpriseUser {

        /** EnterpriseUser enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** EnterpriseUser email */
        email?: (string|null);

        /** EnterpriseUser enterpriseUsername */
        enterpriseUsername?: (string|null);

        /** EnterpriseUser isShareAdmin */
        isShareAdmin?: (boolean|null);
    }

    /** Represents an EnterpriseUser. */
    class EnterpriseUser implements IEnterpriseUser {

        /**
         * Constructs a new EnterpriseUser.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEnterpriseUser);

        /** EnterpriseUser enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** EnterpriseUser email. */
        public email: string;

        /** EnterpriseUser enterpriseUsername. */
        public enterpriseUsername: string;

        /** EnterpriseUser isShareAdmin. */
        public isShareAdmin: boolean;

        /**
         * Creates a new EnterpriseUser instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseUser instance
         */
        public static create(properties?: Enterprise.IEnterpriseUser): Enterprise.EnterpriseUser;

        /**
         * Encodes the specified EnterpriseUser message. Does not implicitly {@link Enterprise.EnterpriseUser.verify|verify} messages.
         * @param message EnterpriseUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEnterpriseUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseUser message, length delimited. Does not implicitly {@link Enterprise.EnterpriseUser.verify|verify} messages.
         * @param message EnterpriseUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEnterpriseUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseUser message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EnterpriseUser;

        /**
         * Decodes an EnterpriseUser message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EnterpriseUser;

        /**
         * Verifies an EnterpriseUser message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseUser message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseUser
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EnterpriseUser;

        /**
         * Creates a plain object from an EnterpriseUser message. Also converts values to other types if specified.
         * @param message EnterpriseUser
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EnterpriseUser, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseUser to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetTeamMemberResponse. */
    interface IGetTeamMemberResponse {

        /** GetTeamMemberResponse enterpriseUser */
        enterpriseUser?: (Enterprise.IEnterpriseUser[]|null);
    }

    /** Represents a GetTeamMemberResponse. */
    class GetTeamMemberResponse implements IGetTeamMemberResponse {

        /**
         * Constructs a new GetTeamMemberResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IGetTeamMemberResponse);

        /** GetTeamMemberResponse enterpriseUser. */
        public enterpriseUser: Enterprise.IEnterpriseUser[];

        /**
         * Creates a new GetTeamMemberResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetTeamMemberResponse instance
         */
        public static create(properties?: Enterprise.IGetTeamMemberResponse): Enterprise.GetTeamMemberResponse;

        /**
         * Encodes the specified GetTeamMemberResponse message. Does not implicitly {@link Enterprise.GetTeamMemberResponse.verify|verify} messages.
         * @param message GetTeamMemberResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IGetTeamMemberResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetTeamMemberResponse message, length delimited. Does not implicitly {@link Enterprise.GetTeamMemberResponse.verify|verify} messages.
         * @param message GetTeamMemberResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IGetTeamMemberResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetTeamMemberResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetTeamMemberResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.GetTeamMemberResponse;

        /**
         * Decodes a GetTeamMemberResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetTeamMemberResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.GetTeamMemberResponse;

        /**
         * Verifies a GetTeamMemberResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetTeamMemberResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetTeamMemberResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.GetTeamMemberResponse;

        /**
         * Creates a plain object from a GetTeamMemberResponse message. Also converts values to other types if specified.
         * @param message GetTeamMemberResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.GetTeamMemberResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetTeamMemberResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseUserIds. */
    interface IEnterpriseUserIds {

        /** EnterpriseUserIds enterpriseUserId */
        enterpriseUserId?: ((number|Long)[]|null);
    }

    /** Represents an EnterpriseUserIds. */
    class EnterpriseUserIds implements IEnterpriseUserIds {

        /**
         * Constructs a new EnterpriseUserIds.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEnterpriseUserIds);

        /** EnterpriseUserIds enterpriseUserId. */
        public enterpriseUserId: (number|Long)[];

        /**
         * Creates a new EnterpriseUserIds instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseUserIds instance
         */
        public static create(properties?: Enterprise.IEnterpriseUserIds): Enterprise.EnterpriseUserIds;

        /**
         * Encodes the specified EnterpriseUserIds message. Does not implicitly {@link Enterprise.EnterpriseUserIds.verify|verify} messages.
         * @param message EnterpriseUserIds message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEnterpriseUserIds, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseUserIds message, length delimited. Does not implicitly {@link Enterprise.EnterpriseUserIds.verify|verify} messages.
         * @param message EnterpriseUserIds message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEnterpriseUserIds, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseUserIds message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseUserIds
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EnterpriseUserIds;

        /**
         * Decodes an EnterpriseUserIds message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseUserIds
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EnterpriseUserIds;

        /**
         * Verifies an EnterpriseUserIds message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseUserIds message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseUserIds
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EnterpriseUserIds;

        /**
         * Creates a plain object from an EnterpriseUserIds message. Also converts values to other types if specified.
         * @param message EnterpriseUserIds
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EnterpriseUserIds, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseUserIds to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterprisePersonalAccount. */
    interface IEnterprisePersonalAccount {

        /** EnterprisePersonalAccount email */
        email?: (string|null);

        /** EnterprisePersonalAccount OBSOLETE_FIELD */
        OBSOLETE_FIELD?: (Uint8Array|null);
    }

    /** Represents an EnterprisePersonalAccount. */
    class EnterprisePersonalAccount implements IEnterprisePersonalAccount {

        /**
         * Constructs a new EnterprisePersonalAccount.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEnterprisePersonalAccount);

        /** EnterprisePersonalAccount email. */
        public email: string;

        /** EnterprisePersonalAccount OBSOLETE_FIELD. */
        public OBSOLETE_FIELD: Uint8Array;

        /**
         * Creates a new EnterprisePersonalAccount instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterprisePersonalAccount instance
         */
        public static create(properties?: Enterprise.IEnterprisePersonalAccount): Enterprise.EnterprisePersonalAccount;

        /**
         * Encodes the specified EnterprisePersonalAccount message. Does not implicitly {@link Enterprise.EnterprisePersonalAccount.verify|verify} messages.
         * @param message EnterprisePersonalAccount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEnterprisePersonalAccount, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterprisePersonalAccount message, length delimited. Does not implicitly {@link Enterprise.EnterprisePersonalAccount.verify|verify} messages.
         * @param message EnterprisePersonalAccount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEnterprisePersonalAccount, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterprisePersonalAccount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterprisePersonalAccount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EnterprisePersonalAccount;

        /**
         * Decodes an EnterprisePersonalAccount message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterprisePersonalAccount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EnterprisePersonalAccount;

        /**
         * Verifies an EnterprisePersonalAccount message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterprisePersonalAccount message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterprisePersonalAccount
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EnterprisePersonalAccount;

        /**
         * Creates a plain object from an EnterprisePersonalAccount message. Also converts values to other types if specified.
         * @param message EnterprisePersonalAccount
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EnterprisePersonalAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterprisePersonalAccount to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EncryptedTeamKeyRequest. */
    interface IEncryptedTeamKeyRequest {

        /** EncryptedTeamKeyRequest teamUid */
        teamUid?: (Uint8Array|null);

        /** EncryptedTeamKeyRequest encryptedTeamKey */
        encryptedTeamKey?: (Uint8Array|null);

        /** EncryptedTeamKeyRequest force */
        force?: (boolean|null);
    }

    /** Represents an EncryptedTeamKeyRequest. */
    class EncryptedTeamKeyRequest implements IEncryptedTeamKeyRequest {

        /**
         * Constructs a new EncryptedTeamKeyRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEncryptedTeamKeyRequest);

        /** EncryptedTeamKeyRequest teamUid. */
        public teamUid: Uint8Array;

        /** EncryptedTeamKeyRequest encryptedTeamKey. */
        public encryptedTeamKey: Uint8Array;

        /** EncryptedTeamKeyRequest force. */
        public force: boolean;

        /**
         * Creates a new EncryptedTeamKeyRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EncryptedTeamKeyRequest instance
         */
        public static create(properties?: Enterprise.IEncryptedTeamKeyRequest): Enterprise.EncryptedTeamKeyRequest;

        /**
         * Encodes the specified EncryptedTeamKeyRequest message. Does not implicitly {@link Enterprise.EncryptedTeamKeyRequest.verify|verify} messages.
         * @param message EncryptedTeamKeyRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEncryptedTeamKeyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EncryptedTeamKeyRequest message, length delimited. Does not implicitly {@link Enterprise.EncryptedTeamKeyRequest.verify|verify} messages.
         * @param message EncryptedTeamKeyRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEncryptedTeamKeyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EncryptedTeamKeyRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EncryptedTeamKeyRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EncryptedTeamKeyRequest;

        /**
         * Decodes an EncryptedTeamKeyRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EncryptedTeamKeyRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EncryptedTeamKeyRequest;

        /**
         * Verifies an EncryptedTeamKeyRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EncryptedTeamKeyRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EncryptedTeamKeyRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EncryptedTeamKeyRequest;

        /**
         * Creates a plain object from an EncryptedTeamKeyRequest message. Also converts values to other types if specified.
         * @param message EncryptedTeamKeyRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EncryptedTeamKeyRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EncryptedTeamKeyRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReEncryptedData. */
    interface IReEncryptedData {

        /** ReEncryptedData id */
        id?: (number|Long|null);

        /** ReEncryptedData data */
        data?: (string|null);
    }

    /** Represents a ReEncryptedData. */
    class ReEncryptedData implements IReEncryptedData {

        /**
         * Constructs a new ReEncryptedData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IReEncryptedData);

        /** ReEncryptedData id. */
        public id: (number|Long);

        /** ReEncryptedData data. */
        public data: string;

        /**
         * Creates a new ReEncryptedData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReEncryptedData instance
         */
        public static create(properties?: Enterprise.IReEncryptedData): Enterprise.ReEncryptedData;

        /**
         * Encodes the specified ReEncryptedData message. Does not implicitly {@link Enterprise.ReEncryptedData.verify|verify} messages.
         * @param message ReEncryptedData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IReEncryptedData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReEncryptedData message, length delimited. Does not implicitly {@link Enterprise.ReEncryptedData.verify|verify} messages.
         * @param message ReEncryptedData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IReEncryptedData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReEncryptedData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReEncryptedData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ReEncryptedData;

        /**
         * Decodes a ReEncryptedData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReEncryptedData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ReEncryptedData;

        /**
         * Verifies a ReEncryptedData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReEncryptedData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReEncryptedData
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ReEncryptedData;

        /**
         * Creates a plain object from a ReEncryptedData message. Also converts values to other types if specified.
         * @param message ReEncryptedData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ReEncryptedData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReEncryptedData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReEncryptedRoleKey. */
    interface IReEncryptedRoleKey {

        /** ReEncryptedRoleKey roleId */
        roleId?: (number|Long|null);

        /** ReEncryptedRoleKey encryptedRoleKey */
        encryptedRoleKey?: (Uint8Array|null);
    }

    /** Represents a ReEncryptedRoleKey. */
    class ReEncryptedRoleKey implements IReEncryptedRoleKey {

        /**
         * Constructs a new ReEncryptedRoleKey.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IReEncryptedRoleKey);

        /** ReEncryptedRoleKey roleId. */
        public roleId: (number|Long);

        /** ReEncryptedRoleKey encryptedRoleKey. */
        public encryptedRoleKey: Uint8Array;

        /**
         * Creates a new ReEncryptedRoleKey instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReEncryptedRoleKey instance
         */
        public static create(properties?: Enterprise.IReEncryptedRoleKey): Enterprise.ReEncryptedRoleKey;

        /**
         * Encodes the specified ReEncryptedRoleKey message. Does not implicitly {@link Enterprise.ReEncryptedRoleKey.verify|verify} messages.
         * @param message ReEncryptedRoleKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IReEncryptedRoleKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReEncryptedRoleKey message, length delimited. Does not implicitly {@link Enterprise.ReEncryptedRoleKey.verify|verify} messages.
         * @param message ReEncryptedRoleKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IReEncryptedRoleKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReEncryptedRoleKey message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReEncryptedRoleKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ReEncryptedRoleKey;

        /**
         * Decodes a ReEncryptedRoleKey message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReEncryptedRoleKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ReEncryptedRoleKey;

        /**
         * Verifies a ReEncryptedRoleKey message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReEncryptedRoleKey message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReEncryptedRoleKey
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ReEncryptedRoleKey;

        /**
         * Creates a plain object from a ReEncryptedRoleKey message. Also converts values to other types if specified.
         * @param message ReEncryptedRoleKey
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ReEncryptedRoleKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReEncryptedRoleKey to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NodeToManagedCompanyRequest. */
    interface INodeToManagedCompanyRequest {

        /** NodeToManagedCompanyRequest companyId */
        companyId?: (number|null);

        /** NodeToManagedCompanyRequest nodes */
        nodes?: (Enterprise.IReEncryptedData[]|null);

        /** NodeToManagedCompanyRequest roles */
        roles?: (Enterprise.IReEncryptedData[]|null);

        /** NodeToManagedCompanyRequest users */
        users?: (Enterprise.IReEncryptedData[]|null);

        /** NodeToManagedCompanyRequest roleKeys */
        roleKeys?: (Enterprise.IReEncryptedRoleKey[]|null);

        /** NodeToManagedCompanyRequest teamKeys */
        teamKeys?: (Enterprise.IEncryptedTeamKeyRequest[]|null);
    }

    /** Represents a NodeToManagedCompanyRequest. */
    class NodeToManagedCompanyRequest implements INodeToManagedCompanyRequest {

        /**
         * Constructs a new NodeToManagedCompanyRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.INodeToManagedCompanyRequest);

        /** NodeToManagedCompanyRequest companyId. */
        public companyId: number;

        /** NodeToManagedCompanyRequest nodes. */
        public nodes: Enterprise.IReEncryptedData[];

        /** NodeToManagedCompanyRequest roles. */
        public roles: Enterprise.IReEncryptedData[];

        /** NodeToManagedCompanyRequest users. */
        public users: Enterprise.IReEncryptedData[];

        /** NodeToManagedCompanyRequest roleKeys. */
        public roleKeys: Enterprise.IReEncryptedRoleKey[];

        /** NodeToManagedCompanyRequest teamKeys. */
        public teamKeys: Enterprise.IEncryptedTeamKeyRequest[];

        /**
         * Creates a new NodeToManagedCompanyRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NodeToManagedCompanyRequest instance
         */
        public static create(properties?: Enterprise.INodeToManagedCompanyRequest): Enterprise.NodeToManagedCompanyRequest;

        /**
         * Encodes the specified NodeToManagedCompanyRequest message. Does not implicitly {@link Enterprise.NodeToManagedCompanyRequest.verify|verify} messages.
         * @param message NodeToManagedCompanyRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.INodeToManagedCompanyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NodeToManagedCompanyRequest message, length delimited. Does not implicitly {@link Enterprise.NodeToManagedCompanyRequest.verify|verify} messages.
         * @param message NodeToManagedCompanyRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.INodeToManagedCompanyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NodeToManagedCompanyRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NodeToManagedCompanyRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.NodeToManagedCompanyRequest;

        /**
         * Decodes a NodeToManagedCompanyRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NodeToManagedCompanyRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.NodeToManagedCompanyRequest;

        /**
         * Verifies a NodeToManagedCompanyRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NodeToManagedCompanyRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NodeToManagedCompanyRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.NodeToManagedCompanyRequest;

        /**
         * Creates a plain object from a NodeToManagedCompanyRequest message. Also converts values to other types if specified.
         * @param message NodeToManagedCompanyRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.NodeToManagedCompanyRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NodeToManagedCompanyRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RoleTeam. */
    interface IRoleTeam {

        /** RoleTeam roleId */
        roleId?: (number|Long|null);

        /** RoleTeam teamUid */
        teamUid?: (Uint8Array|null);
    }

    /** Represents a RoleTeam. */
    class RoleTeam implements IRoleTeam {

        /**
         * Constructs a new RoleTeam.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IRoleTeam);

        /** RoleTeam roleId. */
        public roleId: (number|Long);

        /** RoleTeam teamUid. */
        public teamUid: Uint8Array;

        /**
         * Creates a new RoleTeam instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RoleTeam instance
         */
        public static create(properties?: Enterprise.IRoleTeam): Enterprise.RoleTeam;

        /**
         * Encodes the specified RoleTeam message. Does not implicitly {@link Enterprise.RoleTeam.verify|verify} messages.
         * @param message RoleTeam message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IRoleTeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RoleTeam message, length delimited. Does not implicitly {@link Enterprise.RoleTeam.verify|verify} messages.
         * @param message RoleTeam message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IRoleTeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RoleTeam message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RoleTeam
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.RoleTeam;

        /**
         * Decodes a RoleTeam message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RoleTeam
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.RoleTeam;

        /**
         * Verifies a RoleTeam message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RoleTeam message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RoleTeam
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.RoleTeam;

        /**
         * Creates a plain object from a RoleTeam message. Also converts values to other types if specified.
         * @param message RoleTeam
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.RoleTeam, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RoleTeam to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RoleTeams. */
    interface IRoleTeams {

        /** RoleTeams roleTeam */
        roleTeam?: (Enterprise.IRoleTeam[]|null);
    }

    /** Represents a RoleTeams. */
    class RoleTeams implements IRoleTeams {

        /**
         * Constructs a new RoleTeams.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IRoleTeams);

        /** RoleTeams roleTeam. */
        public roleTeam: Enterprise.IRoleTeam[];

        /**
         * Creates a new RoleTeams instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RoleTeams instance
         */
        public static create(properties?: Enterprise.IRoleTeams): Enterprise.RoleTeams;

        /**
         * Encodes the specified RoleTeams message. Does not implicitly {@link Enterprise.RoleTeams.verify|verify} messages.
         * @param message RoleTeams message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IRoleTeams, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RoleTeams message, length delimited. Does not implicitly {@link Enterprise.RoleTeams.verify|verify} messages.
         * @param message RoleTeams message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IRoleTeams, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RoleTeams message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RoleTeams
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.RoleTeams;

        /**
         * Decodes a RoleTeams message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RoleTeams
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.RoleTeams;

        /**
         * Verifies a RoleTeams message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RoleTeams message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RoleTeams
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.RoleTeams;

        /**
         * Creates a plain object from a RoleTeams message. Also converts values to other types if specified.
         * @param message RoleTeams
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.RoleTeams, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RoleTeams to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** EnterpriseType enum. */
    enum EnterpriseType {
        ENTERPRISE_STANDARD = 0,
        ENTERPRISE_MSP = 1
    }

    /** Properties of an EnterpriseRegistration. */
    interface IEnterpriseRegistration {

        /** EnterpriseRegistration encryptedTreeKey */
        encryptedTreeKey?: (Uint8Array|null);

        /** EnterpriseRegistration enterpriseName */
        enterpriseName?: (string|null);

        /** EnterpriseRegistration rootNodeData */
        rootNodeData?: (Uint8Array|null);

        /** EnterpriseRegistration adminUserData */
        adminUserData?: (Uint8Array|null);

        /** EnterpriseRegistration adminName */
        adminName?: (string|null);

        /** EnterpriseRegistration roleData */
        roleData?: (Uint8Array|null);

        /** EnterpriseRegistration rsaKeyPair */
        rsaKeyPair?: (Enterprise.IEnterpriseKeyPairRequest|null);

        /** EnterpriseRegistration numberSeats */
        numberSeats?: (number|null);

        /** EnterpriseRegistration enterpriseType */
        enterpriseType?: (Enterprise.EnterpriseType|null);

        /** EnterpriseRegistration rolePublicKey */
        rolePublicKey?: (Uint8Array|null);

        /** EnterpriseRegistration rolePrivateKeyEncryptedWithRoleKey */
        rolePrivateKeyEncryptedWithRoleKey?: (Uint8Array|null);

        /** EnterpriseRegistration roleKeyEncryptedWithTreeKey */
        roleKeyEncryptedWithTreeKey?: (Uint8Array|null);

        /** EnterpriseRegistration eccKeyPair */
        eccKeyPair?: (Enterprise.IEnterpriseKeyPairRequest|null);
    }

    /** Represents an EnterpriseRegistration. */
    class EnterpriseRegistration implements IEnterpriseRegistration {

        /**
         * Constructs a new EnterpriseRegistration.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEnterpriseRegistration);

        /** EnterpriseRegistration encryptedTreeKey. */
        public encryptedTreeKey: Uint8Array;

        /** EnterpriseRegistration enterpriseName. */
        public enterpriseName: string;

        /** EnterpriseRegistration rootNodeData. */
        public rootNodeData: Uint8Array;

        /** EnterpriseRegistration adminUserData. */
        public adminUserData: Uint8Array;

        /** EnterpriseRegistration adminName. */
        public adminName: string;

        /** EnterpriseRegistration roleData. */
        public roleData: Uint8Array;

        /** EnterpriseRegistration rsaKeyPair. */
        public rsaKeyPair?: (Enterprise.IEnterpriseKeyPairRequest|null);

        /** EnterpriseRegistration numberSeats. */
        public numberSeats: number;

        /** EnterpriseRegistration enterpriseType. */
        public enterpriseType: Enterprise.EnterpriseType;

        /** EnterpriseRegistration rolePublicKey. */
        public rolePublicKey: Uint8Array;

        /** EnterpriseRegistration rolePrivateKeyEncryptedWithRoleKey. */
        public rolePrivateKeyEncryptedWithRoleKey: Uint8Array;

        /** EnterpriseRegistration roleKeyEncryptedWithTreeKey. */
        public roleKeyEncryptedWithTreeKey: Uint8Array;

        /** EnterpriseRegistration eccKeyPair. */
        public eccKeyPair?: (Enterprise.IEnterpriseKeyPairRequest|null);

        /**
         * Creates a new EnterpriseRegistration instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseRegistration instance
         */
        public static create(properties?: Enterprise.IEnterpriseRegistration): Enterprise.EnterpriseRegistration;

        /**
         * Encodes the specified EnterpriseRegistration message. Does not implicitly {@link Enterprise.EnterpriseRegistration.verify|verify} messages.
         * @param message EnterpriseRegistration message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEnterpriseRegistration, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseRegistration message, length delimited. Does not implicitly {@link Enterprise.EnterpriseRegistration.verify|verify} messages.
         * @param message EnterpriseRegistration message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEnterpriseRegistration, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseRegistration message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseRegistration
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EnterpriseRegistration;

        /**
         * Decodes an EnterpriseRegistration message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseRegistration
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EnterpriseRegistration;

        /**
         * Verifies an EnterpriseRegistration message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseRegistration message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseRegistration
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EnterpriseRegistration;

        /**
         * Creates a plain object from an EnterpriseRegistration message. Also converts values to other types if specified.
         * @param message EnterpriseRegistration
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EnterpriseRegistration, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseRegistration to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DomainPasswordRulesRequest. */
    interface IDomainPasswordRulesRequest {

        /** DomainPasswordRulesRequest username */
        username?: (string|null);
    }

    /** Represents a DomainPasswordRulesRequest. */
    class DomainPasswordRulesRequest implements IDomainPasswordRulesRequest {

        /**
         * Constructs a new DomainPasswordRulesRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IDomainPasswordRulesRequest);

        /** DomainPasswordRulesRequest username. */
        public username: string;

        /**
         * Creates a new DomainPasswordRulesRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DomainPasswordRulesRequest instance
         */
        public static create(properties?: Enterprise.IDomainPasswordRulesRequest): Enterprise.DomainPasswordRulesRequest;

        /**
         * Encodes the specified DomainPasswordRulesRequest message. Does not implicitly {@link Enterprise.DomainPasswordRulesRequest.verify|verify} messages.
         * @param message DomainPasswordRulesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IDomainPasswordRulesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DomainPasswordRulesRequest message, length delimited. Does not implicitly {@link Enterprise.DomainPasswordRulesRequest.verify|verify} messages.
         * @param message DomainPasswordRulesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IDomainPasswordRulesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DomainPasswordRulesRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DomainPasswordRulesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.DomainPasswordRulesRequest;

        /**
         * Decodes a DomainPasswordRulesRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DomainPasswordRulesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.DomainPasswordRulesRequest;

        /**
         * Verifies a DomainPasswordRulesRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DomainPasswordRulesRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DomainPasswordRulesRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.DomainPasswordRulesRequest;

        /**
         * Creates a plain object from a DomainPasswordRulesRequest message. Also converts values to other types if specified.
         * @param message DomainPasswordRulesRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.DomainPasswordRulesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DomainPasswordRulesRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DomainPasswordRulesFields. */
    interface IDomainPasswordRulesFields {

        /** DomainPasswordRulesFields type */
        type?: (string|null);

        /** DomainPasswordRulesFields minimum */
        minimum?: (number|null);

        /** DomainPasswordRulesFields maximum */
        maximum?: (number|null);

        /** DomainPasswordRulesFields allowed */
        allowed?: (boolean|null);
    }

    /** Represents a DomainPasswordRulesFields. */
    class DomainPasswordRulesFields implements IDomainPasswordRulesFields {

        /**
         * Constructs a new DomainPasswordRulesFields.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IDomainPasswordRulesFields);

        /** DomainPasswordRulesFields type. */
        public type: string;

        /** DomainPasswordRulesFields minimum. */
        public minimum: number;

        /** DomainPasswordRulesFields maximum. */
        public maximum: number;

        /** DomainPasswordRulesFields allowed. */
        public allowed: boolean;

        /**
         * Creates a new DomainPasswordRulesFields instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DomainPasswordRulesFields instance
         */
        public static create(properties?: Enterprise.IDomainPasswordRulesFields): Enterprise.DomainPasswordRulesFields;

        /**
         * Encodes the specified DomainPasswordRulesFields message. Does not implicitly {@link Enterprise.DomainPasswordRulesFields.verify|verify} messages.
         * @param message DomainPasswordRulesFields message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IDomainPasswordRulesFields, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DomainPasswordRulesFields message, length delimited. Does not implicitly {@link Enterprise.DomainPasswordRulesFields.verify|verify} messages.
         * @param message DomainPasswordRulesFields message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IDomainPasswordRulesFields, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DomainPasswordRulesFields message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DomainPasswordRulesFields
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.DomainPasswordRulesFields;

        /**
         * Decodes a DomainPasswordRulesFields message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DomainPasswordRulesFields
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.DomainPasswordRulesFields;

        /**
         * Verifies a DomainPasswordRulesFields message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DomainPasswordRulesFields message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DomainPasswordRulesFields
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.DomainPasswordRulesFields;

        /**
         * Creates a plain object from a DomainPasswordRulesFields message. Also converts values to other types if specified.
         * @param message DomainPasswordRulesFields
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.DomainPasswordRulesFields, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DomainPasswordRulesFields to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LoginToMcRequest. */
    interface ILoginToMcRequest {

        /** LoginToMcRequest mcEnterpriseId */
        mcEnterpriseId?: (number|null);

        /** LoginToMcRequest messageSessionUid */
        messageSessionUid?: (Uint8Array|null);
    }

    /** Represents a LoginToMcRequest. */
    class LoginToMcRequest implements ILoginToMcRequest {

        /**
         * Constructs a new LoginToMcRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ILoginToMcRequest);

        /** LoginToMcRequest mcEnterpriseId. */
        public mcEnterpriseId: number;

        /** LoginToMcRequest messageSessionUid. */
        public messageSessionUid: Uint8Array;

        /**
         * Creates a new LoginToMcRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LoginToMcRequest instance
         */
        public static create(properties?: Enterprise.ILoginToMcRequest): Enterprise.LoginToMcRequest;

        /**
         * Encodes the specified LoginToMcRequest message. Does not implicitly {@link Enterprise.LoginToMcRequest.verify|verify} messages.
         * @param message LoginToMcRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ILoginToMcRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LoginToMcRequest message, length delimited. Does not implicitly {@link Enterprise.LoginToMcRequest.verify|verify} messages.
         * @param message LoginToMcRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ILoginToMcRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LoginToMcRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LoginToMcRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.LoginToMcRequest;

        /**
         * Decodes a LoginToMcRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LoginToMcRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.LoginToMcRequest;

        /**
         * Verifies a LoginToMcRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LoginToMcRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LoginToMcRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.LoginToMcRequest;

        /**
         * Creates a plain object from a LoginToMcRequest message. Also converts values to other types if specified.
         * @param message LoginToMcRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.LoginToMcRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LoginToMcRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LoginToMcResponse. */
    interface ILoginToMcResponse {

        /** LoginToMcResponse encryptedSessionToken */
        encryptedSessionToken?: (Uint8Array|null);

        /** LoginToMcResponse encryptedTreeKey */
        encryptedTreeKey?: (string|null);
    }

    /** Represents a LoginToMcResponse. */
    class LoginToMcResponse implements ILoginToMcResponse {

        /**
         * Constructs a new LoginToMcResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ILoginToMcResponse);

        /** LoginToMcResponse encryptedSessionToken. */
        public encryptedSessionToken: Uint8Array;

        /** LoginToMcResponse encryptedTreeKey. */
        public encryptedTreeKey: string;

        /**
         * Creates a new LoginToMcResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LoginToMcResponse instance
         */
        public static create(properties?: Enterprise.ILoginToMcResponse): Enterprise.LoginToMcResponse;

        /**
         * Encodes the specified LoginToMcResponse message. Does not implicitly {@link Enterprise.LoginToMcResponse.verify|verify} messages.
         * @param message LoginToMcResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ILoginToMcResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LoginToMcResponse message, length delimited. Does not implicitly {@link Enterprise.LoginToMcResponse.verify|verify} messages.
         * @param message LoginToMcResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ILoginToMcResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LoginToMcResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LoginToMcResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.LoginToMcResponse;

        /**
         * Decodes a LoginToMcResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LoginToMcResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.LoginToMcResponse;

        /**
         * Verifies a LoginToMcResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LoginToMcResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LoginToMcResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.LoginToMcResponse;

        /**
         * Creates a plain object from a LoginToMcResponse message. Also converts values to other types if specified.
         * @param message LoginToMcResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.LoginToMcResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LoginToMcResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DomainPasswordRulesResponse. */
    interface IDomainPasswordRulesResponse {

        /** DomainPasswordRulesResponse domainPasswordRulesFields */
        domainPasswordRulesFields?: (Enterprise.IDomainPasswordRulesFields[]|null);
    }

    /** Represents a DomainPasswordRulesResponse. */
    class DomainPasswordRulesResponse implements IDomainPasswordRulesResponse {

        /**
         * Constructs a new DomainPasswordRulesResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IDomainPasswordRulesResponse);

        /** DomainPasswordRulesResponse domainPasswordRulesFields. */
        public domainPasswordRulesFields: Enterprise.IDomainPasswordRulesFields[];

        /**
         * Creates a new DomainPasswordRulesResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DomainPasswordRulesResponse instance
         */
        public static create(properties?: Enterprise.IDomainPasswordRulesResponse): Enterprise.DomainPasswordRulesResponse;

        /**
         * Encodes the specified DomainPasswordRulesResponse message. Does not implicitly {@link Enterprise.DomainPasswordRulesResponse.verify|verify} messages.
         * @param message DomainPasswordRulesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IDomainPasswordRulesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DomainPasswordRulesResponse message, length delimited. Does not implicitly {@link Enterprise.DomainPasswordRulesResponse.verify|verify} messages.
         * @param message DomainPasswordRulesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IDomainPasswordRulesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DomainPasswordRulesResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DomainPasswordRulesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.DomainPasswordRulesResponse;

        /**
         * Decodes a DomainPasswordRulesResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DomainPasswordRulesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.DomainPasswordRulesResponse;

        /**
         * Verifies a DomainPasswordRulesResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DomainPasswordRulesResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DomainPasswordRulesResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.DomainPasswordRulesResponse;

        /**
         * Creates a plain object from a DomainPasswordRulesResponse message. Also converts values to other types if specified.
         * @param message DomainPasswordRulesResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.DomainPasswordRulesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DomainPasswordRulesResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ApproveUserDeviceRequest. */
    interface IApproveUserDeviceRequest {

        /** ApproveUserDeviceRequest enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** ApproveUserDeviceRequest encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);

        /** ApproveUserDeviceRequest encryptedDeviceDataKey */
        encryptedDeviceDataKey?: (Uint8Array|null);

        /** ApproveUserDeviceRequest denyApproval */
        denyApproval?: (boolean|null);
    }

    /** Represents an ApproveUserDeviceRequest. */
    class ApproveUserDeviceRequest implements IApproveUserDeviceRequest {

        /**
         * Constructs a new ApproveUserDeviceRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IApproveUserDeviceRequest);

        /** ApproveUserDeviceRequest enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** ApproveUserDeviceRequest encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /** ApproveUserDeviceRequest encryptedDeviceDataKey. */
        public encryptedDeviceDataKey: Uint8Array;

        /** ApproveUserDeviceRequest denyApproval. */
        public denyApproval: boolean;

        /**
         * Creates a new ApproveUserDeviceRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApproveUserDeviceRequest instance
         */
        public static create(properties?: Enterprise.IApproveUserDeviceRequest): Enterprise.ApproveUserDeviceRequest;

        /**
         * Encodes the specified ApproveUserDeviceRequest message. Does not implicitly {@link Enterprise.ApproveUserDeviceRequest.verify|verify} messages.
         * @param message ApproveUserDeviceRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IApproveUserDeviceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ApproveUserDeviceRequest message, length delimited. Does not implicitly {@link Enterprise.ApproveUserDeviceRequest.verify|verify} messages.
         * @param message ApproveUserDeviceRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IApproveUserDeviceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ApproveUserDeviceRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApproveUserDeviceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ApproveUserDeviceRequest;

        /**
         * Decodes an ApproveUserDeviceRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApproveUserDeviceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ApproveUserDeviceRequest;

        /**
         * Verifies an ApproveUserDeviceRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ApproveUserDeviceRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ApproveUserDeviceRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ApproveUserDeviceRequest;

        /**
         * Creates a plain object from an ApproveUserDeviceRequest message. Also converts values to other types if specified.
         * @param message ApproveUserDeviceRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ApproveUserDeviceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ApproveUserDeviceRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ApproveUserDeviceResponse. */
    interface IApproveUserDeviceResponse {

        /** ApproveUserDeviceResponse enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** ApproveUserDeviceResponse encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);

        /** ApproveUserDeviceResponse failed */
        failed?: (boolean|null);

        /** ApproveUserDeviceResponse message */
        message?: (string|null);
    }

    /** Represents an ApproveUserDeviceResponse. */
    class ApproveUserDeviceResponse implements IApproveUserDeviceResponse {

        /**
         * Constructs a new ApproveUserDeviceResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IApproveUserDeviceResponse);

        /** ApproveUserDeviceResponse enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** ApproveUserDeviceResponse encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /** ApproveUserDeviceResponse failed. */
        public failed: boolean;

        /** ApproveUserDeviceResponse message. */
        public message: string;

        /**
         * Creates a new ApproveUserDeviceResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApproveUserDeviceResponse instance
         */
        public static create(properties?: Enterprise.IApproveUserDeviceResponse): Enterprise.ApproveUserDeviceResponse;

        /**
         * Encodes the specified ApproveUserDeviceResponse message. Does not implicitly {@link Enterprise.ApproveUserDeviceResponse.verify|verify} messages.
         * @param message ApproveUserDeviceResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IApproveUserDeviceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ApproveUserDeviceResponse message, length delimited. Does not implicitly {@link Enterprise.ApproveUserDeviceResponse.verify|verify} messages.
         * @param message ApproveUserDeviceResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IApproveUserDeviceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ApproveUserDeviceResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApproveUserDeviceResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ApproveUserDeviceResponse;

        /**
         * Decodes an ApproveUserDeviceResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApproveUserDeviceResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ApproveUserDeviceResponse;

        /**
         * Verifies an ApproveUserDeviceResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ApproveUserDeviceResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ApproveUserDeviceResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ApproveUserDeviceResponse;

        /**
         * Creates a plain object from an ApproveUserDeviceResponse message. Also converts values to other types if specified.
         * @param message ApproveUserDeviceResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ApproveUserDeviceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ApproveUserDeviceResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ApproveUserDevicesRequest. */
    interface IApproveUserDevicesRequest {

        /** ApproveUserDevicesRequest deviceRequests */
        deviceRequests?: (Enterprise.IApproveUserDeviceRequest[]|null);
    }

    /** Represents an ApproveUserDevicesRequest. */
    class ApproveUserDevicesRequest implements IApproveUserDevicesRequest {

        /**
         * Constructs a new ApproveUserDevicesRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IApproveUserDevicesRequest);

        /** ApproveUserDevicesRequest deviceRequests. */
        public deviceRequests: Enterprise.IApproveUserDeviceRequest[];

        /**
         * Creates a new ApproveUserDevicesRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApproveUserDevicesRequest instance
         */
        public static create(properties?: Enterprise.IApproveUserDevicesRequest): Enterprise.ApproveUserDevicesRequest;

        /**
         * Encodes the specified ApproveUserDevicesRequest message. Does not implicitly {@link Enterprise.ApproveUserDevicesRequest.verify|verify} messages.
         * @param message ApproveUserDevicesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IApproveUserDevicesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ApproveUserDevicesRequest message, length delimited. Does not implicitly {@link Enterprise.ApproveUserDevicesRequest.verify|verify} messages.
         * @param message ApproveUserDevicesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IApproveUserDevicesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ApproveUserDevicesRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApproveUserDevicesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ApproveUserDevicesRequest;

        /**
         * Decodes an ApproveUserDevicesRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApproveUserDevicesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ApproveUserDevicesRequest;

        /**
         * Verifies an ApproveUserDevicesRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ApproveUserDevicesRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ApproveUserDevicesRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ApproveUserDevicesRequest;

        /**
         * Creates a plain object from an ApproveUserDevicesRequest message. Also converts values to other types if specified.
         * @param message ApproveUserDevicesRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ApproveUserDevicesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ApproveUserDevicesRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ApproveUserDevicesResponse. */
    interface IApproveUserDevicesResponse {

        /** ApproveUserDevicesResponse deviceResponses */
        deviceResponses?: (Enterprise.IApproveUserDeviceResponse[]|null);
    }

    /** Represents an ApproveUserDevicesResponse. */
    class ApproveUserDevicesResponse implements IApproveUserDevicesResponse {

        /**
         * Constructs a new ApproveUserDevicesResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IApproveUserDevicesResponse);

        /** ApproveUserDevicesResponse deviceResponses. */
        public deviceResponses: Enterprise.IApproveUserDeviceResponse[];

        /**
         * Creates a new ApproveUserDevicesResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApproveUserDevicesResponse instance
         */
        public static create(properties?: Enterprise.IApproveUserDevicesResponse): Enterprise.ApproveUserDevicesResponse;

        /**
         * Encodes the specified ApproveUserDevicesResponse message. Does not implicitly {@link Enterprise.ApproveUserDevicesResponse.verify|verify} messages.
         * @param message ApproveUserDevicesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IApproveUserDevicesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ApproveUserDevicesResponse message, length delimited. Does not implicitly {@link Enterprise.ApproveUserDevicesResponse.verify|verify} messages.
         * @param message ApproveUserDevicesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IApproveUserDevicesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ApproveUserDevicesResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApproveUserDevicesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ApproveUserDevicesResponse;

        /**
         * Decodes an ApproveUserDevicesResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApproveUserDevicesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ApproveUserDevicesResponse;

        /**
         * Verifies an ApproveUserDevicesResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ApproveUserDevicesResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ApproveUserDevicesResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ApproveUserDevicesResponse;

        /**
         * Creates a plain object from an ApproveUserDevicesResponse message. Also converts values to other types if specified.
         * @param message ApproveUserDevicesResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ApproveUserDevicesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ApproveUserDevicesResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseUserDataKey. */
    interface IEnterpriseUserDataKey {

        /** EnterpriseUserDataKey enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** EnterpriseUserDataKey userEncryptedDataKey */
        userEncryptedDataKey?: (Uint8Array|null);

        /** EnterpriseUserDataKey keyTypeId */
        keyTypeId?: (number|null);
    }

    /** Represents an EnterpriseUserDataKey. */
    class EnterpriseUserDataKey implements IEnterpriseUserDataKey {

        /**
         * Constructs a new EnterpriseUserDataKey.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEnterpriseUserDataKey);

        /** EnterpriseUserDataKey enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** EnterpriseUserDataKey userEncryptedDataKey. */
        public userEncryptedDataKey: Uint8Array;

        /** EnterpriseUserDataKey keyTypeId. */
        public keyTypeId: number;

        /**
         * Creates a new EnterpriseUserDataKey instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseUserDataKey instance
         */
        public static create(properties?: Enterprise.IEnterpriseUserDataKey): Enterprise.EnterpriseUserDataKey;

        /**
         * Encodes the specified EnterpriseUserDataKey message. Does not implicitly {@link Enterprise.EnterpriseUserDataKey.verify|verify} messages.
         * @param message EnterpriseUserDataKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEnterpriseUserDataKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseUserDataKey message, length delimited. Does not implicitly {@link Enterprise.EnterpriseUserDataKey.verify|verify} messages.
         * @param message EnterpriseUserDataKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEnterpriseUserDataKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseUserDataKey message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseUserDataKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EnterpriseUserDataKey;

        /**
         * Decodes an EnterpriseUserDataKey message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseUserDataKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EnterpriseUserDataKey;

        /**
         * Verifies an EnterpriseUserDataKey message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseUserDataKey message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseUserDataKey
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EnterpriseUserDataKey;

        /**
         * Creates a plain object from an EnterpriseUserDataKey message. Also converts values to other types if specified.
         * @param message EnterpriseUserDataKey
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EnterpriseUserDataKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseUserDataKey to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseUserDataKeys. */
    interface IEnterpriseUserDataKeys {

        /** EnterpriseUserDataKeys keys */
        keys?: (Enterprise.IEnterpriseUserDataKey[]|null);
    }

    /** Represents an EnterpriseUserDataKeys. */
    class EnterpriseUserDataKeys implements IEnterpriseUserDataKeys {

        /**
         * Constructs a new EnterpriseUserDataKeys.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEnterpriseUserDataKeys);

        /** EnterpriseUserDataKeys keys. */
        public keys: Enterprise.IEnterpriseUserDataKey[];

        /**
         * Creates a new EnterpriseUserDataKeys instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseUserDataKeys instance
         */
        public static create(properties?: Enterprise.IEnterpriseUserDataKeys): Enterprise.EnterpriseUserDataKeys;

        /**
         * Encodes the specified EnterpriseUserDataKeys message. Does not implicitly {@link Enterprise.EnterpriseUserDataKeys.verify|verify} messages.
         * @param message EnterpriseUserDataKeys message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEnterpriseUserDataKeys, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseUserDataKeys message, length delimited. Does not implicitly {@link Enterprise.EnterpriseUserDataKeys.verify|verify} messages.
         * @param message EnterpriseUserDataKeys message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEnterpriseUserDataKeys, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseUserDataKeys message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseUserDataKeys
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EnterpriseUserDataKeys;

        /**
         * Decodes an EnterpriseUserDataKeys message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseUserDataKeys
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EnterpriseUserDataKeys;

        /**
         * Verifies an EnterpriseUserDataKeys message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseUserDataKeys message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseUserDataKeys
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EnterpriseUserDataKeys;

        /**
         * Creates a plain object from an EnterpriseUserDataKeys message. Also converts values to other types if specified.
         * @param message EnterpriseUserDataKeys
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EnterpriseUserDataKeys, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseUserDataKeys to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseDataRequest. */
    interface IEnterpriseDataRequest {

        /** EnterpriseDataRequest continuationToken */
        continuationToken?: (Uint8Array|null);
    }

    /** Represents an EnterpriseDataRequest. */
    class EnterpriseDataRequest implements IEnterpriseDataRequest {

        /**
         * Constructs a new EnterpriseDataRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEnterpriseDataRequest);

        /** EnterpriseDataRequest continuationToken. */
        public continuationToken: Uint8Array;

        /**
         * Creates a new EnterpriseDataRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseDataRequest instance
         */
        public static create(properties?: Enterprise.IEnterpriseDataRequest): Enterprise.EnterpriseDataRequest;

        /**
         * Encodes the specified EnterpriseDataRequest message. Does not implicitly {@link Enterprise.EnterpriseDataRequest.verify|verify} messages.
         * @param message EnterpriseDataRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEnterpriseDataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseDataRequest message, length delimited. Does not implicitly {@link Enterprise.EnterpriseDataRequest.verify|verify} messages.
         * @param message EnterpriseDataRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEnterpriseDataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseDataRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseDataRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EnterpriseDataRequest;

        /**
         * Decodes an EnterpriseDataRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseDataRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EnterpriseDataRequest;

        /**
         * Verifies an EnterpriseDataRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseDataRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseDataRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EnterpriseDataRequest;

        /**
         * Creates a plain object from an EnterpriseDataRequest message. Also converts values to other types if specified.
         * @param message EnterpriseDataRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EnterpriseDataRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseDataRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SpecialProvisioning. */
    interface ISpecialProvisioning {

        /** SpecialProvisioning url */
        url?: (string|null);

        /** SpecialProvisioning name */
        name?: (string|null);
    }

    /** Represents a SpecialProvisioning. */
    class SpecialProvisioning implements ISpecialProvisioning {

        /**
         * Constructs a new SpecialProvisioning.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ISpecialProvisioning);

        /** SpecialProvisioning url. */
        public url: string;

        /** SpecialProvisioning name. */
        public name: string;

        /**
         * Creates a new SpecialProvisioning instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SpecialProvisioning instance
         */
        public static create(properties?: Enterprise.ISpecialProvisioning): Enterprise.SpecialProvisioning;

        /**
         * Encodes the specified SpecialProvisioning message. Does not implicitly {@link Enterprise.SpecialProvisioning.verify|verify} messages.
         * @param message SpecialProvisioning message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ISpecialProvisioning, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SpecialProvisioning message, length delimited. Does not implicitly {@link Enterprise.SpecialProvisioning.verify|verify} messages.
         * @param message SpecialProvisioning message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ISpecialProvisioning, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SpecialProvisioning message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SpecialProvisioning
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.SpecialProvisioning;

        /**
         * Decodes a SpecialProvisioning message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SpecialProvisioning
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.SpecialProvisioning;

        /**
         * Verifies a SpecialProvisioning message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SpecialProvisioning message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SpecialProvisioning
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.SpecialProvisioning;

        /**
         * Creates a plain object from a SpecialProvisioning message. Also converts values to other types if specified.
         * @param message SpecialProvisioning
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.SpecialProvisioning, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SpecialProvisioning to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GeneralDataEntity. */
    interface IGeneralDataEntity {

        /** GeneralDataEntity enterpriseName */
        enterpriseName?: (string|null);

        /** GeneralDataEntity restrictVisibility */
        restrictVisibility?: (boolean|null);

        /** GeneralDataEntity specialProvisioning */
        specialProvisioning?: (Enterprise.ISpecialProvisioning|null);

        /** GeneralDataEntity userPrivilege */
        userPrivilege?: (Enterprise.IUserPrivilege|null);

        /** GeneralDataEntity distributor */
        distributor?: (boolean|null);
    }

    /** Represents a GeneralDataEntity. */
    class GeneralDataEntity implements IGeneralDataEntity {

        /**
         * Constructs a new GeneralDataEntity.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IGeneralDataEntity);

        /** GeneralDataEntity enterpriseName. */
        public enterpriseName: string;

        /** GeneralDataEntity restrictVisibility. */
        public restrictVisibility: boolean;

        /** GeneralDataEntity specialProvisioning. */
        public specialProvisioning?: (Enterprise.ISpecialProvisioning|null);

        /** GeneralDataEntity userPrivilege. */
        public userPrivilege?: (Enterprise.IUserPrivilege|null);

        /** GeneralDataEntity distributor. */
        public distributor: boolean;

        /**
         * Creates a new GeneralDataEntity instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GeneralDataEntity instance
         */
        public static create(properties?: Enterprise.IGeneralDataEntity): Enterprise.GeneralDataEntity;

        /**
         * Encodes the specified GeneralDataEntity message. Does not implicitly {@link Enterprise.GeneralDataEntity.verify|verify} messages.
         * @param message GeneralDataEntity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IGeneralDataEntity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GeneralDataEntity message, length delimited. Does not implicitly {@link Enterprise.GeneralDataEntity.verify|verify} messages.
         * @param message GeneralDataEntity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IGeneralDataEntity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GeneralDataEntity message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralDataEntity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.GeneralDataEntity;

        /**
         * Decodes a GeneralDataEntity message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GeneralDataEntity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.GeneralDataEntity;

        /**
         * Verifies a GeneralDataEntity message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GeneralDataEntity message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GeneralDataEntity
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.GeneralDataEntity;

        /**
         * Creates a plain object from a GeneralDataEntity message. Also converts values to other types if specified.
         * @param message GeneralDataEntity
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.GeneralDataEntity, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GeneralDataEntity to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Node. */
    interface INode {

        /** Node nodeId */
        nodeId?: (number|Long|null);

        /** Node parentId */
        parentId?: (number|Long|null);

        /** Node bridgeId */
        bridgeId?: (number|Long|null);

        /** Node scimId */
        scimId?: (number|Long|null);

        /** Node licenseId */
        licenseId?: (number|Long|null);

        /** Node encryptedData */
        encryptedData?: (string|null);

        /** Node duoEnabled */
        duoEnabled?: (boolean|null);

        /** Node rsaEnabled */
        rsaEnabled?: (boolean|null);

        /** Node ssoServiceProviderId */
        ssoServiceProviderId?: (number|Long|null);

        /** Node restrictVisibility */
        restrictVisibility?: (boolean|null);

        /** Node ssoServiceProviderIds */
        ssoServiceProviderIds?: ((number|Long)[]|null);
    }

    /** Represents a Node. */
    class Node implements INode {

        /**
         * Constructs a new Node.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.INode);

        /** Node nodeId. */
        public nodeId: (number|Long);

        /** Node parentId. */
        public parentId: (number|Long);

        /** Node bridgeId. */
        public bridgeId: (number|Long);

        /** Node scimId. */
        public scimId: (number|Long);

        /** Node licenseId. */
        public licenseId: (number|Long);

        /** Node encryptedData. */
        public encryptedData: string;

        /** Node duoEnabled. */
        public duoEnabled: boolean;

        /** Node rsaEnabled. */
        public rsaEnabled: boolean;

        /** Node ssoServiceProviderId. */
        public ssoServiceProviderId: (number|Long);

        /** Node restrictVisibility. */
        public restrictVisibility: boolean;

        /** Node ssoServiceProviderIds. */
        public ssoServiceProviderIds: (number|Long)[];

        /**
         * Creates a new Node instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Node instance
         */
        public static create(properties?: Enterprise.INode): Enterprise.Node;

        /**
         * Encodes the specified Node message. Does not implicitly {@link Enterprise.Node.verify|verify} messages.
         * @param message Node message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.INode, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Node message, length delimited. Does not implicitly {@link Enterprise.Node.verify|verify} messages.
         * @param message Node message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.INode, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Node message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Node
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.Node;

        /**
         * Decodes a Node message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Node
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.Node;

        /**
         * Verifies a Node message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Node message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Node
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.Node;

        /**
         * Creates a plain object from a Node message. Also converts values to other types if specified.
         * @param message Node
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.Node, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Node to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Role. */
    interface IRole {

        /** Role roleId */
        roleId?: (number|Long|null);

        /** Role nodeId */
        nodeId?: (number|Long|null);

        /** Role encryptedData */
        encryptedData?: (string|null);

        /** Role keyType */
        keyType?: (string|null);

        /** Role visibleBelow */
        visibleBelow?: (boolean|null);

        /** Role newUserInherit */
        newUserInherit?: (boolean|null);

        /** Role roleType */
        roleType?: (string|null);
    }

    /** Represents a Role. */
    class Role implements IRole {

        /**
         * Constructs a new Role.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IRole);

        /** Role roleId. */
        public roleId: (number|Long);

        /** Role nodeId. */
        public nodeId: (number|Long);

        /** Role encryptedData. */
        public encryptedData: string;

        /** Role keyType. */
        public keyType: string;

        /** Role visibleBelow. */
        public visibleBelow: boolean;

        /** Role newUserInherit. */
        public newUserInherit: boolean;

        /** Role roleType. */
        public roleType: string;

        /**
         * Creates a new Role instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Role instance
         */
        public static create(properties?: Enterprise.IRole): Enterprise.Role;

        /**
         * Encodes the specified Role message. Does not implicitly {@link Enterprise.Role.verify|verify} messages.
         * @param message Role message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IRole, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Role message, length delimited. Does not implicitly {@link Enterprise.Role.verify|verify} messages.
         * @param message Role message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IRole, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Role message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Role
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.Role;

        /**
         * Decodes a Role message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Role
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.Role;

        /**
         * Verifies a Role message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Role message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Role
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.Role;

        /**
         * Creates a plain object from a Role message. Also converts values to other types if specified.
         * @param message Role
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.Role, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Role to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** TransferAcceptanceStatus enum. */
    enum TransferAcceptanceStatus {
        UNDEFINED = 0,
        NOT_REQUIRED = 1,
        NOT_ACCEPTED = 2,
        PARTIALLY_ACCEPTED = 3,
        ACCEPTED = 4
    }

    /** Properties of a User. */
    interface IUser {

        /** User enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** User nodeId */
        nodeId?: (number|Long|null);

        /** User encryptedData */
        encryptedData?: (string|null);

        /** User keyType */
        keyType?: (string|null);

        /** User username */
        username?: (string|null);

        /** User status */
        status?: (string|null);

        /** User lock */
        lock?: (number|null);

        /** User userId */
        userId?: (number|null);

        /** User accountShareExpiration */
        accountShareExpiration?: (number|Long|null);

        /** User fullName */
        fullName?: (string|null);

        /** User jobTitle */
        jobTitle?: (string|null);

        /** User tfaEnabled */
        tfaEnabled?: (boolean|null);

        /** User transferAcceptanceStatus */
        transferAcceptanceStatus?: (Enterprise.TransferAcceptanceStatus|null);
    }

    /** Represents a User. */
    class User implements IUser {

        /**
         * Constructs a new User.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IUser);

        /** User enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** User nodeId. */
        public nodeId: (number|Long);

        /** User encryptedData. */
        public encryptedData: string;

        /** User keyType. */
        public keyType: string;

        /** User username. */
        public username: string;

        /** User status. */
        public status: string;

        /** User lock. */
        public lock: number;

        /** User userId. */
        public userId: number;

        /** User accountShareExpiration. */
        public accountShareExpiration: (number|Long);

        /** User fullName. */
        public fullName: string;

        /** User jobTitle. */
        public jobTitle: string;

        /** User tfaEnabled. */
        public tfaEnabled: boolean;

        /** User transferAcceptanceStatus. */
        public transferAcceptanceStatus: Enterprise.TransferAcceptanceStatus;

        /**
         * Creates a new User instance using the specified properties.
         * @param [properties] Properties to set
         * @returns User instance
         */
        public static create(properties?: Enterprise.IUser): Enterprise.User;

        /**
         * Encodes the specified User message. Does not implicitly {@link Enterprise.User.verify|verify} messages.
         * @param message User message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified User message, length delimited. Does not implicitly {@link Enterprise.User.verify|verify} messages.
         * @param message User message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a User message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns User
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.User;

        /**
         * Decodes a User message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns User
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.User;

        /**
         * Verifies a User message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a User message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns User
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.User;

        /**
         * Creates a plain object from a User message. Also converts values to other types if specified.
         * @param message User
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.User, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this User to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserAlias. */
    interface IUserAlias {

        /** UserAlias enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** UserAlias username */
        username?: (string|null);
    }

    /** Represents a UserAlias. */
    class UserAlias implements IUserAlias {

        /**
         * Constructs a new UserAlias.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IUserAlias);

        /** UserAlias enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** UserAlias username. */
        public username: string;

        /**
         * Creates a new UserAlias instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserAlias instance
         */
        public static create(properties?: Enterprise.IUserAlias): Enterprise.UserAlias;

        /**
         * Encodes the specified UserAlias message. Does not implicitly {@link Enterprise.UserAlias.verify|verify} messages.
         * @param message UserAlias message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IUserAlias, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserAlias message, length delimited. Does not implicitly {@link Enterprise.UserAlias.verify|verify} messages.
         * @param message UserAlias message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IUserAlias, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserAlias message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserAlias
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.UserAlias;

        /**
         * Decodes a UserAlias message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserAlias
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.UserAlias;

        /**
         * Verifies a UserAlias message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserAlias message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserAlias
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.UserAlias;

        /**
         * Creates a plain object from a UserAlias message. Also converts values to other types if specified.
         * @param message UserAlias
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.UserAlias, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserAlias to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ComplianceReportMetaData. */
    interface IComplianceReportMetaData {

        /** ComplianceReportMetaData reportUid */
        reportUid?: (Uint8Array|null);

        /** ComplianceReportMetaData nodeId */
        nodeId?: (number|Long|null);

        /** ComplianceReportMetaData reportName */
        reportName?: (string|null);

        /** ComplianceReportMetaData dateGenerated */
        dateGenerated?: (number|Long|null);

        /** ComplianceReportMetaData runByName */
        runByName?: (string|null);

        /** ComplianceReportMetaData numberOfOwners */
        numberOfOwners?: (number|null);

        /** ComplianceReportMetaData numberOfRecords */
        numberOfRecords?: (number|null);
    }

    /** Represents a ComplianceReportMetaData. */
    class ComplianceReportMetaData implements IComplianceReportMetaData {

        /**
         * Constructs a new ComplianceReportMetaData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IComplianceReportMetaData);

        /** ComplianceReportMetaData reportUid. */
        public reportUid: Uint8Array;

        /** ComplianceReportMetaData nodeId. */
        public nodeId: (number|Long);

        /** ComplianceReportMetaData reportName. */
        public reportName: string;

        /** ComplianceReportMetaData dateGenerated. */
        public dateGenerated: (number|Long);

        /** ComplianceReportMetaData runByName. */
        public runByName: string;

        /** ComplianceReportMetaData numberOfOwners. */
        public numberOfOwners: number;

        /** ComplianceReportMetaData numberOfRecords. */
        public numberOfRecords: number;

        /**
         * Creates a new ComplianceReportMetaData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ComplianceReportMetaData instance
         */
        public static create(properties?: Enterprise.IComplianceReportMetaData): Enterprise.ComplianceReportMetaData;

        /**
         * Encodes the specified ComplianceReportMetaData message. Does not implicitly {@link Enterprise.ComplianceReportMetaData.verify|verify} messages.
         * @param message ComplianceReportMetaData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IComplianceReportMetaData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ComplianceReportMetaData message, length delimited. Does not implicitly {@link Enterprise.ComplianceReportMetaData.verify|verify} messages.
         * @param message ComplianceReportMetaData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IComplianceReportMetaData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ComplianceReportMetaData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ComplianceReportMetaData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ComplianceReportMetaData;

        /**
         * Decodes a ComplianceReportMetaData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ComplianceReportMetaData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ComplianceReportMetaData;

        /**
         * Verifies a ComplianceReportMetaData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ComplianceReportMetaData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ComplianceReportMetaData
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ComplianceReportMetaData;

        /**
         * Creates a plain object from a ComplianceReportMetaData message. Also converts values to other types if specified.
         * @param message ComplianceReportMetaData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ComplianceReportMetaData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ComplianceReportMetaData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ManagedNode. */
    interface IManagedNode {

        /** ManagedNode roleId */
        roleId?: (number|Long|null);

        /** ManagedNode managedNodeId */
        managedNodeId?: (number|Long|null);

        /** ManagedNode cascadeNodeManagement */
        cascadeNodeManagement?: (boolean|null);
    }

    /** Represents a ManagedNode. */
    class ManagedNode implements IManagedNode {

        /**
         * Constructs a new ManagedNode.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IManagedNode);

        /** ManagedNode roleId. */
        public roleId: (number|Long);

        /** ManagedNode managedNodeId. */
        public managedNodeId: (number|Long);

        /** ManagedNode cascadeNodeManagement. */
        public cascadeNodeManagement: boolean;

        /**
         * Creates a new ManagedNode instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ManagedNode instance
         */
        public static create(properties?: Enterprise.IManagedNode): Enterprise.ManagedNode;

        /**
         * Encodes the specified ManagedNode message. Does not implicitly {@link Enterprise.ManagedNode.verify|verify} messages.
         * @param message ManagedNode message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IManagedNode, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ManagedNode message, length delimited. Does not implicitly {@link Enterprise.ManagedNode.verify|verify} messages.
         * @param message ManagedNode message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IManagedNode, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ManagedNode message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ManagedNode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ManagedNode;

        /**
         * Decodes a ManagedNode message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ManagedNode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ManagedNode;

        /**
         * Verifies a ManagedNode message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ManagedNode message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ManagedNode
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ManagedNode;

        /**
         * Creates a plain object from a ManagedNode message. Also converts values to other types if specified.
         * @param message ManagedNode
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ManagedNode, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ManagedNode to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserManagedNode. */
    interface IUserManagedNode {

        /** UserManagedNode nodeId */
        nodeId?: (number|Long|null);

        /** UserManagedNode cascadeNodeManagement */
        cascadeNodeManagement?: (boolean|null);

        /** UserManagedNode privileges */
        privileges?: (string[]|null);
    }

    /** Represents a UserManagedNode. */
    class UserManagedNode implements IUserManagedNode {

        /**
         * Constructs a new UserManagedNode.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IUserManagedNode);

        /** UserManagedNode nodeId. */
        public nodeId: (number|Long);

        /** UserManagedNode cascadeNodeManagement. */
        public cascadeNodeManagement: boolean;

        /** UserManagedNode privileges. */
        public privileges: string[];

        /**
         * Creates a new UserManagedNode instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserManagedNode instance
         */
        public static create(properties?: Enterprise.IUserManagedNode): Enterprise.UserManagedNode;

        /**
         * Encodes the specified UserManagedNode message. Does not implicitly {@link Enterprise.UserManagedNode.verify|verify} messages.
         * @param message UserManagedNode message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IUserManagedNode, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserManagedNode message, length delimited. Does not implicitly {@link Enterprise.UserManagedNode.verify|verify} messages.
         * @param message UserManagedNode message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IUserManagedNode, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserManagedNode message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserManagedNode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.UserManagedNode;

        /**
         * Decodes a UserManagedNode message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserManagedNode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.UserManagedNode;

        /**
         * Verifies a UserManagedNode message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserManagedNode message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserManagedNode
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.UserManagedNode;

        /**
         * Creates a plain object from a UserManagedNode message. Also converts values to other types if specified.
         * @param message UserManagedNode
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.UserManagedNode, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserManagedNode to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserPrivilege. */
    interface IUserPrivilege {

        /** UserPrivilege userManagedNodes */
        userManagedNodes?: (Enterprise.IUserManagedNode[]|null);

        /** UserPrivilege enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** UserPrivilege encryptedData */
        encryptedData?: (string|null);
    }

    /** Represents a UserPrivilege. */
    class UserPrivilege implements IUserPrivilege {

        /**
         * Constructs a new UserPrivilege.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IUserPrivilege);

        /** UserPrivilege userManagedNodes. */
        public userManagedNodes: Enterprise.IUserManagedNode[];

        /** UserPrivilege enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** UserPrivilege encryptedData. */
        public encryptedData: string;

        /**
         * Creates a new UserPrivilege instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserPrivilege instance
         */
        public static create(properties?: Enterprise.IUserPrivilege): Enterprise.UserPrivilege;

        /**
         * Encodes the specified UserPrivilege message. Does not implicitly {@link Enterprise.UserPrivilege.verify|verify} messages.
         * @param message UserPrivilege message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IUserPrivilege, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserPrivilege message, length delimited. Does not implicitly {@link Enterprise.UserPrivilege.verify|verify} messages.
         * @param message UserPrivilege message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IUserPrivilege, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserPrivilege message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserPrivilege
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.UserPrivilege;

        /**
         * Decodes a UserPrivilege message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserPrivilege
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.UserPrivilege;

        /**
         * Verifies a UserPrivilege message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserPrivilege message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserPrivilege
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.UserPrivilege;

        /**
         * Creates a plain object from a UserPrivilege message. Also converts values to other types if specified.
         * @param message UserPrivilege
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.UserPrivilege, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserPrivilege to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RoleUser. */
    interface IRoleUser {

        /** RoleUser roleId */
        roleId?: (number|Long|null);

        /** RoleUser enterpriseUserId */
        enterpriseUserId?: (number|Long|null);
    }

    /** Represents a RoleUser. */
    class RoleUser implements IRoleUser {

        /**
         * Constructs a new RoleUser.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IRoleUser);

        /** RoleUser roleId. */
        public roleId: (number|Long);

        /** RoleUser enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /**
         * Creates a new RoleUser instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RoleUser instance
         */
        public static create(properties?: Enterprise.IRoleUser): Enterprise.RoleUser;

        /**
         * Encodes the specified RoleUser message. Does not implicitly {@link Enterprise.RoleUser.verify|verify} messages.
         * @param message RoleUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IRoleUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RoleUser message, length delimited. Does not implicitly {@link Enterprise.RoleUser.verify|verify} messages.
         * @param message RoleUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IRoleUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RoleUser message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RoleUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.RoleUser;

        /**
         * Decodes a RoleUser message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RoleUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.RoleUser;

        /**
         * Verifies a RoleUser message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RoleUser message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RoleUser
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.RoleUser;

        /**
         * Creates a plain object from a RoleUser message. Also converts values to other types if specified.
         * @param message RoleUser
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.RoleUser, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RoleUser to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RolePrivilege. */
    interface IRolePrivilege {

        /** RolePrivilege managedNodeId */
        managedNodeId?: (number|Long|null);

        /** RolePrivilege roleId */
        roleId?: (number|Long|null);

        /** RolePrivilege privilegeType */
        privilegeType?: (string|null);
    }

    /** Represents a RolePrivilege. */
    class RolePrivilege implements IRolePrivilege {

        /**
         * Constructs a new RolePrivilege.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IRolePrivilege);

        /** RolePrivilege managedNodeId. */
        public managedNodeId: (number|Long);

        /** RolePrivilege roleId. */
        public roleId: (number|Long);

        /** RolePrivilege privilegeType. */
        public privilegeType: string;

        /**
         * Creates a new RolePrivilege instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RolePrivilege instance
         */
        public static create(properties?: Enterprise.IRolePrivilege): Enterprise.RolePrivilege;

        /**
         * Encodes the specified RolePrivilege message. Does not implicitly {@link Enterprise.RolePrivilege.verify|verify} messages.
         * @param message RolePrivilege message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IRolePrivilege, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RolePrivilege message, length delimited. Does not implicitly {@link Enterprise.RolePrivilege.verify|verify} messages.
         * @param message RolePrivilege message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IRolePrivilege, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RolePrivilege message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RolePrivilege
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.RolePrivilege;

        /**
         * Decodes a RolePrivilege message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RolePrivilege
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.RolePrivilege;

        /**
         * Verifies a RolePrivilege message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RolePrivilege message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RolePrivilege
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.RolePrivilege;

        /**
         * Creates a plain object from a RolePrivilege message. Also converts values to other types if specified.
         * @param message RolePrivilege
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.RolePrivilege, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RolePrivilege to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RoleEnforcement. */
    interface IRoleEnforcement {

        /** RoleEnforcement roleId */
        roleId?: (number|Long|null);

        /** RoleEnforcement enforcementType */
        enforcementType?: (string|null);

        /** RoleEnforcement value */
        value?: (string|null);
    }

    /** Represents a RoleEnforcement. */
    class RoleEnforcement implements IRoleEnforcement {

        /**
         * Constructs a new RoleEnforcement.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IRoleEnforcement);

        /** RoleEnforcement roleId. */
        public roleId: (number|Long);

        /** RoleEnforcement enforcementType. */
        public enforcementType: string;

        /** RoleEnforcement value. */
        public value: string;

        /**
         * Creates a new RoleEnforcement instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RoleEnforcement instance
         */
        public static create(properties?: Enterprise.IRoleEnforcement): Enterprise.RoleEnforcement;

        /**
         * Encodes the specified RoleEnforcement message. Does not implicitly {@link Enterprise.RoleEnforcement.verify|verify} messages.
         * @param message RoleEnforcement message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IRoleEnforcement, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RoleEnforcement message, length delimited. Does not implicitly {@link Enterprise.RoleEnforcement.verify|verify} messages.
         * @param message RoleEnforcement message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IRoleEnforcement, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RoleEnforcement message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RoleEnforcement
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.RoleEnforcement;

        /**
         * Decodes a RoleEnforcement message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RoleEnforcement
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.RoleEnforcement;

        /**
         * Verifies a RoleEnforcement message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RoleEnforcement message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RoleEnforcement
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.RoleEnforcement;

        /**
         * Creates a plain object from a RoleEnforcement message. Also converts values to other types if specified.
         * @param message RoleEnforcement
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.RoleEnforcement, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RoleEnforcement to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Team. */
    interface ITeam {

        /** Team teamUid */
        teamUid?: (Uint8Array|null);

        /** Team name */
        name?: (string|null);

        /** Team nodeId */
        nodeId?: (number|Long|null);

        /** Team restrictEdit */
        restrictEdit?: (boolean|null);

        /** Team restrictShare */
        restrictShare?: (boolean|null);

        /** Team restrictView */
        restrictView?: (boolean|null);

        /** Team encryptedData */
        encryptedData?: (string|null);

        /** Team encryptedTeamKey */
        encryptedTeamKey?: (string|null);
    }

    /** Represents a Team. */
    class Team implements ITeam {

        /**
         * Constructs a new Team.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ITeam);

        /** Team teamUid. */
        public teamUid: Uint8Array;

        /** Team name. */
        public name: string;

        /** Team nodeId. */
        public nodeId: (number|Long);

        /** Team restrictEdit. */
        public restrictEdit: boolean;

        /** Team restrictShare. */
        public restrictShare: boolean;

        /** Team restrictView. */
        public restrictView: boolean;

        /** Team encryptedData. */
        public encryptedData: string;

        /** Team encryptedTeamKey. */
        public encryptedTeamKey: string;

        /**
         * Creates a new Team instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Team instance
         */
        public static create(properties?: Enterprise.ITeam): Enterprise.Team;

        /**
         * Encodes the specified Team message. Does not implicitly {@link Enterprise.Team.verify|verify} messages.
         * @param message Team message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ITeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Team message, length delimited. Does not implicitly {@link Enterprise.Team.verify|verify} messages.
         * @param message Team message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ITeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Team message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Team
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.Team;

        /**
         * Decodes a Team message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Team
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.Team;

        /**
         * Verifies a Team message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Team message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Team
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.Team;

        /**
         * Creates a plain object from a Team message. Also converts values to other types if specified.
         * @param message Team
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.Team, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Team to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TeamUser. */
    interface ITeamUser {

        /** TeamUser teamUid */
        teamUid?: (Uint8Array|null);

        /** TeamUser enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** TeamUser userType */
        userType?: (string|null);
    }

    /** Represents a TeamUser. */
    class TeamUser implements ITeamUser {

        /**
         * Constructs a new TeamUser.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ITeamUser);

        /** TeamUser teamUid. */
        public teamUid: Uint8Array;

        /** TeamUser enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** TeamUser userType. */
        public userType: string;

        /**
         * Creates a new TeamUser instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TeamUser instance
         */
        public static create(properties?: Enterprise.ITeamUser): Enterprise.TeamUser;

        /**
         * Encodes the specified TeamUser message. Does not implicitly {@link Enterprise.TeamUser.verify|verify} messages.
         * @param message TeamUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ITeamUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TeamUser message, length delimited. Does not implicitly {@link Enterprise.TeamUser.verify|verify} messages.
         * @param message TeamUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ITeamUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TeamUser message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.TeamUser;

        /**
         * Decodes a TeamUser message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TeamUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.TeamUser;

        /**
         * Verifies a TeamUser message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TeamUser message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TeamUser
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.TeamUser;

        /**
         * Creates a plain object from a TeamUser message. Also converts values to other types if specified.
         * @param message TeamUser
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.TeamUser, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TeamUser to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetDistributorInfoResponse. */
    interface IGetDistributorInfoResponse {

        /** GetDistributorInfoResponse distributors */
        distributors?: (Enterprise.IDistributor[]|null);
    }

    /** Represents a GetDistributorInfoResponse. */
    class GetDistributorInfoResponse implements IGetDistributorInfoResponse {

        /**
         * Constructs a new GetDistributorInfoResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IGetDistributorInfoResponse);

        /** GetDistributorInfoResponse distributors. */
        public distributors: Enterprise.IDistributor[];

        /**
         * Creates a new GetDistributorInfoResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetDistributorInfoResponse instance
         */
        public static create(properties?: Enterprise.IGetDistributorInfoResponse): Enterprise.GetDistributorInfoResponse;

        /**
         * Encodes the specified GetDistributorInfoResponse message. Does not implicitly {@link Enterprise.GetDistributorInfoResponse.verify|verify} messages.
         * @param message GetDistributorInfoResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IGetDistributorInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetDistributorInfoResponse message, length delimited. Does not implicitly {@link Enterprise.GetDistributorInfoResponse.verify|verify} messages.
         * @param message GetDistributorInfoResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IGetDistributorInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetDistributorInfoResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetDistributorInfoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.GetDistributorInfoResponse;

        /**
         * Decodes a GetDistributorInfoResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetDistributorInfoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.GetDistributorInfoResponse;

        /**
         * Verifies a GetDistributorInfoResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetDistributorInfoResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetDistributorInfoResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.GetDistributorInfoResponse;

        /**
         * Creates a plain object from a GetDistributorInfoResponse message. Also converts values to other types if specified.
         * @param message GetDistributorInfoResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.GetDistributorInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetDistributorInfoResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Distributor. */
    interface IDistributor {

        /** Distributor name */
        name?: (string|null);

        /** Distributor mspInfos */
        mspInfos?: (Enterprise.IMspInfo[]|null);
    }

    /** Represents a Distributor. */
    class Distributor implements IDistributor {

        /**
         * Constructs a new Distributor.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IDistributor);

        /** Distributor name. */
        public name: string;

        /** Distributor mspInfos. */
        public mspInfos: Enterprise.IMspInfo[];

        /**
         * Creates a new Distributor instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Distributor instance
         */
        public static create(properties?: Enterprise.IDistributor): Enterprise.Distributor;

        /**
         * Encodes the specified Distributor message. Does not implicitly {@link Enterprise.Distributor.verify|verify} messages.
         * @param message Distributor message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IDistributor, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Distributor message, length delimited. Does not implicitly {@link Enterprise.Distributor.verify|verify} messages.
         * @param message Distributor message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IDistributor, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Distributor message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Distributor
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.Distributor;

        /**
         * Decodes a Distributor message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Distributor
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.Distributor;

        /**
         * Verifies a Distributor message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Distributor message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Distributor
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.Distributor;

        /**
         * Creates a plain object from a Distributor message. Also converts values to other types if specified.
         * @param message Distributor
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.Distributor, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Distributor to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MspInfo. */
    interface IMspInfo {

        /** MspInfo enterpriseId */
        enterpriseId?: (number|null);

        /** MspInfo enterpriseName */
        enterpriseName?: (string|null);

        /** MspInfo allocatedLicenses */
        allocatedLicenses?: (number|null);

        /** MspInfo allowedMcProducts */
        allowedMcProducts?: (string[]|null);

        /** MspInfo allowedAddOns */
        allowedAddOns?: (string[]|null);

        /** MspInfo maxFilePlanType */
        maxFilePlanType?: (string|null);

        /** MspInfo managedCompanies */
        managedCompanies?: (Enterprise.IManagedCompany[]|null);

        /** MspInfo allowUnlimitedLicenses */
        allowUnlimitedLicenses?: (boolean|null);
    }

    /** Represents a MspInfo. */
    class MspInfo implements IMspInfo {

        /**
         * Constructs a new MspInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IMspInfo);

        /** MspInfo enterpriseId. */
        public enterpriseId: number;

        /** MspInfo enterpriseName. */
        public enterpriseName: string;

        /** MspInfo allocatedLicenses. */
        public allocatedLicenses: number;

        /** MspInfo allowedMcProducts. */
        public allowedMcProducts: string[];

        /** MspInfo allowedAddOns. */
        public allowedAddOns: string[];

        /** MspInfo maxFilePlanType. */
        public maxFilePlanType: string;

        /** MspInfo managedCompanies. */
        public managedCompanies: Enterprise.IManagedCompany[];

        /** MspInfo allowUnlimitedLicenses. */
        public allowUnlimitedLicenses: boolean;

        /**
         * Creates a new MspInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MspInfo instance
         */
        public static create(properties?: Enterprise.IMspInfo): Enterprise.MspInfo;

        /**
         * Encodes the specified MspInfo message. Does not implicitly {@link Enterprise.MspInfo.verify|verify} messages.
         * @param message MspInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IMspInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MspInfo message, length delimited. Does not implicitly {@link Enterprise.MspInfo.verify|verify} messages.
         * @param message MspInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IMspInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MspInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MspInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.MspInfo;

        /**
         * Decodes a MspInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MspInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.MspInfo;

        /**
         * Verifies a MspInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MspInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MspInfo
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.MspInfo;

        /**
         * Creates a plain object from a MspInfo message. Also converts values to other types if specified.
         * @param message MspInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.MspInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MspInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ManagedCompany. */
    interface IManagedCompany {

        /** ManagedCompany mcEnterpriseId */
        mcEnterpriseId?: (number|null);

        /** ManagedCompany mcEnterpriseName */
        mcEnterpriseName?: (string|null);

        /** ManagedCompany mspNodeId */
        mspNodeId?: (number|Long|null);

        /** ManagedCompany numberOfSeats */
        numberOfSeats?: (number|null);

        /** ManagedCompany numberOfUsers */
        numberOfUsers?: (number|null);

        /** ManagedCompany productId */
        productId?: (string|null);

        /** ManagedCompany isExpired */
        isExpired?: (boolean|null);

        /** ManagedCompany treeKey */
        treeKey?: (string|null);

        /** ManagedCompany treeKeyRole */
        treeKeyRole?: (number|Long|null);

        /** ManagedCompany filePlanType */
        filePlanType?: (string|null);

        /** ManagedCompany addOns */
        addOns?: (Enterprise.ILicenseAddOn[]|null);
    }

    /** Represents a ManagedCompany. */
    class ManagedCompany implements IManagedCompany {

        /**
         * Constructs a new ManagedCompany.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IManagedCompany);

        /** ManagedCompany mcEnterpriseId. */
        public mcEnterpriseId: number;

        /** ManagedCompany mcEnterpriseName. */
        public mcEnterpriseName: string;

        /** ManagedCompany mspNodeId. */
        public mspNodeId: (number|Long);

        /** ManagedCompany numberOfSeats. */
        public numberOfSeats: number;

        /** ManagedCompany numberOfUsers. */
        public numberOfUsers: number;

        /** ManagedCompany productId. */
        public productId: string;

        /** ManagedCompany isExpired. */
        public isExpired: boolean;

        /** ManagedCompany treeKey. */
        public treeKey: string;

        /** ManagedCompany treeKeyRole. */
        public treeKeyRole: (number|Long);

        /** ManagedCompany filePlanType. */
        public filePlanType: string;

        /** ManagedCompany addOns. */
        public addOns: Enterprise.ILicenseAddOn[];

        /**
         * Creates a new ManagedCompany instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ManagedCompany instance
         */
        public static create(properties?: Enterprise.IManagedCompany): Enterprise.ManagedCompany;

        /**
         * Encodes the specified ManagedCompany message. Does not implicitly {@link Enterprise.ManagedCompany.verify|verify} messages.
         * @param message ManagedCompany message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IManagedCompany, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ManagedCompany message, length delimited. Does not implicitly {@link Enterprise.ManagedCompany.verify|verify} messages.
         * @param message ManagedCompany message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IManagedCompany, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ManagedCompany message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ManagedCompany
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ManagedCompany;

        /**
         * Decodes a ManagedCompany message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ManagedCompany
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ManagedCompany;

        /**
         * Verifies a ManagedCompany message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ManagedCompany message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ManagedCompany
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ManagedCompany;

        /**
         * Creates a plain object from a ManagedCompany message. Also converts values to other types if specified.
         * @param message ManagedCompany
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ManagedCompany, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ManagedCompany to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MSPPool. */
    interface IMSPPool {

        /** MSPPool productId */
        productId?: (string|null);

        /** MSPPool seats */
        seats?: (number|null);

        /** MSPPool availableSeats */
        availableSeats?: (number|null);

        /** MSPPool stash */
        stash?: (number|null);
    }

    /** Represents a MSPPool. */
    class MSPPool implements IMSPPool {

        /**
         * Constructs a new MSPPool.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IMSPPool);

        /** MSPPool productId. */
        public productId: string;

        /** MSPPool seats. */
        public seats: number;

        /** MSPPool availableSeats. */
        public availableSeats: number;

        /** MSPPool stash. */
        public stash: number;

        /**
         * Creates a new MSPPool instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MSPPool instance
         */
        public static create(properties?: Enterprise.IMSPPool): Enterprise.MSPPool;

        /**
         * Encodes the specified MSPPool message. Does not implicitly {@link Enterprise.MSPPool.verify|verify} messages.
         * @param message MSPPool message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IMSPPool, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MSPPool message, length delimited. Does not implicitly {@link Enterprise.MSPPool.verify|verify} messages.
         * @param message MSPPool message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IMSPPool, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MSPPool message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MSPPool
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.MSPPool;

        /**
         * Decodes a MSPPool message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MSPPool
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.MSPPool;

        /**
         * Verifies a MSPPool message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MSPPool message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MSPPool
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.MSPPool;

        /**
         * Creates a plain object from a MSPPool message. Also converts values to other types if specified.
         * @param message MSPPool
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.MSPPool, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MSPPool to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MSPContact. */
    interface IMSPContact {

        /** MSPContact enterpriseId */
        enterpriseId?: (number|null);

        /** MSPContact enterpriseName */
        enterpriseName?: (string|null);
    }

    /** Represents a MSPContact. */
    class MSPContact implements IMSPContact {

        /**
         * Constructs a new MSPContact.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IMSPContact);

        /** MSPContact enterpriseId. */
        public enterpriseId: number;

        /** MSPContact enterpriseName. */
        public enterpriseName: string;

        /**
         * Creates a new MSPContact instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MSPContact instance
         */
        public static create(properties?: Enterprise.IMSPContact): Enterprise.MSPContact;

        /**
         * Encodes the specified MSPContact message. Does not implicitly {@link Enterprise.MSPContact.verify|verify} messages.
         * @param message MSPContact message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IMSPContact, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MSPContact message, length delimited. Does not implicitly {@link Enterprise.MSPContact.verify|verify} messages.
         * @param message MSPContact message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IMSPContact, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MSPContact message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MSPContact
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.MSPContact;

        /**
         * Decodes a MSPContact message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MSPContact
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.MSPContact;

        /**
         * Verifies a MSPContact message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MSPContact message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MSPContact
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.MSPContact;

        /**
         * Creates a plain object from a MSPContact message. Also converts values to other types if specified.
         * @param message MSPContact
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.MSPContact, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MSPContact to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LicenseAddOn. */
    interface ILicenseAddOn {

        /** LicenseAddOn name */
        name?: (string|null);

        /** LicenseAddOn enabled */
        enabled?: (boolean|null);

        /** LicenseAddOn isTrial */
        isTrial?: (boolean|null);

        /** LicenseAddOn expiration */
        expiration?: (number|Long|null);

        /** LicenseAddOn created */
        created?: (number|Long|null);

        /** LicenseAddOn seats */
        seats?: (number|null);

        /** LicenseAddOn activationTime */
        activationTime?: (number|Long|null);

        /** LicenseAddOn includedInProduct */
        includedInProduct?: (boolean|null);
    }

    /** Represents a LicenseAddOn. */
    class LicenseAddOn implements ILicenseAddOn {

        /**
         * Constructs a new LicenseAddOn.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ILicenseAddOn);

        /** LicenseAddOn name. */
        public name: string;

        /** LicenseAddOn enabled. */
        public enabled: boolean;

        /** LicenseAddOn isTrial. */
        public isTrial: boolean;

        /** LicenseAddOn expiration. */
        public expiration: (number|Long);

        /** LicenseAddOn created. */
        public created: (number|Long);

        /** LicenseAddOn seats. */
        public seats: number;

        /** LicenseAddOn activationTime. */
        public activationTime: (number|Long);

        /** LicenseAddOn includedInProduct. */
        public includedInProduct: boolean;

        /**
         * Creates a new LicenseAddOn instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LicenseAddOn instance
         */
        public static create(properties?: Enterprise.ILicenseAddOn): Enterprise.LicenseAddOn;

        /**
         * Encodes the specified LicenseAddOn message. Does not implicitly {@link Enterprise.LicenseAddOn.verify|verify} messages.
         * @param message LicenseAddOn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ILicenseAddOn, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LicenseAddOn message, length delimited. Does not implicitly {@link Enterprise.LicenseAddOn.verify|verify} messages.
         * @param message LicenseAddOn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ILicenseAddOn, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LicenseAddOn message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LicenseAddOn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.LicenseAddOn;

        /**
         * Decodes a LicenseAddOn message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LicenseAddOn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.LicenseAddOn;

        /**
         * Verifies a LicenseAddOn message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LicenseAddOn message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LicenseAddOn
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.LicenseAddOn;

        /**
         * Creates a plain object from a LicenseAddOn message. Also converts values to other types if specified.
         * @param message LicenseAddOn
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.LicenseAddOn, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LicenseAddOn to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MCDefault. */
    interface IMCDefault {

        /** MCDefault mcProduct */
        mcProduct?: (string|null);

        /** MCDefault addOns */
        addOns?: (string[]|null);

        /** MCDefault filePlanType */
        filePlanType?: (string|null);

        /** MCDefault maxLicenses */
        maxLicenses?: (number|null);

        /** MCDefault fixedMaxLicenses */
        fixedMaxLicenses?: (boolean|null);
    }

    /** Represents a MCDefault. */
    class MCDefault implements IMCDefault {

        /**
         * Constructs a new MCDefault.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IMCDefault);

        /** MCDefault mcProduct. */
        public mcProduct: string;

        /** MCDefault addOns. */
        public addOns: string[];

        /** MCDefault filePlanType. */
        public filePlanType: string;

        /** MCDefault maxLicenses. */
        public maxLicenses: number;

        /** MCDefault fixedMaxLicenses. */
        public fixedMaxLicenses: boolean;

        /**
         * Creates a new MCDefault instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MCDefault instance
         */
        public static create(properties?: Enterprise.IMCDefault): Enterprise.MCDefault;

        /**
         * Encodes the specified MCDefault message. Does not implicitly {@link Enterprise.MCDefault.verify|verify} messages.
         * @param message MCDefault message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IMCDefault, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MCDefault message, length delimited. Does not implicitly {@link Enterprise.MCDefault.verify|verify} messages.
         * @param message MCDefault message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IMCDefault, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MCDefault message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MCDefault
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.MCDefault;

        /**
         * Decodes a MCDefault message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MCDefault
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.MCDefault;

        /**
         * Verifies a MCDefault message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MCDefault message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MCDefault
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.MCDefault;

        /**
         * Creates a plain object from a MCDefault message. Also converts values to other types if specified.
         * @param message MCDefault
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.MCDefault, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MCDefault to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MSPPermits. */
    interface IMSPPermits {

        /** MSPPermits restricted */
        restricted?: (boolean|null);

        /** MSPPermits maxAllowedLicenses */
        maxAllowedLicenses?: (number|null);

        /** MSPPermits allowedMcProducts */
        allowedMcProducts?: (string[]|null);

        /** MSPPermits allowedAddOns */
        allowedAddOns?: (string[]|null);

        /** MSPPermits maxFilePlanType */
        maxFilePlanType?: (string|null);

        /** MSPPermits allowUnlimitedLicenses */
        allowUnlimitedLicenses?: (boolean|null);

        /** MSPPermits mcDefaults */
        mcDefaults?: (Enterprise.IMCDefault[]|null);
    }

    /** Represents a MSPPermits. */
    class MSPPermits implements IMSPPermits {

        /**
         * Constructs a new MSPPermits.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IMSPPermits);

        /** MSPPermits restricted. */
        public restricted: boolean;

        /** MSPPermits maxAllowedLicenses. */
        public maxAllowedLicenses: number;

        /** MSPPermits allowedMcProducts. */
        public allowedMcProducts: string[];

        /** MSPPermits allowedAddOns. */
        public allowedAddOns: string[];

        /** MSPPermits maxFilePlanType. */
        public maxFilePlanType: string;

        /** MSPPermits allowUnlimitedLicenses. */
        public allowUnlimitedLicenses: boolean;

        /** MSPPermits mcDefaults. */
        public mcDefaults: Enterprise.IMCDefault[];

        /**
         * Creates a new MSPPermits instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MSPPermits instance
         */
        public static create(properties?: Enterprise.IMSPPermits): Enterprise.MSPPermits;

        /**
         * Encodes the specified MSPPermits message. Does not implicitly {@link Enterprise.MSPPermits.verify|verify} messages.
         * @param message MSPPermits message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IMSPPermits, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MSPPermits message, length delimited. Does not implicitly {@link Enterprise.MSPPermits.verify|verify} messages.
         * @param message MSPPermits message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IMSPPermits, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MSPPermits message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MSPPermits
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.MSPPermits;

        /**
         * Decodes a MSPPermits message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MSPPermits
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.MSPPermits;

        /**
         * Verifies a MSPPermits message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MSPPermits message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MSPPermits
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.MSPPermits;

        /**
         * Creates a plain object from a MSPPermits message. Also converts values to other types if specified.
         * @param message MSPPermits
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.MSPPermits, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MSPPermits to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a License. */
    interface ILicense {

        /** License paid */
        paid?: (boolean|null);

        /** License numberOfSeats */
        numberOfSeats?: (number|null);

        /** License expiration */
        expiration?: (number|Long|null);

        /** License licenseKeyId */
        licenseKeyId?: (number|null);

        /** License productTypeId */
        productTypeId?: (number|null);

        /** License name */
        name?: (string|null);

        /** License enterpriseLicenseId */
        enterpriseLicenseId?: (number|Long|null);

        /** License seatsAllocated */
        seatsAllocated?: (number|null);

        /** License seatsPending */
        seatsPending?: (number|null);

        /** License tier */
        tier?: (number|null);

        /** License filePlanTypeId */
        filePlanTypeId?: (number|null);

        /** License maxBytes */
        maxBytes?: (number|Long|null);

        /** License storageExpiration */
        storageExpiration?: (number|Long|null);

        /** License licenseStatus */
        licenseStatus?: (string|null);

        /** License mspPool */
        mspPool?: (Enterprise.IMSPPool[]|null);

        /** License managedBy */
        managedBy?: (Enterprise.IMSPContact|null);

        /** License addOns */
        addOns?: (Enterprise.ILicenseAddOn[]|null);

        /** License nextBillingDate */
        nextBillingDate?: (number|Long|null);

        /** License hasMSPLegacyLog */
        hasMSPLegacyLog?: (boolean|null);

        /** License mspPermits */
        mspPermits?: (Enterprise.IMSPPermits|null);

        /** License distributor */
        distributor?: (boolean|null);
    }

    /** Represents a License. */
    class License implements ILicense {

        /**
         * Constructs a new License.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ILicense);

        /** License paid. */
        public paid: boolean;

        /** License numberOfSeats. */
        public numberOfSeats: number;

        /** License expiration. */
        public expiration: (number|Long);

        /** License licenseKeyId. */
        public licenseKeyId: number;

        /** License productTypeId. */
        public productTypeId: number;

        /** License name. */
        public name: string;

        /** License enterpriseLicenseId. */
        public enterpriseLicenseId: (number|Long);

        /** License seatsAllocated. */
        public seatsAllocated: number;

        /** License seatsPending. */
        public seatsPending: number;

        /** License tier. */
        public tier: number;

        /** License filePlanTypeId. */
        public filePlanTypeId: number;

        /** License maxBytes. */
        public maxBytes: (number|Long);

        /** License storageExpiration. */
        public storageExpiration: (number|Long);

        /** License licenseStatus. */
        public licenseStatus: string;

        /** License mspPool. */
        public mspPool: Enterprise.IMSPPool[];

        /** License managedBy. */
        public managedBy?: (Enterprise.IMSPContact|null);

        /** License addOns. */
        public addOns: Enterprise.ILicenseAddOn[];

        /** License nextBillingDate. */
        public nextBillingDate: (number|Long);

        /** License hasMSPLegacyLog. */
        public hasMSPLegacyLog: boolean;

        /** License mspPermits. */
        public mspPermits?: (Enterprise.IMSPPermits|null);

        /** License distributor. */
        public distributor: boolean;

        /**
         * Creates a new License instance using the specified properties.
         * @param [properties] Properties to set
         * @returns License instance
         */
        public static create(properties?: Enterprise.ILicense): Enterprise.License;

        /**
         * Encodes the specified License message. Does not implicitly {@link Enterprise.License.verify|verify} messages.
         * @param message License message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ILicense, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified License message, length delimited. Does not implicitly {@link Enterprise.License.verify|verify} messages.
         * @param message License message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ILicense, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a License message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns License
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.License;

        /**
         * Decodes a License message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns License
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.License;

        /**
         * Verifies a License message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a License message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns License
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.License;

        /**
         * Creates a plain object from a License message. Also converts values to other types if specified.
         * @param message License
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.License, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this License to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Bridge. */
    interface IBridge {

        /** Bridge bridgeId */
        bridgeId?: (number|Long|null);

        /** Bridge nodeId */
        nodeId?: (number|Long|null);

        /** Bridge wanIpEnforcement */
        wanIpEnforcement?: (string|null);

        /** Bridge lanIpEnforcement */
        lanIpEnforcement?: (string|null);

        /** Bridge status */
        status?: (string|null);
    }

    /** Represents a Bridge. */
    class Bridge implements IBridge {

        /**
         * Constructs a new Bridge.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IBridge);

        /** Bridge bridgeId. */
        public bridgeId: (number|Long);

        /** Bridge nodeId. */
        public nodeId: (number|Long);

        /** Bridge wanIpEnforcement. */
        public wanIpEnforcement: string;

        /** Bridge lanIpEnforcement. */
        public lanIpEnforcement: string;

        /** Bridge status. */
        public status: string;

        /**
         * Creates a new Bridge instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Bridge instance
         */
        public static create(properties?: Enterprise.IBridge): Enterprise.Bridge;

        /**
         * Encodes the specified Bridge message. Does not implicitly {@link Enterprise.Bridge.verify|verify} messages.
         * @param message Bridge message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IBridge, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Bridge message, length delimited. Does not implicitly {@link Enterprise.Bridge.verify|verify} messages.
         * @param message Bridge message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IBridge, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Bridge message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Bridge
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.Bridge;

        /**
         * Decodes a Bridge message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Bridge
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.Bridge;

        /**
         * Verifies a Bridge message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Bridge message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Bridge
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.Bridge;

        /**
         * Creates a plain object from a Bridge message. Also converts values to other types if specified.
         * @param message Bridge
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.Bridge, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Bridge to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Scim. */
    interface IScim {

        /** Scim scimId */
        scimId?: (number|Long|null);

        /** Scim nodeId */
        nodeId?: (number|Long|null);

        /** Scim status */
        status?: (string|null);

        /** Scim lastSynced */
        lastSynced?: (number|Long|null);

        /** Scim rolePrefix */
        rolePrefix?: (string|null);

        /** Scim uniqueGroups */
        uniqueGroups?: (boolean|null);
    }

    /** Represents a Scim. */
    class Scim implements IScim {

        /**
         * Constructs a new Scim.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IScim);

        /** Scim scimId. */
        public scimId: (number|Long);

        /** Scim nodeId. */
        public nodeId: (number|Long);

        /** Scim status. */
        public status: string;

        /** Scim lastSynced. */
        public lastSynced: (number|Long);

        /** Scim rolePrefix. */
        public rolePrefix: string;

        /** Scim uniqueGroups. */
        public uniqueGroups: boolean;

        /**
         * Creates a new Scim instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Scim instance
         */
        public static create(properties?: Enterprise.IScim): Enterprise.Scim;

        /**
         * Encodes the specified Scim message. Does not implicitly {@link Enterprise.Scim.verify|verify} messages.
         * @param message Scim message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IScim, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Scim message, length delimited. Does not implicitly {@link Enterprise.Scim.verify|verify} messages.
         * @param message Scim message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IScim, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Scim message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Scim
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.Scim;

        /**
         * Decodes a Scim message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Scim
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.Scim;

        /**
         * Verifies a Scim message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Scim message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Scim
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.Scim;

        /**
         * Creates a plain object from a Scim message. Also converts values to other types if specified.
         * @param message Scim
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.Scim, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Scim to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EmailProvision. */
    interface IEmailProvision {

        /** EmailProvision id */
        id?: (number|null);

        /** EmailProvision nodeId */
        nodeId?: (number|Long|null);

        /** EmailProvision domain */
        domain?: (string|null);

        /** EmailProvision method */
        method?: (string|null);
    }

    /** Represents an EmailProvision. */
    class EmailProvision implements IEmailProvision {

        /**
         * Constructs a new EmailProvision.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEmailProvision);

        /** EmailProvision id. */
        public id: number;

        /** EmailProvision nodeId. */
        public nodeId: (number|Long);

        /** EmailProvision domain. */
        public domain: string;

        /** EmailProvision method. */
        public method: string;

        /**
         * Creates a new EmailProvision instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EmailProvision instance
         */
        public static create(properties?: Enterprise.IEmailProvision): Enterprise.EmailProvision;

        /**
         * Encodes the specified EmailProvision message. Does not implicitly {@link Enterprise.EmailProvision.verify|verify} messages.
         * @param message EmailProvision message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEmailProvision, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EmailProvision message, length delimited. Does not implicitly {@link Enterprise.EmailProvision.verify|verify} messages.
         * @param message EmailProvision message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEmailProvision, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EmailProvision message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EmailProvision
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EmailProvision;

        /**
         * Decodes an EmailProvision message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EmailProvision
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EmailProvision;

        /**
         * Verifies an EmailProvision message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EmailProvision message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EmailProvision
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EmailProvision;

        /**
         * Creates a plain object from an EmailProvision message. Also converts values to other types if specified.
         * @param message EmailProvision
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EmailProvision, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EmailProvision to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueuedTeam. */
    interface IQueuedTeam {

        /** QueuedTeam teamUid */
        teamUid?: (Uint8Array|null);

        /** QueuedTeam name */
        name?: (string|null);

        /** QueuedTeam nodeId */
        nodeId?: (number|Long|null);

        /** QueuedTeam encryptedData */
        encryptedData?: (string|null);
    }

    /** Represents a QueuedTeam. */
    class QueuedTeam implements IQueuedTeam {

        /**
         * Constructs a new QueuedTeam.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IQueuedTeam);

        /** QueuedTeam teamUid. */
        public teamUid: Uint8Array;

        /** QueuedTeam name. */
        public name: string;

        /** QueuedTeam nodeId. */
        public nodeId: (number|Long);

        /** QueuedTeam encryptedData. */
        public encryptedData: string;

        /**
         * Creates a new QueuedTeam instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueuedTeam instance
         */
        public static create(properties?: Enterprise.IQueuedTeam): Enterprise.QueuedTeam;

        /**
         * Encodes the specified QueuedTeam message. Does not implicitly {@link Enterprise.QueuedTeam.verify|verify} messages.
         * @param message QueuedTeam message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IQueuedTeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueuedTeam message, length delimited. Does not implicitly {@link Enterprise.QueuedTeam.verify|verify} messages.
         * @param message QueuedTeam message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IQueuedTeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueuedTeam message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueuedTeam
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.QueuedTeam;

        /**
         * Decodes a QueuedTeam message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueuedTeam
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.QueuedTeam;

        /**
         * Verifies a QueuedTeam message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueuedTeam message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueuedTeam
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.QueuedTeam;

        /**
         * Creates a plain object from a QueuedTeam message. Also converts values to other types if specified.
         * @param message QueuedTeam
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.QueuedTeam, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueuedTeam to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueuedTeamUser. */
    interface IQueuedTeamUser {

        /** QueuedTeamUser teamUid */
        teamUid?: (Uint8Array|null);

        /** QueuedTeamUser users */
        users?: ((number|Long)[]|null);
    }

    /** Represents a QueuedTeamUser. */
    class QueuedTeamUser implements IQueuedTeamUser {

        /**
         * Constructs a new QueuedTeamUser.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IQueuedTeamUser);

        /** QueuedTeamUser teamUid. */
        public teamUid: Uint8Array;

        /** QueuedTeamUser users. */
        public users: (number|Long)[];

        /**
         * Creates a new QueuedTeamUser instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueuedTeamUser instance
         */
        public static create(properties?: Enterprise.IQueuedTeamUser): Enterprise.QueuedTeamUser;

        /**
         * Encodes the specified QueuedTeamUser message. Does not implicitly {@link Enterprise.QueuedTeamUser.verify|verify} messages.
         * @param message QueuedTeamUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IQueuedTeamUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueuedTeamUser message, length delimited. Does not implicitly {@link Enterprise.QueuedTeamUser.verify|verify} messages.
         * @param message QueuedTeamUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IQueuedTeamUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueuedTeamUser message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueuedTeamUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.QueuedTeamUser;

        /**
         * Decodes a QueuedTeamUser message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueuedTeamUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.QueuedTeamUser;

        /**
         * Verifies a QueuedTeamUser message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueuedTeamUser message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueuedTeamUser
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.QueuedTeamUser;

        /**
         * Creates a plain object from a QueuedTeamUser message. Also converts values to other types if specified.
         * @param message QueuedTeamUser
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.QueuedTeamUser, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueuedTeamUser to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoService. */
    interface ISsoService {

        /** SsoService ssoServiceProviderId */
        ssoServiceProviderId?: (number|Long|null);

        /** SsoService nodeId */
        nodeId?: (number|Long|null);

        /** SsoService name */
        name?: (string|null);

        /** SsoService spUrl */
        spUrl?: (string|null);

        /** SsoService inviteNewUsers */
        inviteNewUsers?: (boolean|null);

        /** SsoService active */
        active?: (boolean|null);

        /** SsoService isCloud */
        isCloud?: (boolean|null);
    }

    /** Represents a SsoService. */
    class SsoService implements ISsoService {

        /**
         * Constructs a new SsoService.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ISsoService);

        /** SsoService ssoServiceProviderId. */
        public ssoServiceProviderId: (number|Long);

        /** SsoService nodeId. */
        public nodeId: (number|Long);

        /** SsoService name. */
        public name: string;

        /** SsoService spUrl. */
        public spUrl: string;

        /** SsoService inviteNewUsers. */
        public inviteNewUsers: boolean;

        /** SsoService active. */
        public active: boolean;

        /** SsoService isCloud. */
        public isCloud: boolean;

        /**
         * Creates a new SsoService instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoService instance
         */
        public static create(properties?: Enterprise.ISsoService): Enterprise.SsoService;

        /**
         * Encodes the specified SsoService message. Does not implicitly {@link Enterprise.SsoService.verify|verify} messages.
         * @param message SsoService message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ISsoService, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoService message, length delimited. Does not implicitly {@link Enterprise.SsoService.verify|verify} messages.
         * @param message SsoService message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ISsoService, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoService message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoService
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.SsoService;

        /**
         * Decodes a SsoService message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoService
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.SsoService;

        /**
         * Verifies a SsoService message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoService message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoService
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.SsoService;

        /**
         * Creates a plain object from a SsoService message. Also converts values to other types if specified.
         * @param message SsoService
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.SsoService, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoService to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReportFilterUser. */
    interface IReportFilterUser {

        /** ReportFilterUser userId */
        userId?: (number|null);

        /** ReportFilterUser email */
        email?: (string|null);
    }

    /** Represents a ReportFilterUser. */
    class ReportFilterUser implements IReportFilterUser {

        /**
         * Constructs a new ReportFilterUser.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IReportFilterUser);

        /** ReportFilterUser userId. */
        public userId: number;

        /** ReportFilterUser email. */
        public email: string;

        /**
         * Creates a new ReportFilterUser instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReportFilterUser instance
         */
        public static create(properties?: Enterprise.IReportFilterUser): Enterprise.ReportFilterUser;

        /**
         * Encodes the specified ReportFilterUser message. Does not implicitly {@link Enterprise.ReportFilterUser.verify|verify} messages.
         * @param message ReportFilterUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IReportFilterUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReportFilterUser message, length delimited. Does not implicitly {@link Enterprise.ReportFilterUser.verify|verify} messages.
         * @param message ReportFilterUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IReportFilterUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReportFilterUser message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReportFilterUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ReportFilterUser;

        /**
         * Decodes a ReportFilterUser message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReportFilterUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ReportFilterUser;

        /**
         * Verifies a ReportFilterUser message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReportFilterUser message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReportFilterUser
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ReportFilterUser;

        /**
         * Creates a plain object from a ReportFilterUser message. Also converts values to other types if specified.
         * @param message ReportFilterUser
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ReportFilterUser, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReportFilterUser to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeviceRequestForAdminApproval. */
    interface IDeviceRequestForAdminApproval {

        /** DeviceRequestForAdminApproval deviceId */
        deviceId?: (number|Long|null);

        /** DeviceRequestForAdminApproval enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** DeviceRequestForAdminApproval encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);

        /** DeviceRequestForAdminApproval devicePublicKey */
        devicePublicKey?: (Uint8Array|null);

        /** DeviceRequestForAdminApproval deviceName */
        deviceName?: (string|null);

        /** DeviceRequestForAdminApproval clientVersion */
        clientVersion?: (string|null);

        /** DeviceRequestForAdminApproval deviceType */
        deviceType?: (string|null);

        /** DeviceRequestForAdminApproval date */
        date?: (number|Long|null);

        /** DeviceRequestForAdminApproval ipAddress */
        ipAddress?: (string|null);

        /** DeviceRequestForAdminApproval location */
        location?: (string|null);

        /** DeviceRequestForAdminApproval email */
        email?: (string|null);

        /** DeviceRequestForAdminApproval accountUid */
        accountUid?: (Uint8Array|null);
    }

    /** Represents a DeviceRequestForAdminApproval. */
    class DeviceRequestForAdminApproval implements IDeviceRequestForAdminApproval {

        /**
         * Constructs a new DeviceRequestForAdminApproval.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IDeviceRequestForAdminApproval);

        /** DeviceRequestForAdminApproval deviceId. */
        public deviceId: (number|Long);

        /** DeviceRequestForAdminApproval enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** DeviceRequestForAdminApproval encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /** DeviceRequestForAdminApproval devicePublicKey. */
        public devicePublicKey: Uint8Array;

        /** DeviceRequestForAdminApproval deviceName. */
        public deviceName: string;

        /** DeviceRequestForAdminApproval clientVersion. */
        public clientVersion: string;

        /** DeviceRequestForAdminApproval deviceType. */
        public deviceType: string;

        /** DeviceRequestForAdminApproval date. */
        public date: (number|Long);

        /** DeviceRequestForAdminApproval ipAddress. */
        public ipAddress: string;

        /** DeviceRequestForAdminApproval location. */
        public location: string;

        /** DeviceRequestForAdminApproval email. */
        public email: string;

        /** DeviceRequestForAdminApproval accountUid. */
        public accountUid: Uint8Array;

        /**
         * Creates a new DeviceRequestForAdminApproval instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeviceRequestForAdminApproval instance
         */
        public static create(properties?: Enterprise.IDeviceRequestForAdminApproval): Enterprise.DeviceRequestForAdminApproval;

        /**
         * Encodes the specified DeviceRequestForAdminApproval message. Does not implicitly {@link Enterprise.DeviceRequestForAdminApproval.verify|verify} messages.
         * @param message DeviceRequestForAdminApproval message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IDeviceRequestForAdminApproval, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeviceRequestForAdminApproval message, length delimited. Does not implicitly {@link Enterprise.DeviceRequestForAdminApproval.verify|verify} messages.
         * @param message DeviceRequestForAdminApproval message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IDeviceRequestForAdminApproval, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeviceRequestForAdminApproval message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeviceRequestForAdminApproval
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.DeviceRequestForAdminApproval;

        /**
         * Decodes a DeviceRequestForAdminApproval message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeviceRequestForAdminApproval
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.DeviceRequestForAdminApproval;

        /**
         * Verifies a DeviceRequestForAdminApproval message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeviceRequestForAdminApproval message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeviceRequestForAdminApproval
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.DeviceRequestForAdminApproval;

        /**
         * Creates a plain object from a DeviceRequestForAdminApproval message. Also converts values to other types if specified.
         * @param message DeviceRequestForAdminApproval
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.DeviceRequestForAdminApproval, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeviceRequestForAdminApproval to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** EnterpriseDataEntity enum. */
    enum EnterpriseDataEntity {
        UNKNOWN = 0,
        NODES = 1,
        ROLES = 2,
        USERS = 3,
        TEAMS = 4,
        TEAM_USERS = 5,
        ROLE_USERS = 6,
        ROLE_PRIVILEGES = 7,
        ROLE_ENFORCEMENTS = 8,
        ROLE_TEAMS = 9,
        LICENSES = 10,
        MANAGED_NODES = 11,
        MANAGED_COMPANIES = 12,
        BRIDGES = 13,
        SCIMS = 14,
        EMAIL_PROVISION = 15,
        QUEUED_TEAMS = 16,
        QUEUED_TEAM_USERS = 17,
        SSO_SERVICES = 18,
        REPORT_FILTER_USERS = 19,
        DEVICES_REQUEST_FOR_ADMIN_APPROVAL = 20,
        USER_ALIASES = 21,
        COMPLIANCE_REPORT_CRITERIA_AND_FILTER = 22,
        COMPLIANCE_REPORTS = 23
    }

    /** CacheStatus enum. */
    enum CacheStatus {
        KEEP = 0,
        CLEAR = 1
    }

    /** Properties of an EnterpriseData. */
    interface IEnterpriseData {

        /** EnterpriseData entity */
        entity?: (Enterprise.EnterpriseDataEntity|null);

        /** EnterpriseData delete */
        "delete"?: (boolean|null);

        /** EnterpriseData data */
        data?: (Uint8Array[]|null);
    }

    /** Represents an EnterpriseData. */
    class EnterpriseData implements IEnterpriseData {

        /**
         * Constructs a new EnterpriseData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEnterpriseData);

        /** EnterpriseData entity. */
        public entity: Enterprise.EnterpriseDataEntity;

        /** EnterpriseData delete. */
        public delete: boolean;

        /** EnterpriseData data. */
        public data: Uint8Array[];

        /**
         * Creates a new EnterpriseData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseData instance
         */
        public static create(properties?: Enterprise.IEnterpriseData): Enterprise.EnterpriseData;

        /**
         * Encodes the specified EnterpriseData message. Does not implicitly {@link Enterprise.EnterpriseData.verify|verify} messages.
         * @param message EnterpriseData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEnterpriseData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseData message, length delimited. Does not implicitly {@link Enterprise.EnterpriseData.verify|verify} messages.
         * @param message EnterpriseData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEnterpriseData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EnterpriseData;

        /**
         * Decodes an EnterpriseData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EnterpriseData;

        /**
         * Verifies an EnterpriseData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseData
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EnterpriseData;

        /**
         * Creates a plain object from an EnterpriseData message. Also converts values to other types if specified.
         * @param message EnterpriseData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EnterpriseData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseDataResponse. */
    interface IEnterpriseDataResponse {

        /** EnterpriseDataResponse continuationToken */
        continuationToken?: (Uint8Array|null);

        /** EnterpriseDataResponse hasMore */
        hasMore?: (boolean|null);

        /** EnterpriseDataResponse cacheStatus */
        cacheStatus?: (Enterprise.CacheStatus|null);

        /** EnterpriseDataResponse data */
        data?: (Enterprise.IEnterpriseData[]|null);

        /** EnterpriseDataResponse generalData */
        generalData?: (Enterprise.IGeneralDataEntity|null);
    }

    /** Represents an EnterpriseDataResponse. */
    class EnterpriseDataResponse implements IEnterpriseDataResponse {

        /**
         * Constructs a new EnterpriseDataResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEnterpriseDataResponse);

        /** EnterpriseDataResponse continuationToken. */
        public continuationToken: Uint8Array;

        /** EnterpriseDataResponse hasMore. */
        public hasMore: boolean;

        /** EnterpriseDataResponse cacheStatus. */
        public cacheStatus: Enterprise.CacheStatus;

        /** EnterpriseDataResponse data. */
        public data: Enterprise.IEnterpriseData[];

        /** EnterpriseDataResponse generalData. */
        public generalData?: (Enterprise.IGeneralDataEntity|null);

        /**
         * Creates a new EnterpriseDataResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseDataResponse instance
         */
        public static create(properties?: Enterprise.IEnterpriseDataResponse): Enterprise.EnterpriseDataResponse;

        /**
         * Encodes the specified EnterpriseDataResponse message. Does not implicitly {@link Enterprise.EnterpriseDataResponse.verify|verify} messages.
         * @param message EnterpriseDataResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEnterpriseDataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseDataResponse message, length delimited. Does not implicitly {@link Enterprise.EnterpriseDataResponse.verify|verify} messages.
         * @param message EnterpriseDataResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEnterpriseDataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseDataResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseDataResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EnterpriseDataResponse;

        /**
         * Decodes an EnterpriseDataResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseDataResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EnterpriseDataResponse;

        /**
         * Verifies an EnterpriseDataResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseDataResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseDataResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EnterpriseDataResponse;

        /**
         * Creates a plain object from an EnterpriseDataResponse message. Also converts values to other types if specified.
         * @param message EnterpriseDataResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EnterpriseDataResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseDataResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BackupRequest. */
    interface IBackupRequest {

        /** BackupRequest continuationToken */
        continuationToken?: (Uint8Array|null);
    }

    /** Represents a BackupRequest. */
    class BackupRequest implements IBackupRequest {

        /**
         * Constructs a new BackupRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IBackupRequest);

        /** BackupRequest continuationToken. */
        public continuationToken: Uint8Array;

        /**
         * Creates a new BackupRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BackupRequest instance
         */
        public static create(properties?: Enterprise.IBackupRequest): Enterprise.BackupRequest;

        /**
         * Encodes the specified BackupRequest message. Does not implicitly {@link Enterprise.BackupRequest.verify|verify} messages.
         * @param message BackupRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IBackupRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BackupRequest message, length delimited. Does not implicitly {@link Enterprise.BackupRequest.verify|verify} messages.
         * @param message BackupRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IBackupRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BackupRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BackupRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.BackupRequest;

        /**
         * Decodes a BackupRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BackupRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.BackupRequest;

        /**
         * Verifies a BackupRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BackupRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BackupRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.BackupRequest;

        /**
         * Creates a plain object from a BackupRequest message. Also converts values to other types if specified.
         * @param message BackupRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.BackupRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BackupRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** BackupKeyType enum. */
    enum BackupKeyType {
        NO_KEY = 0,
        ENCRYPTED_BY_DATA_KEY = 1,
        ENCRYPTED_BY_PUBLIC_KEY = 2,
        ENCRYPTED_BY_DATA_KEY_GCM = 3,
        ENCRYPTED_BY_PUBLIC_KEY_ECC = 4
    }

    /** BackupUserDataKeyType enum. */
    enum BackupUserDataKeyType {
        OWN = 0,
        SHARED_TO_ENTERPRISE = 1
    }

    /** Properties of a BackupRecord. */
    interface IBackupRecord {

        /** BackupRecord userId */
        userId?: (number|null);

        /** BackupRecord recordUid */
        recordUid?: (Uint8Array|null);

        /** BackupRecord key */
        key?: (Uint8Array|null);

        /** BackupRecord keyType */
        keyType?: (Enterprise.BackupKeyType|null);

        /** BackupRecord version */
        version?: (number|null);

        /** BackupRecord data */
        data?: (Uint8Array|null);

        /** BackupRecord extra */
        extra?: (Uint8Array|null);
    }

    /** Represents a BackupRecord. */
    class BackupRecord implements IBackupRecord {

        /**
         * Constructs a new BackupRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IBackupRecord);

        /** BackupRecord userId. */
        public userId: number;

        /** BackupRecord recordUid. */
        public recordUid: Uint8Array;

        /** BackupRecord key. */
        public key: Uint8Array;

        /** BackupRecord keyType. */
        public keyType: Enterprise.BackupKeyType;

        /** BackupRecord version. */
        public version: number;

        /** BackupRecord data. */
        public data: Uint8Array;

        /** BackupRecord extra. */
        public extra: Uint8Array;

        /**
         * Creates a new BackupRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BackupRecord instance
         */
        public static create(properties?: Enterprise.IBackupRecord): Enterprise.BackupRecord;

        /**
         * Encodes the specified BackupRecord message. Does not implicitly {@link Enterprise.BackupRecord.verify|verify} messages.
         * @param message BackupRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IBackupRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BackupRecord message, length delimited. Does not implicitly {@link Enterprise.BackupRecord.verify|verify} messages.
         * @param message BackupRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IBackupRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BackupRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BackupRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.BackupRecord;

        /**
         * Decodes a BackupRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BackupRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.BackupRecord;

        /**
         * Verifies a BackupRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BackupRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BackupRecord
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.BackupRecord;

        /**
         * Creates a plain object from a BackupRecord message. Also converts values to other types if specified.
         * @param message BackupRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.BackupRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BackupRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BackupKey. */
    interface IBackupKey {

        /** BackupKey userId */
        userId?: (number|null);

        /** BackupKey backupKey */
        backupKey?: (Uint8Array|null);
    }

    /** Represents a BackupKey. */
    class BackupKey implements IBackupKey {

        /**
         * Constructs a new BackupKey.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IBackupKey);

        /** BackupKey userId. */
        public userId: number;

        /** BackupKey backupKey. */
        public backupKey: Uint8Array;

        /**
         * Creates a new BackupKey instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BackupKey instance
         */
        public static create(properties?: Enterprise.IBackupKey): Enterprise.BackupKey;

        /**
         * Encodes the specified BackupKey message. Does not implicitly {@link Enterprise.BackupKey.verify|verify} messages.
         * @param message BackupKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IBackupKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BackupKey message, length delimited. Does not implicitly {@link Enterprise.BackupKey.verify|verify} messages.
         * @param message BackupKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IBackupKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BackupKey message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BackupKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.BackupKey;

        /**
         * Decodes a BackupKey message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BackupKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.BackupKey;

        /**
         * Verifies a BackupKey message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BackupKey message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BackupKey
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.BackupKey;

        /**
         * Creates a plain object from a BackupKey message. Also converts values to other types if specified.
         * @param message BackupKey
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.BackupKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BackupKey to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BackupUser. */
    interface IBackupUser {

        /** BackupUser userId */
        userId?: (number|null);

        /** BackupUser userName */
        userName?: (string|null);

        /** BackupUser dataKey */
        dataKey?: (Uint8Array|null);

        /** BackupUser dataKeyType */
        dataKeyType?: (Enterprise.BackupUserDataKeyType|null);

        /** BackupUser privateKey */
        privateKey?: (Uint8Array|null);

        /** BackupUser treeKey */
        treeKey?: (Uint8Array|null);

        /** BackupUser treeKeyType */
        treeKeyType?: (Enterprise.BackupKeyType|null);

        /** BackupUser backupKeys */
        backupKeys?: (Enterprise.IBackupKey[]|null);

        /** BackupUser privateECKey */
        privateECKey?: (Uint8Array|null);
    }

    /** Represents a BackupUser. */
    class BackupUser implements IBackupUser {

        /**
         * Constructs a new BackupUser.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IBackupUser);

        /** BackupUser userId. */
        public userId: number;

        /** BackupUser userName. */
        public userName: string;

        /** BackupUser dataKey. */
        public dataKey: Uint8Array;

        /** BackupUser dataKeyType. */
        public dataKeyType: Enterprise.BackupUserDataKeyType;

        /** BackupUser privateKey. */
        public privateKey: Uint8Array;

        /** BackupUser treeKey. */
        public treeKey: Uint8Array;

        /** BackupUser treeKeyType. */
        public treeKeyType: Enterprise.BackupKeyType;

        /** BackupUser backupKeys. */
        public backupKeys: Enterprise.IBackupKey[];

        /** BackupUser privateECKey. */
        public privateECKey: Uint8Array;

        /**
         * Creates a new BackupUser instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BackupUser instance
         */
        public static create(properties?: Enterprise.IBackupUser): Enterprise.BackupUser;

        /**
         * Encodes the specified BackupUser message. Does not implicitly {@link Enterprise.BackupUser.verify|verify} messages.
         * @param message BackupUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IBackupUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BackupUser message, length delimited. Does not implicitly {@link Enterprise.BackupUser.verify|verify} messages.
         * @param message BackupUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IBackupUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BackupUser message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BackupUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.BackupUser;

        /**
         * Decodes a BackupUser message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BackupUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.BackupUser;

        /**
         * Verifies a BackupUser message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BackupUser message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BackupUser
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.BackupUser;

        /**
         * Creates a plain object from a BackupUser message. Also converts values to other types if specified.
         * @param message BackupUser
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.BackupUser, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BackupUser to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BackupResponse. */
    interface IBackupResponse {

        /** BackupResponse enterpriseEccPrivateKey */
        enterpriseEccPrivateKey?: (Uint8Array|null);

        /** BackupResponse users */
        users?: (Enterprise.IBackupUser[]|null);

        /** BackupResponse records */
        records?: (Enterprise.IBackupRecord[]|null);

        /** BackupResponse continuationToken */
        continuationToken?: (Uint8Array|null);
    }

    /** Represents a BackupResponse. */
    class BackupResponse implements IBackupResponse {

        /**
         * Constructs a new BackupResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IBackupResponse);

        /** BackupResponse enterpriseEccPrivateKey. */
        public enterpriseEccPrivateKey: Uint8Array;

        /** BackupResponse users. */
        public users: Enterprise.IBackupUser[];

        /** BackupResponse records. */
        public records: Enterprise.IBackupRecord[];

        /** BackupResponse continuationToken. */
        public continuationToken: Uint8Array;

        /**
         * Creates a new BackupResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BackupResponse instance
         */
        public static create(properties?: Enterprise.IBackupResponse): Enterprise.BackupResponse;

        /**
         * Encodes the specified BackupResponse message. Does not implicitly {@link Enterprise.BackupResponse.verify|verify} messages.
         * @param message BackupResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IBackupResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BackupResponse message, length delimited. Does not implicitly {@link Enterprise.BackupResponse.verify|verify} messages.
         * @param message BackupResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IBackupResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BackupResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BackupResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.BackupResponse;

        /**
         * Decodes a BackupResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BackupResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.BackupResponse;

        /**
         * Verifies a BackupResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BackupResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BackupResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.BackupResponse;

        /**
         * Creates a plain object from a BackupResponse message. Also converts values to other types if specified.
         * @param message BackupResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.BackupResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BackupResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BackupFile. */
    interface IBackupFile {

        /** BackupFile user */
        user?: (string|null);

        /** BackupFile backupUid */
        backupUid?: (Uint8Array|null);

        /** BackupFile fileName */
        fileName?: (string|null);

        /** BackupFile created */
        created?: (number|Long|null);

        /** BackupFile downloadUrl */
        downloadUrl?: (string|null);
    }

    /** Represents a BackupFile. */
    class BackupFile implements IBackupFile {

        /**
         * Constructs a new BackupFile.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IBackupFile);

        /** BackupFile user. */
        public user: string;

        /** BackupFile backupUid. */
        public backupUid: Uint8Array;

        /** BackupFile fileName. */
        public fileName: string;

        /** BackupFile created. */
        public created: (number|Long);

        /** BackupFile downloadUrl. */
        public downloadUrl: string;

        /**
         * Creates a new BackupFile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BackupFile instance
         */
        public static create(properties?: Enterprise.IBackupFile): Enterprise.BackupFile;

        /**
         * Encodes the specified BackupFile message. Does not implicitly {@link Enterprise.BackupFile.verify|verify} messages.
         * @param message BackupFile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IBackupFile, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BackupFile message, length delimited. Does not implicitly {@link Enterprise.BackupFile.verify|verify} messages.
         * @param message BackupFile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IBackupFile, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BackupFile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BackupFile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.BackupFile;

        /**
         * Decodes a BackupFile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BackupFile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.BackupFile;

        /**
         * Verifies a BackupFile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BackupFile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BackupFile
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.BackupFile;

        /**
         * Creates a plain object from a BackupFile message. Also converts values to other types if specified.
         * @param message BackupFile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.BackupFile, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BackupFile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BackupsResponse. */
    interface IBackupsResponse {

        /** BackupsResponse files */
        files?: (Enterprise.IBackupFile[]|null);
    }

    /** Represents a BackupsResponse. */
    class BackupsResponse implements IBackupsResponse {

        /**
         * Constructs a new BackupsResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IBackupsResponse);

        /** BackupsResponse files. */
        public files: Enterprise.IBackupFile[];

        /**
         * Creates a new BackupsResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BackupsResponse instance
         */
        public static create(properties?: Enterprise.IBackupsResponse): Enterprise.BackupsResponse;

        /**
         * Encodes the specified BackupsResponse message. Does not implicitly {@link Enterprise.BackupsResponse.verify|verify} messages.
         * @param message BackupsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IBackupsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BackupsResponse message, length delimited. Does not implicitly {@link Enterprise.BackupsResponse.verify|verify} messages.
         * @param message BackupsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IBackupsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BackupsResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BackupsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.BackupsResponse;

        /**
         * Decodes a BackupsResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BackupsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.BackupsResponse;

        /**
         * Verifies a BackupsResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BackupsResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BackupsResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.BackupsResponse;

        /**
         * Creates a plain object from a BackupsResponse message. Also converts values to other types if specified.
         * @param message BackupsResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.BackupsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BackupsResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetEnterpriseDataKeysRequest. */
    interface IGetEnterpriseDataKeysRequest {

        /** GetEnterpriseDataKeysRequest roleId */
        roleId?: ((number|Long)[]|null);
    }

    /** Represents a GetEnterpriseDataKeysRequest. */
    class GetEnterpriseDataKeysRequest implements IGetEnterpriseDataKeysRequest {

        /**
         * Constructs a new GetEnterpriseDataKeysRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IGetEnterpriseDataKeysRequest);

        /** GetEnterpriseDataKeysRequest roleId. */
        public roleId: (number|Long)[];

        /**
         * Creates a new GetEnterpriseDataKeysRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetEnterpriseDataKeysRequest instance
         */
        public static create(properties?: Enterprise.IGetEnterpriseDataKeysRequest): Enterprise.GetEnterpriseDataKeysRequest;

        /**
         * Encodes the specified GetEnterpriseDataKeysRequest message. Does not implicitly {@link Enterprise.GetEnterpriseDataKeysRequest.verify|verify} messages.
         * @param message GetEnterpriseDataKeysRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IGetEnterpriseDataKeysRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetEnterpriseDataKeysRequest message, length delimited. Does not implicitly {@link Enterprise.GetEnterpriseDataKeysRequest.verify|verify} messages.
         * @param message GetEnterpriseDataKeysRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IGetEnterpriseDataKeysRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetEnterpriseDataKeysRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetEnterpriseDataKeysRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.GetEnterpriseDataKeysRequest;

        /**
         * Decodes a GetEnterpriseDataKeysRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetEnterpriseDataKeysRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.GetEnterpriseDataKeysRequest;

        /**
         * Verifies a GetEnterpriseDataKeysRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetEnterpriseDataKeysRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetEnterpriseDataKeysRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.GetEnterpriseDataKeysRequest;

        /**
         * Creates a plain object from a GetEnterpriseDataKeysRequest message. Also converts values to other types if specified.
         * @param message GetEnterpriseDataKeysRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.GetEnterpriseDataKeysRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetEnterpriseDataKeysRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetEnterpriseDataKeysResponse. */
    interface IGetEnterpriseDataKeysResponse {

        /** GetEnterpriseDataKeysResponse reEncryptedRoleKey */
        reEncryptedRoleKey?: (Enterprise.IReEncryptedRoleKey[]|null);

        /** GetEnterpriseDataKeysResponse roleKey */
        roleKey?: (Enterprise.IRoleKey[]|null);

        /** GetEnterpriseDataKeysResponse mspKey */
        mspKey?: (Enterprise.IMspKey|null);

        /** GetEnterpriseDataKeysResponse enterpriseKeys */
        enterpriseKeys?: (Enterprise.IEnterpriseKeys|null);

        /** GetEnterpriseDataKeysResponse treeKey */
        treeKey?: (Enterprise.ITreeKey|null);
    }

    /** Represents a GetEnterpriseDataKeysResponse. */
    class GetEnterpriseDataKeysResponse implements IGetEnterpriseDataKeysResponse {

        /**
         * Constructs a new GetEnterpriseDataKeysResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IGetEnterpriseDataKeysResponse);

        /** GetEnterpriseDataKeysResponse reEncryptedRoleKey. */
        public reEncryptedRoleKey: Enterprise.IReEncryptedRoleKey[];

        /** GetEnterpriseDataKeysResponse roleKey. */
        public roleKey: Enterprise.IRoleKey[];

        /** GetEnterpriseDataKeysResponse mspKey. */
        public mspKey?: (Enterprise.IMspKey|null);

        /** GetEnterpriseDataKeysResponse enterpriseKeys. */
        public enterpriseKeys?: (Enterprise.IEnterpriseKeys|null);

        /** GetEnterpriseDataKeysResponse treeKey. */
        public treeKey?: (Enterprise.ITreeKey|null);

        /**
         * Creates a new GetEnterpriseDataKeysResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetEnterpriseDataKeysResponse instance
         */
        public static create(properties?: Enterprise.IGetEnterpriseDataKeysResponse): Enterprise.GetEnterpriseDataKeysResponse;

        /**
         * Encodes the specified GetEnterpriseDataKeysResponse message. Does not implicitly {@link Enterprise.GetEnterpriseDataKeysResponse.verify|verify} messages.
         * @param message GetEnterpriseDataKeysResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IGetEnterpriseDataKeysResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetEnterpriseDataKeysResponse message, length delimited. Does not implicitly {@link Enterprise.GetEnterpriseDataKeysResponse.verify|verify} messages.
         * @param message GetEnterpriseDataKeysResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IGetEnterpriseDataKeysResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetEnterpriseDataKeysResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetEnterpriseDataKeysResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.GetEnterpriseDataKeysResponse;

        /**
         * Decodes a GetEnterpriseDataKeysResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetEnterpriseDataKeysResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.GetEnterpriseDataKeysResponse;

        /**
         * Verifies a GetEnterpriseDataKeysResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetEnterpriseDataKeysResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetEnterpriseDataKeysResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.GetEnterpriseDataKeysResponse;

        /**
         * Creates a plain object from a GetEnterpriseDataKeysResponse message. Also converts values to other types if specified.
         * @param message GetEnterpriseDataKeysResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.GetEnterpriseDataKeysResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetEnterpriseDataKeysResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RoleKey. */
    interface IRoleKey {

        /** RoleKey roleId */
        roleId?: (number|Long|null);

        /** RoleKey encryptedKey */
        encryptedKey?: (string|null);

        /** RoleKey keyType */
        keyType?: (Enterprise.EncryptedKeyType|null);
    }

    /** Represents a RoleKey. */
    class RoleKey implements IRoleKey {

        /**
         * Constructs a new RoleKey.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IRoleKey);

        /** RoleKey roleId. */
        public roleId: (number|Long);

        /** RoleKey encryptedKey. */
        public encryptedKey: string;

        /** RoleKey keyType. */
        public keyType: Enterprise.EncryptedKeyType;

        /**
         * Creates a new RoleKey instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RoleKey instance
         */
        public static create(properties?: Enterprise.IRoleKey): Enterprise.RoleKey;

        /**
         * Encodes the specified RoleKey message. Does not implicitly {@link Enterprise.RoleKey.verify|verify} messages.
         * @param message RoleKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IRoleKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RoleKey message, length delimited. Does not implicitly {@link Enterprise.RoleKey.verify|verify} messages.
         * @param message RoleKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IRoleKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RoleKey message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RoleKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.RoleKey;

        /**
         * Decodes a RoleKey message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RoleKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.RoleKey;

        /**
         * Verifies a RoleKey message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RoleKey message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RoleKey
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.RoleKey;

        /**
         * Creates a plain object from a RoleKey message. Also converts values to other types if specified.
         * @param message RoleKey
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.RoleKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RoleKey to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MspKey. */
    interface IMspKey {

        /** MspKey encryptedMspTreeKey */
        encryptedMspTreeKey?: (string|null);

        /** MspKey encryptedMspTreeKeyType */
        encryptedMspTreeKeyType?: (Enterprise.EncryptedKeyType|null);
    }

    /** Represents a MspKey. */
    class MspKey implements IMspKey {

        /**
         * Constructs a new MspKey.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IMspKey);

        /** MspKey encryptedMspTreeKey. */
        public encryptedMspTreeKey: string;

        /** MspKey encryptedMspTreeKeyType. */
        public encryptedMspTreeKeyType: Enterprise.EncryptedKeyType;

        /**
         * Creates a new MspKey instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MspKey instance
         */
        public static create(properties?: Enterprise.IMspKey): Enterprise.MspKey;

        /**
         * Encodes the specified MspKey message. Does not implicitly {@link Enterprise.MspKey.verify|verify} messages.
         * @param message MspKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IMspKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MspKey message, length delimited. Does not implicitly {@link Enterprise.MspKey.verify|verify} messages.
         * @param message MspKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IMspKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MspKey message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MspKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.MspKey;

        /**
         * Decodes a MspKey message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MspKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.MspKey;

        /**
         * Verifies a MspKey message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MspKey message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MspKey
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.MspKey;

        /**
         * Creates a plain object from a MspKey message. Also converts values to other types if specified.
         * @param message MspKey
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.MspKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MspKey to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** EncryptedKeyType enum. */
    enum EncryptedKeyType {
        KT_NO_KEY = 0,
        KT_ENCRYPTED_BY_DATA_KEY = 1,
        KT_ENCRYPTED_BY_PUBLIC_KEY = 2,
        KT_ENCRYPTED_BY_DATA_KEY_GCM = 3,
        KT_ENCRYPTED_BY_PUBLIC_KEY_ECC = 4
    }

    /** Properties of an EnterpriseKeys. */
    interface IEnterpriseKeys {

        /** EnterpriseKeys rsaPublicKey */
        rsaPublicKey?: (Uint8Array|null);

        /** EnterpriseKeys rsaEncryptedPrivateKey */
        rsaEncryptedPrivateKey?: (Uint8Array|null);

        /** EnterpriseKeys eccPublicKey */
        eccPublicKey?: (Uint8Array|null);

        /** EnterpriseKeys eccEncryptedPrivateKey */
        eccEncryptedPrivateKey?: (Uint8Array|null);
    }

    /** Represents an EnterpriseKeys. */
    class EnterpriseKeys implements IEnterpriseKeys {

        /**
         * Constructs a new EnterpriseKeys.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEnterpriseKeys);

        /** EnterpriseKeys rsaPublicKey. */
        public rsaPublicKey: Uint8Array;

        /** EnterpriseKeys rsaEncryptedPrivateKey. */
        public rsaEncryptedPrivateKey: Uint8Array;

        /** EnterpriseKeys eccPublicKey. */
        public eccPublicKey: Uint8Array;

        /** EnterpriseKeys eccEncryptedPrivateKey. */
        public eccEncryptedPrivateKey: Uint8Array;

        /**
         * Creates a new EnterpriseKeys instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseKeys instance
         */
        public static create(properties?: Enterprise.IEnterpriseKeys): Enterprise.EnterpriseKeys;

        /**
         * Encodes the specified EnterpriseKeys message. Does not implicitly {@link Enterprise.EnterpriseKeys.verify|verify} messages.
         * @param message EnterpriseKeys message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEnterpriseKeys, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseKeys message, length delimited. Does not implicitly {@link Enterprise.EnterpriseKeys.verify|verify} messages.
         * @param message EnterpriseKeys message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEnterpriseKeys, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseKeys message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseKeys
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EnterpriseKeys;

        /**
         * Decodes an EnterpriseKeys message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseKeys
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EnterpriseKeys;

        /**
         * Verifies an EnterpriseKeys message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseKeys message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseKeys
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EnterpriseKeys;

        /**
         * Creates a plain object from an EnterpriseKeys message. Also converts values to other types if specified.
         * @param message EnterpriseKeys
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EnterpriseKeys, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseKeys to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TreeKey. */
    interface ITreeKey {

        /** TreeKey treeKey */
        treeKey?: (string|null);

        /** TreeKey keyTypeId */
        keyTypeId?: (Enterprise.BackupKeyType|null);
    }

    /** Represents a TreeKey. */
    class TreeKey implements ITreeKey {

        /**
         * Constructs a new TreeKey.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ITreeKey);

        /** TreeKey treeKey. */
        public treeKey: string;

        /** TreeKey keyTypeId. */
        public keyTypeId: Enterprise.BackupKeyType;

        /**
         * Creates a new TreeKey instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TreeKey instance
         */
        public static create(properties?: Enterprise.ITreeKey): Enterprise.TreeKey;

        /**
         * Encodes the specified TreeKey message. Does not implicitly {@link Enterprise.TreeKey.verify|verify} messages.
         * @param message TreeKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ITreeKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TreeKey message, length delimited. Does not implicitly {@link Enterprise.TreeKey.verify|verify} messages.
         * @param message TreeKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ITreeKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TreeKey message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreeKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.TreeKey;

        /**
         * Decodes a TreeKey message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TreeKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.TreeKey;

        /**
         * Verifies a TreeKey message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TreeKey message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TreeKey
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.TreeKey;

        /**
         * Creates a plain object from a TreeKey message. Also converts values to other types if specified.
         * @param message TreeKey
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.TreeKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TreeKey to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedRecordResponse. */
    interface ISharedRecordResponse {

        /** SharedRecordResponse events */
        events?: (Enterprise.ISharedRecordEvent[]|null);
    }

    /** Represents a SharedRecordResponse. */
    class SharedRecordResponse implements ISharedRecordResponse {

        /**
         * Constructs a new SharedRecordResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ISharedRecordResponse);

        /** SharedRecordResponse events. */
        public events: Enterprise.ISharedRecordEvent[];

        /**
         * Creates a new SharedRecordResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedRecordResponse instance
         */
        public static create(properties?: Enterprise.ISharedRecordResponse): Enterprise.SharedRecordResponse;

        /**
         * Encodes the specified SharedRecordResponse message. Does not implicitly {@link Enterprise.SharedRecordResponse.verify|verify} messages.
         * @param message SharedRecordResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ISharedRecordResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedRecordResponse message, length delimited. Does not implicitly {@link Enterprise.SharedRecordResponse.verify|verify} messages.
         * @param message SharedRecordResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ISharedRecordResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedRecordResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedRecordResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.SharedRecordResponse;

        /**
         * Decodes a SharedRecordResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedRecordResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.SharedRecordResponse;

        /**
         * Verifies a SharedRecordResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedRecordResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedRecordResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.SharedRecordResponse;

        /**
         * Creates a plain object from a SharedRecordResponse message. Also converts values to other types if specified.
         * @param message SharedRecordResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.SharedRecordResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedRecordResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedRecordEvent. */
    interface ISharedRecordEvent {

        /** SharedRecordEvent recordUid */
        recordUid?: (Uint8Array|null);

        /** SharedRecordEvent userName */
        userName?: (string|null);

        /** SharedRecordEvent canEdit */
        canEdit?: (boolean|null);

        /** SharedRecordEvent canReshare */
        canReshare?: (boolean|null);

        /** SharedRecordEvent shareFrom */
        shareFrom?: (number|null);
    }

    /** Represents a SharedRecordEvent. */
    class SharedRecordEvent implements ISharedRecordEvent {

        /**
         * Constructs a new SharedRecordEvent.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ISharedRecordEvent);

        /** SharedRecordEvent recordUid. */
        public recordUid: Uint8Array;

        /** SharedRecordEvent userName. */
        public userName: string;

        /** SharedRecordEvent canEdit. */
        public canEdit: boolean;

        /** SharedRecordEvent canReshare. */
        public canReshare: boolean;

        /** SharedRecordEvent shareFrom. */
        public shareFrom: number;

        /**
         * Creates a new SharedRecordEvent instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedRecordEvent instance
         */
        public static create(properties?: Enterprise.ISharedRecordEvent): Enterprise.SharedRecordEvent;

        /**
         * Encodes the specified SharedRecordEvent message. Does not implicitly {@link Enterprise.SharedRecordEvent.verify|verify} messages.
         * @param message SharedRecordEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ISharedRecordEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedRecordEvent message, length delimited. Does not implicitly {@link Enterprise.SharedRecordEvent.verify|verify} messages.
         * @param message SharedRecordEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ISharedRecordEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedRecordEvent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedRecordEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.SharedRecordEvent;

        /**
         * Decodes a SharedRecordEvent message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedRecordEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.SharedRecordEvent;

        /**
         * Verifies a SharedRecordEvent message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedRecordEvent message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedRecordEvent
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.SharedRecordEvent;

        /**
         * Creates a plain object from a SharedRecordEvent message. Also converts values to other types if specified.
         * @param message SharedRecordEvent
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.SharedRecordEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedRecordEvent to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** EnterpriseFlagType enum. */
    enum EnterpriseFlagType {
        INVALID = 0,
        ALLOW_PERSONAL_LICENSE = 1,
        SPECIAL_PROVISIONING = 2,
        RECORD_TYPES = 3,
        SECRETS_MANAGER = 4,
        ENTERPRISE_LOCKED = 5
    }

    /** Properties of a SetRestrictVisibilityRequest. */
    interface ISetRestrictVisibilityRequest {

        /** SetRestrictVisibilityRequest nodeId */
        nodeId?: (number|Long|null);
    }

    /** Represents a SetRestrictVisibilityRequest. */
    class SetRestrictVisibilityRequest implements ISetRestrictVisibilityRequest {

        /**
         * Constructs a new SetRestrictVisibilityRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ISetRestrictVisibilityRequest);

        /** SetRestrictVisibilityRequest nodeId. */
        public nodeId: (number|Long);

        /**
         * Creates a new SetRestrictVisibilityRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SetRestrictVisibilityRequest instance
         */
        public static create(properties?: Enterprise.ISetRestrictVisibilityRequest): Enterprise.SetRestrictVisibilityRequest;

        /**
         * Encodes the specified SetRestrictVisibilityRequest message. Does not implicitly {@link Enterprise.SetRestrictVisibilityRequest.verify|verify} messages.
         * @param message SetRestrictVisibilityRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ISetRestrictVisibilityRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SetRestrictVisibilityRequest message, length delimited. Does not implicitly {@link Enterprise.SetRestrictVisibilityRequest.verify|verify} messages.
         * @param message SetRestrictVisibilityRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ISetRestrictVisibilityRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SetRestrictVisibilityRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SetRestrictVisibilityRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.SetRestrictVisibilityRequest;

        /**
         * Decodes a SetRestrictVisibilityRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SetRestrictVisibilityRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.SetRestrictVisibilityRequest;

        /**
         * Verifies a SetRestrictVisibilityRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SetRestrictVisibilityRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SetRestrictVisibilityRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.SetRestrictVisibilityRequest;

        /**
         * Creates a plain object from a SetRestrictVisibilityRequest message. Also converts values to other types if specified.
         * @param message SetRestrictVisibilityRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.SetRestrictVisibilityRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SetRestrictVisibilityRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserAddRequest. */
    interface IUserAddRequest {

        /** UserAddRequest enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** UserAddRequest nodeId */
        nodeId?: (number|Long|null);

        /** UserAddRequest encryptedData */
        encryptedData?: (Uint8Array|null);

        /** UserAddRequest keyType */
        keyType?: (Enterprise.EncryptedKeyType|null);

        /** UserAddRequest fullName */
        fullName?: (string|null);

        /** UserAddRequest jobTitle */
        jobTitle?: (string|null);

        /** UserAddRequest email */
        email?: (string|null);

        /** UserAddRequest suppressEmailInvite */
        suppressEmailInvite?: (boolean|null);
    }

    /** Represents a UserAddRequest. */
    class UserAddRequest implements IUserAddRequest {

        /**
         * Constructs a new UserAddRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IUserAddRequest);

        /** UserAddRequest enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** UserAddRequest nodeId. */
        public nodeId: (number|Long);

        /** UserAddRequest encryptedData. */
        public encryptedData: Uint8Array;

        /** UserAddRequest keyType. */
        public keyType: Enterprise.EncryptedKeyType;

        /** UserAddRequest fullName. */
        public fullName: string;

        /** UserAddRequest jobTitle. */
        public jobTitle: string;

        /** UserAddRequest email. */
        public email: string;

        /** UserAddRequest suppressEmailInvite. */
        public suppressEmailInvite: boolean;

        /**
         * Creates a new UserAddRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserAddRequest instance
         */
        public static create(properties?: Enterprise.IUserAddRequest): Enterprise.UserAddRequest;

        /**
         * Encodes the specified UserAddRequest message. Does not implicitly {@link Enterprise.UserAddRequest.verify|verify} messages.
         * @param message UserAddRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IUserAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserAddRequest message, length delimited. Does not implicitly {@link Enterprise.UserAddRequest.verify|verify} messages.
         * @param message UserAddRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IUserAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserAddRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserAddRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.UserAddRequest;

        /**
         * Decodes a UserAddRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserAddRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.UserAddRequest;

        /**
         * Verifies a UserAddRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserAddRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserAddRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.UserAddRequest;

        /**
         * Creates a plain object from a UserAddRequest message. Also converts values to other types if specified.
         * @param message UserAddRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.UserAddRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserAddRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserUpdateRequest. */
    interface IUserUpdateRequest {

        /** UserUpdateRequest users */
        users?: (Enterprise.IUserUpdate[]|null);
    }

    /** Represents a UserUpdateRequest. */
    class UserUpdateRequest implements IUserUpdateRequest {

        /**
         * Constructs a new UserUpdateRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IUserUpdateRequest);

        /** UserUpdateRequest users. */
        public users: Enterprise.IUserUpdate[];

        /**
         * Creates a new UserUpdateRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserUpdateRequest instance
         */
        public static create(properties?: Enterprise.IUserUpdateRequest): Enterprise.UserUpdateRequest;

        /**
         * Encodes the specified UserUpdateRequest message. Does not implicitly {@link Enterprise.UserUpdateRequest.verify|verify} messages.
         * @param message UserUpdateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IUserUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserUpdateRequest message, length delimited. Does not implicitly {@link Enterprise.UserUpdateRequest.verify|verify} messages.
         * @param message UserUpdateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IUserUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserUpdateRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserUpdateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.UserUpdateRequest;

        /**
         * Decodes a UserUpdateRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserUpdateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.UserUpdateRequest;

        /**
         * Verifies a UserUpdateRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserUpdateRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserUpdateRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.UserUpdateRequest;

        /**
         * Creates a plain object from a UserUpdateRequest message. Also converts values to other types if specified.
         * @param message UserUpdateRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.UserUpdateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserUpdateRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserUpdate. */
    interface IUserUpdate {

        /** UserUpdate enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** UserUpdate nodeId */
        nodeId?: (number|Long|null);

        /** UserUpdate encryptedData */
        encryptedData?: (Uint8Array|null);

        /** UserUpdate keyType */
        keyType?: (Enterprise.EncryptedKeyType|null);

        /** UserUpdate fullName */
        fullName?: (string|null);

        /** UserUpdate jobTitle */
        jobTitle?: (string|null);

        /** UserUpdate email */
        email?: (string|null);
    }

    /** Represents a UserUpdate. */
    class UserUpdate implements IUserUpdate {

        /**
         * Constructs a new UserUpdate.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IUserUpdate);

        /** UserUpdate enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** UserUpdate nodeId. */
        public nodeId: (number|Long);

        /** UserUpdate encryptedData. */
        public encryptedData: Uint8Array;

        /** UserUpdate keyType. */
        public keyType: Enterprise.EncryptedKeyType;

        /** UserUpdate fullName. */
        public fullName: string;

        /** UserUpdate jobTitle. */
        public jobTitle: string;

        /** UserUpdate email. */
        public email: string;

        /**
         * Creates a new UserUpdate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserUpdate instance
         */
        public static create(properties?: Enterprise.IUserUpdate): Enterprise.UserUpdate;

        /**
         * Encodes the specified UserUpdate message. Does not implicitly {@link Enterprise.UserUpdate.verify|verify} messages.
         * @param message UserUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IUserUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserUpdate message, length delimited. Does not implicitly {@link Enterprise.UserUpdate.verify|verify} messages.
         * @param message UserUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IUserUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserUpdate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.UserUpdate;

        /**
         * Decodes a UserUpdate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.UserUpdate;

        /**
         * Verifies a UserUpdate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserUpdate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserUpdate
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.UserUpdate;

        /**
         * Creates a plain object from a UserUpdate message. Also converts values to other types if specified.
         * @param message UserUpdate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.UserUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserUpdate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserUpdateResponse. */
    interface IUserUpdateResponse {

        /** UserUpdateResponse users */
        users?: (Enterprise.IUserUpdateResult[]|null);
    }

    /** Represents a UserUpdateResponse. */
    class UserUpdateResponse implements IUserUpdateResponse {

        /**
         * Constructs a new UserUpdateResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IUserUpdateResponse);

        /** UserUpdateResponse users. */
        public users: Enterprise.IUserUpdateResult[];

        /**
         * Creates a new UserUpdateResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserUpdateResponse instance
         */
        public static create(properties?: Enterprise.IUserUpdateResponse): Enterprise.UserUpdateResponse;

        /**
         * Encodes the specified UserUpdateResponse message. Does not implicitly {@link Enterprise.UserUpdateResponse.verify|verify} messages.
         * @param message UserUpdateResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IUserUpdateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserUpdateResponse message, length delimited. Does not implicitly {@link Enterprise.UserUpdateResponse.verify|verify} messages.
         * @param message UserUpdateResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IUserUpdateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserUpdateResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserUpdateResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.UserUpdateResponse;

        /**
         * Decodes a UserUpdateResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserUpdateResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.UserUpdateResponse;

        /**
         * Verifies a UserUpdateResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserUpdateResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserUpdateResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.UserUpdateResponse;

        /**
         * Creates a plain object from a UserUpdateResponse message. Also converts values to other types if specified.
         * @param message UserUpdateResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.UserUpdateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserUpdateResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserUpdateResult. */
    interface IUserUpdateResult {

        /** UserUpdateResult enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** UserUpdateResult status */
        status?: (Enterprise.UserUpdateStatus|null);
    }

    /** Represents a UserUpdateResult. */
    class UserUpdateResult implements IUserUpdateResult {

        /**
         * Constructs a new UserUpdateResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IUserUpdateResult);

        /** UserUpdateResult enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** UserUpdateResult status. */
        public status: Enterprise.UserUpdateStatus;

        /**
         * Creates a new UserUpdateResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserUpdateResult instance
         */
        public static create(properties?: Enterprise.IUserUpdateResult): Enterprise.UserUpdateResult;

        /**
         * Encodes the specified UserUpdateResult message. Does not implicitly {@link Enterprise.UserUpdateResult.verify|verify} messages.
         * @param message UserUpdateResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IUserUpdateResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserUpdateResult message, length delimited. Does not implicitly {@link Enterprise.UserUpdateResult.verify|verify} messages.
         * @param message UserUpdateResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IUserUpdateResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserUpdateResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserUpdateResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.UserUpdateResult;

        /**
         * Decodes a UserUpdateResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserUpdateResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.UserUpdateResult;

        /**
         * Verifies a UserUpdateResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserUpdateResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserUpdateResult
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.UserUpdateResult;

        /**
         * Creates a plain object from a UserUpdateResult message. Also converts values to other types if specified.
         * @param message UserUpdateResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.UserUpdateResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserUpdateResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** UserUpdateStatus enum. */
    enum UserUpdateStatus {
        USER_UPDATE_OK = 0,
        USER_UPDATE_ACCESS_DENIED = 1
    }

    /** Properties of a ComplianceRecordOwnersRequest. */
    interface IComplianceRecordOwnersRequest {

        /** ComplianceRecordOwnersRequest nodeIds */
        nodeIds?: ((number|Long)[]|null);

        /** ComplianceRecordOwnersRequest includeNonShared */
        includeNonShared?: (boolean|null);
    }

    /** Represents a ComplianceRecordOwnersRequest. */
    class ComplianceRecordOwnersRequest implements IComplianceRecordOwnersRequest {

        /**
         * Constructs a new ComplianceRecordOwnersRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IComplianceRecordOwnersRequest);

        /** ComplianceRecordOwnersRequest nodeIds. */
        public nodeIds: (number|Long)[];

        /** ComplianceRecordOwnersRequest includeNonShared. */
        public includeNonShared: boolean;

        /**
         * Creates a new ComplianceRecordOwnersRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ComplianceRecordOwnersRequest instance
         */
        public static create(properties?: Enterprise.IComplianceRecordOwnersRequest): Enterprise.ComplianceRecordOwnersRequest;

        /**
         * Encodes the specified ComplianceRecordOwnersRequest message. Does not implicitly {@link Enterprise.ComplianceRecordOwnersRequest.verify|verify} messages.
         * @param message ComplianceRecordOwnersRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IComplianceRecordOwnersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ComplianceRecordOwnersRequest message, length delimited. Does not implicitly {@link Enterprise.ComplianceRecordOwnersRequest.verify|verify} messages.
         * @param message ComplianceRecordOwnersRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IComplianceRecordOwnersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ComplianceRecordOwnersRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ComplianceRecordOwnersRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ComplianceRecordOwnersRequest;

        /**
         * Decodes a ComplianceRecordOwnersRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ComplianceRecordOwnersRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ComplianceRecordOwnersRequest;

        /**
         * Verifies a ComplianceRecordOwnersRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ComplianceRecordOwnersRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ComplianceRecordOwnersRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ComplianceRecordOwnersRequest;

        /**
         * Creates a plain object from a ComplianceRecordOwnersRequest message. Also converts values to other types if specified.
         * @param message ComplianceRecordOwnersRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ComplianceRecordOwnersRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ComplianceRecordOwnersRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ComplianceRecordOwnersResponse. */
    interface IComplianceRecordOwnersResponse {

        /** ComplianceRecordOwnersResponse recordOwners */
        recordOwners?: (Enterprise.IRecordOwner[]|null);
    }

    /** Represents a ComplianceRecordOwnersResponse. */
    class ComplianceRecordOwnersResponse implements IComplianceRecordOwnersResponse {

        /**
         * Constructs a new ComplianceRecordOwnersResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IComplianceRecordOwnersResponse);

        /** ComplianceRecordOwnersResponse recordOwners. */
        public recordOwners: Enterprise.IRecordOwner[];

        /**
         * Creates a new ComplianceRecordOwnersResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ComplianceRecordOwnersResponse instance
         */
        public static create(properties?: Enterprise.IComplianceRecordOwnersResponse): Enterprise.ComplianceRecordOwnersResponse;

        /**
         * Encodes the specified ComplianceRecordOwnersResponse message. Does not implicitly {@link Enterprise.ComplianceRecordOwnersResponse.verify|verify} messages.
         * @param message ComplianceRecordOwnersResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IComplianceRecordOwnersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ComplianceRecordOwnersResponse message, length delimited. Does not implicitly {@link Enterprise.ComplianceRecordOwnersResponse.verify|verify} messages.
         * @param message ComplianceRecordOwnersResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IComplianceRecordOwnersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ComplianceRecordOwnersResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ComplianceRecordOwnersResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ComplianceRecordOwnersResponse;

        /**
         * Decodes a ComplianceRecordOwnersResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ComplianceRecordOwnersResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ComplianceRecordOwnersResponse;

        /**
         * Verifies a ComplianceRecordOwnersResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ComplianceRecordOwnersResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ComplianceRecordOwnersResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ComplianceRecordOwnersResponse;

        /**
         * Creates a plain object from a ComplianceRecordOwnersResponse message. Also converts values to other types if specified.
         * @param message ComplianceRecordOwnersResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ComplianceRecordOwnersResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ComplianceRecordOwnersResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordOwner. */
    interface IRecordOwner {

        /** RecordOwner enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** RecordOwner shared */
        shared?: (boolean|null);
    }

    /** Represents a RecordOwner. */
    class RecordOwner implements IRecordOwner {

        /**
         * Constructs a new RecordOwner.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IRecordOwner);

        /** RecordOwner enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** RecordOwner shared. */
        public shared: boolean;

        /**
         * Creates a new RecordOwner instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordOwner instance
         */
        public static create(properties?: Enterprise.IRecordOwner): Enterprise.RecordOwner;

        /**
         * Encodes the specified RecordOwner message. Does not implicitly {@link Enterprise.RecordOwner.verify|verify} messages.
         * @param message RecordOwner message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IRecordOwner, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordOwner message, length delimited. Does not implicitly {@link Enterprise.RecordOwner.verify|verify} messages.
         * @param message RecordOwner message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IRecordOwner, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordOwner message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordOwner
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.RecordOwner;

        /**
         * Decodes a RecordOwner message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordOwner
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.RecordOwner;

        /**
         * Verifies a RecordOwner message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordOwner message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordOwner
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.RecordOwner;

        /**
         * Creates a plain object from a RecordOwner message. Also converts values to other types if specified.
         * @param message RecordOwner
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.RecordOwner, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordOwner to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PreliminaryComplianceDataRequest. */
    interface IPreliminaryComplianceDataRequest {

        /** PreliminaryComplianceDataRequest enterpriseUserIds */
        enterpriseUserIds?: ((number|Long)[]|null);

        /** PreliminaryComplianceDataRequest includeNonShared */
        includeNonShared?: (boolean|null);

        /** PreliminaryComplianceDataRequest continuationToken */
        continuationToken?: (Uint8Array|null);

        /** PreliminaryComplianceDataRequest includeTotalMatchingRecordsInFirstResponse */
        includeTotalMatchingRecordsInFirstResponse?: (boolean|null);
    }

    /** Represents a PreliminaryComplianceDataRequest. */
    class PreliminaryComplianceDataRequest implements IPreliminaryComplianceDataRequest {

        /**
         * Constructs a new PreliminaryComplianceDataRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IPreliminaryComplianceDataRequest);

        /** PreliminaryComplianceDataRequest enterpriseUserIds. */
        public enterpriseUserIds: (number|Long)[];

        /** PreliminaryComplianceDataRequest includeNonShared. */
        public includeNonShared: boolean;

        /** PreliminaryComplianceDataRequest continuationToken. */
        public continuationToken: Uint8Array;

        /** PreliminaryComplianceDataRequest includeTotalMatchingRecordsInFirstResponse. */
        public includeTotalMatchingRecordsInFirstResponse: boolean;

        /**
         * Creates a new PreliminaryComplianceDataRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PreliminaryComplianceDataRequest instance
         */
        public static create(properties?: Enterprise.IPreliminaryComplianceDataRequest): Enterprise.PreliminaryComplianceDataRequest;

        /**
         * Encodes the specified PreliminaryComplianceDataRequest message. Does not implicitly {@link Enterprise.PreliminaryComplianceDataRequest.verify|verify} messages.
         * @param message PreliminaryComplianceDataRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IPreliminaryComplianceDataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PreliminaryComplianceDataRequest message, length delimited. Does not implicitly {@link Enterprise.PreliminaryComplianceDataRequest.verify|verify} messages.
         * @param message PreliminaryComplianceDataRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IPreliminaryComplianceDataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PreliminaryComplianceDataRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PreliminaryComplianceDataRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.PreliminaryComplianceDataRequest;

        /**
         * Decodes a PreliminaryComplianceDataRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PreliminaryComplianceDataRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.PreliminaryComplianceDataRequest;

        /**
         * Verifies a PreliminaryComplianceDataRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PreliminaryComplianceDataRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PreliminaryComplianceDataRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.PreliminaryComplianceDataRequest;

        /**
         * Creates a plain object from a PreliminaryComplianceDataRequest message. Also converts values to other types if specified.
         * @param message PreliminaryComplianceDataRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.PreliminaryComplianceDataRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PreliminaryComplianceDataRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PreliminaryComplianceDataResponse. */
    interface IPreliminaryComplianceDataResponse {

        /** PreliminaryComplianceDataResponse auditUserData */
        auditUserData?: (Enterprise.IAuditUserData[]|null);

        /** PreliminaryComplianceDataResponse continuationToken */
        continuationToken?: (Uint8Array|null);

        /** PreliminaryComplianceDataResponse hasMore */
        hasMore?: (boolean|null);

        /** PreliminaryComplianceDataResponse totalMatchingRecords */
        totalMatchingRecords?: (number|null);
    }

    /** Represents a PreliminaryComplianceDataResponse. */
    class PreliminaryComplianceDataResponse implements IPreliminaryComplianceDataResponse {

        /**
         * Constructs a new PreliminaryComplianceDataResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IPreliminaryComplianceDataResponse);

        /** PreliminaryComplianceDataResponse auditUserData. */
        public auditUserData: Enterprise.IAuditUserData[];

        /** PreliminaryComplianceDataResponse continuationToken. */
        public continuationToken: Uint8Array;

        /** PreliminaryComplianceDataResponse hasMore. */
        public hasMore: boolean;

        /** PreliminaryComplianceDataResponse totalMatchingRecords. */
        public totalMatchingRecords: number;

        /**
         * Creates a new PreliminaryComplianceDataResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PreliminaryComplianceDataResponse instance
         */
        public static create(properties?: Enterprise.IPreliminaryComplianceDataResponse): Enterprise.PreliminaryComplianceDataResponse;

        /**
         * Encodes the specified PreliminaryComplianceDataResponse message. Does not implicitly {@link Enterprise.PreliminaryComplianceDataResponse.verify|verify} messages.
         * @param message PreliminaryComplianceDataResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IPreliminaryComplianceDataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PreliminaryComplianceDataResponse message, length delimited. Does not implicitly {@link Enterprise.PreliminaryComplianceDataResponse.verify|verify} messages.
         * @param message PreliminaryComplianceDataResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IPreliminaryComplianceDataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PreliminaryComplianceDataResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PreliminaryComplianceDataResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.PreliminaryComplianceDataResponse;

        /**
         * Decodes a PreliminaryComplianceDataResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PreliminaryComplianceDataResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.PreliminaryComplianceDataResponse;

        /**
         * Verifies a PreliminaryComplianceDataResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PreliminaryComplianceDataResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PreliminaryComplianceDataResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.PreliminaryComplianceDataResponse;

        /**
         * Creates a plain object from a PreliminaryComplianceDataResponse message. Also converts values to other types if specified.
         * @param message PreliminaryComplianceDataResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.PreliminaryComplianceDataResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PreliminaryComplianceDataResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AuditUserRecord. */
    interface IAuditUserRecord {

        /** AuditUserRecord recordUid */
        recordUid?: (Uint8Array|null);

        /** AuditUserRecord encryptedData */
        encryptedData?: (Uint8Array|null);

        /** AuditUserRecord shared */
        shared?: (boolean|null);
    }

    /** Represents an AuditUserRecord. */
    class AuditUserRecord implements IAuditUserRecord {

        /**
         * Constructs a new AuditUserRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IAuditUserRecord);

        /** AuditUserRecord recordUid. */
        public recordUid: Uint8Array;

        /** AuditUserRecord encryptedData. */
        public encryptedData: Uint8Array;

        /** AuditUserRecord shared. */
        public shared: boolean;

        /**
         * Creates a new AuditUserRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AuditUserRecord instance
         */
        public static create(properties?: Enterprise.IAuditUserRecord): Enterprise.AuditUserRecord;

        /**
         * Encodes the specified AuditUserRecord message. Does not implicitly {@link Enterprise.AuditUserRecord.verify|verify} messages.
         * @param message AuditUserRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IAuditUserRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AuditUserRecord message, length delimited. Does not implicitly {@link Enterprise.AuditUserRecord.verify|verify} messages.
         * @param message AuditUserRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IAuditUserRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AuditUserRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AuditUserRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.AuditUserRecord;

        /**
         * Decodes an AuditUserRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AuditUserRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.AuditUserRecord;

        /**
         * Verifies an AuditUserRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AuditUserRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AuditUserRecord
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.AuditUserRecord;

        /**
         * Creates a plain object from an AuditUserRecord message. Also converts values to other types if specified.
         * @param message AuditUserRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.AuditUserRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AuditUserRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** AuditUserStatus enum. */
    enum AuditUserStatus {
        OK = 0,
        ACCESS_DENIED = 1,
        NO_LONGER_IN_ENTERPRISE = 2
    }

    /** Properties of an AuditUserData. */
    interface IAuditUserData {

        /** AuditUserData enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** AuditUserData auditUserRecords */
        auditUserRecords?: (Enterprise.IAuditUserRecord[]|null);

        /** AuditUserData status */
        status?: (Enterprise.AuditUserStatus|null);
    }

    /** Represents an AuditUserData. */
    class AuditUserData implements IAuditUserData {

        /**
         * Constructs a new AuditUserData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IAuditUserData);

        /** AuditUserData enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** AuditUserData auditUserRecords. */
        public auditUserRecords: Enterprise.IAuditUserRecord[];

        /** AuditUserData status. */
        public status: Enterprise.AuditUserStatus;

        /**
         * Creates a new AuditUserData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AuditUserData instance
         */
        public static create(properties?: Enterprise.IAuditUserData): Enterprise.AuditUserData;

        /**
         * Encodes the specified AuditUserData message. Does not implicitly {@link Enterprise.AuditUserData.verify|verify} messages.
         * @param message AuditUserData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IAuditUserData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AuditUserData message, length delimited. Does not implicitly {@link Enterprise.AuditUserData.verify|verify} messages.
         * @param message AuditUserData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IAuditUserData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AuditUserData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AuditUserData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.AuditUserData;

        /**
         * Decodes an AuditUserData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AuditUserData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.AuditUserData;

        /**
         * Verifies an AuditUserData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AuditUserData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AuditUserData
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.AuditUserData;

        /**
         * Creates a plain object from an AuditUserData message. Also converts values to other types if specified.
         * @param message AuditUserData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.AuditUserData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AuditUserData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ComplianceReportFilters. */
    interface IComplianceReportFilters {

        /** ComplianceReportFilters recordTitles */
        recordTitles?: (string[]|null);

        /** ComplianceReportFilters recordUids */
        recordUids?: (Uint8Array[]|null);

        /** ComplianceReportFilters jobTitles */
        jobTitles?: ((number|Long)[]|null);

        /** ComplianceReportFilters urls */
        urls?: (string[]|null);

        /** ComplianceReportFilters enterpriseUserIds */
        enterpriseUserIds?: ((number|Long)[]|null);
    }

    /** Represents a ComplianceReportFilters. */
    class ComplianceReportFilters implements IComplianceReportFilters {

        /**
         * Constructs a new ComplianceReportFilters.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IComplianceReportFilters);

        /** ComplianceReportFilters recordTitles. */
        public recordTitles: string[];

        /** ComplianceReportFilters recordUids. */
        public recordUids: Uint8Array[];

        /** ComplianceReportFilters jobTitles. */
        public jobTitles: (number|Long)[];

        /** ComplianceReportFilters urls. */
        public urls: string[];

        /** ComplianceReportFilters enterpriseUserIds. */
        public enterpriseUserIds: (number|Long)[];

        /**
         * Creates a new ComplianceReportFilters instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ComplianceReportFilters instance
         */
        public static create(properties?: Enterprise.IComplianceReportFilters): Enterprise.ComplianceReportFilters;

        /**
         * Encodes the specified ComplianceReportFilters message. Does not implicitly {@link Enterprise.ComplianceReportFilters.verify|verify} messages.
         * @param message ComplianceReportFilters message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IComplianceReportFilters, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ComplianceReportFilters message, length delimited. Does not implicitly {@link Enterprise.ComplianceReportFilters.verify|verify} messages.
         * @param message ComplianceReportFilters message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IComplianceReportFilters, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ComplianceReportFilters message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ComplianceReportFilters
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ComplianceReportFilters;

        /**
         * Decodes a ComplianceReportFilters message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ComplianceReportFilters
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ComplianceReportFilters;

        /**
         * Verifies a ComplianceReportFilters message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ComplianceReportFilters message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ComplianceReportFilters
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ComplianceReportFilters;

        /**
         * Creates a plain object from a ComplianceReportFilters message. Also converts values to other types if specified.
         * @param message ComplianceReportFilters
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ComplianceReportFilters, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ComplianceReportFilters to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ComplianceReportRequest. */
    interface IComplianceReportRequest {

        /** ComplianceReportRequest complianceReportRun */
        complianceReportRun?: (Enterprise.IComplianceReportRun|null);

        /** ComplianceReportRequest reportName */
        reportName?: (string|null);

        /** ComplianceReportRequest saveReport */
        saveReport?: (boolean|null);
    }

    /** Represents a ComplianceReportRequest. */
    class ComplianceReportRequest implements IComplianceReportRequest {

        /**
         * Constructs a new ComplianceReportRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IComplianceReportRequest);

        /** ComplianceReportRequest complianceReportRun. */
        public complianceReportRun?: (Enterprise.IComplianceReportRun|null);

        /** ComplianceReportRequest reportName. */
        public reportName: string;

        /** ComplianceReportRequest saveReport. */
        public saveReport: boolean;

        /**
         * Creates a new ComplianceReportRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ComplianceReportRequest instance
         */
        public static create(properties?: Enterprise.IComplianceReportRequest): Enterprise.ComplianceReportRequest;

        /**
         * Encodes the specified ComplianceReportRequest message. Does not implicitly {@link Enterprise.ComplianceReportRequest.verify|verify} messages.
         * @param message ComplianceReportRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IComplianceReportRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ComplianceReportRequest message, length delimited. Does not implicitly {@link Enterprise.ComplianceReportRequest.verify|verify} messages.
         * @param message ComplianceReportRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IComplianceReportRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ComplianceReportRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ComplianceReportRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ComplianceReportRequest;

        /**
         * Decodes a ComplianceReportRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ComplianceReportRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ComplianceReportRequest;

        /**
         * Verifies a ComplianceReportRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ComplianceReportRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ComplianceReportRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ComplianceReportRequest;

        /**
         * Creates a plain object from a ComplianceReportRequest message. Also converts values to other types if specified.
         * @param message ComplianceReportRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ComplianceReportRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ComplianceReportRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ComplianceReportRun. */
    interface IComplianceReportRun {

        /** ComplianceReportRun reportCriteriaAndFilter */
        reportCriteriaAndFilter?: (Enterprise.IComplianceReportCriteriaAndFilter|null);

        /** ComplianceReportRun users */
        users?: ((number|Long)[]|null);

        /** ComplianceReportRun records */
        records?: (Uint8Array[]|null);
    }

    /** Represents a ComplianceReportRun. */
    class ComplianceReportRun implements IComplianceReportRun {

        /**
         * Constructs a new ComplianceReportRun.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IComplianceReportRun);

        /** ComplianceReportRun reportCriteriaAndFilter. */
        public reportCriteriaAndFilter?: (Enterprise.IComplianceReportCriteriaAndFilter|null);

        /** ComplianceReportRun users. */
        public users: (number|Long)[];

        /** ComplianceReportRun records. */
        public records: Uint8Array[];

        /**
         * Creates a new ComplianceReportRun instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ComplianceReportRun instance
         */
        public static create(properties?: Enterprise.IComplianceReportRun): Enterprise.ComplianceReportRun;

        /**
         * Encodes the specified ComplianceReportRun message. Does not implicitly {@link Enterprise.ComplianceReportRun.verify|verify} messages.
         * @param message ComplianceReportRun message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IComplianceReportRun, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ComplianceReportRun message, length delimited. Does not implicitly {@link Enterprise.ComplianceReportRun.verify|verify} messages.
         * @param message ComplianceReportRun message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IComplianceReportRun, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ComplianceReportRun message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ComplianceReportRun
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ComplianceReportRun;

        /**
         * Decodes a ComplianceReportRun message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ComplianceReportRun
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ComplianceReportRun;

        /**
         * Verifies a ComplianceReportRun message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ComplianceReportRun message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ComplianceReportRun
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ComplianceReportRun;

        /**
         * Creates a plain object from a ComplianceReportRun message. Also converts values to other types if specified.
         * @param message ComplianceReportRun
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ComplianceReportRun, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ComplianceReportRun to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ComplianceReportCriteriaAndFilter. */
    interface IComplianceReportCriteriaAndFilter {

        /** ComplianceReportCriteriaAndFilter nodeId */
        nodeId?: (number|Long|null);

        /** ComplianceReportCriteriaAndFilter criteriaUid */
        criteriaUid?: (Uint8Array|null);

        /** ComplianceReportCriteriaAndFilter criteriaName */
        criteriaName?: (string|null);

        /** ComplianceReportCriteriaAndFilter criteria */
        criteria?: (Enterprise.IComplianceReportCriteria|null);

        /** ComplianceReportCriteriaAndFilter filters */
        filters?: (Enterprise.IComplianceReportFilter[]|null);

        /** ComplianceReportCriteriaAndFilter lastModified */
        lastModified?: (number|Long|null);

        /** ComplianceReportCriteriaAndFilter nodeEncryptedData */
        nodeEncryptedData?: (Uint8Array|null);
    }

    /** Represents a ComplianceReportCriteriaAndFilter. */
    class ComplianceReportCriteriaAndFilter implements IComplianceReportCriteriaAndFilter {

        /**
         * Constructs a new ComplianceReportCriteriaAndFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IComplianceReportCriteriaAndFilter);

        /** ComplianceReportCriteriaAndFilter nodeId. */
        public nodeId: (number|Long);

        /** ComplianceReportCriteriaAndFilter criteriaUid. */
        public criteriaUid: Uint8Array;

        /** ComplianceReportCriteriaAndFilter criteriaName. */
        public criteriaName: string;

        /** ComplianceReportCriteriaAndFilter criteria. */
        public criteria?: (Enterprise.IComplianceReportCriteria|null);

        /** ComplianceReportCriteriaAndFilter filters. */
        public filters: Enterprise.IComplianceReportFilter[];

        /** ComplianceReportCriteriaAndFilter lastModified. */
        public lastModified: (number|Long);

        /** ComplianceReportCriteriaAndFilter nodeEncryptedData. */
        public nodeEncryptedData: Uint8Array;

        /**
         * Creates a new ComplianceReportCriteriaAndFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ComplianceReportCriteriaAndFilter instance
         */
        public static create(properties?: Enterprise.IComplianceReportCriteriaAndFilter): Enterprise.ComplianceReportCriteriaAndFilter;

        /**
         * Encodes the specified ComplianceReportCriteriaAndFilter message. Does not implicitly {@link Enterprise.ComplianceReportCriteriaAndFilter.verify|verify} messages.
         * @param message ComplianceReportCriteriaAndFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IComplianceReportCriteriaAndFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ComplianceReportCriteriaAndFilter message, length delimited. Does not implicitly {@link Enterprise.ComplianceReportCriteriaAndFilter.verify|verify} messages.
         * @param message ComplianceReportCriteriaAndFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IComplianceReportCriteriaAndFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ComplianceReportCriteriaAndFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ComplianceReportCriteriaAndFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ComplianceReportCriteriaAndFilter;

        /**
         * Decodes a ComplianceReportCriteriaAndFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ComplianceReportCriteriaAndFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ComplianceReportCriteriaAndFilter;

        /**
         * Verifies a ComplianceReportCriteriaAndFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ComplianceReportCriteriaAndFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ComplianceReportCriteriaAndFilter
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ComplianceReportCriteriaAndFilter;

        /**
         * Creates a plain object from a ComplianceReportCriteriaAndFilter message. Also converts values to other types if specified.
         * @param message ComplianceReportCriteriaAndFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ComplianceReportCriteriaAndFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ComplianceReportCriteriaAndFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ComplianceReportCriteria. */
    interface IComplianceReportCriteria {

        /** ComplianceReportCriteria jobTitles */
        jobTitles?: (string[]|null);

        /** ComplianceReportCriteria enterpriseUserIds */
        enterpriseUserIds?: ((number|Long)[]|null);

        /** ComplianceReportCriteria includeNonShared */
        includeNonShared?: (boolean|null);
    }

    /** Represents a ComplianceReportCriteria. */
    class ComplianceReportCriteria implements IComplianceReportCriteria {

        /**
         * Constructs a new ComplianceReportCriteria.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IComplianceReportCriteria);

        /** ComplianceReportCriteria jobTitles. */
        public jobTitles: string[];

        /** ComplianceReportCriteria enterpriseUserIds. */
        public enterpriseUserIds: (number|Long)[];

        /** ComplianceReportCriteria includeNonShared. */
        public includeNonShared: boolean;

        /**
         * Creates a new ComplianceReportCriteria instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ComplianceReportCriteria instance
         */
        public static create(properties?: Enterprise.IComplianceReportCriteria): Enterprise.ComplianceReportCriteria;

        /**
         * Encodes the specified ComplianceReportCriteria message. Does not implicitly {@link Enterprise.ComplianceReportCriteria.verify|verify} messages.
         * @param message ComplianceReportCriteria message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IComplianceReportCriteria, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ComplianceReportCriteria message, length delimited. Does not implicitly {@link Enterprise.ComplianceReportCriteria.verify|verify} messages.
         * @param message ComplianceReportCriteria message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IComplianceReportCriteria, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ComplianceReportCriteria message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ComplianceReportCriteria
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ComplianceReportCriteria;

        /**
         * Decodes a ComplianceReportCriteria message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ComplianceReportCriteria
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ComplianceReportCriteria;

        /**
         * Verifies a ComplianceReportCriteria message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ComplianceReportCriteria message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ComplianceReportCriteria
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ComplianceReportCriteria;

        /**
         * Creates a plain object from a ComplianceReportCriteria message. Also converts values to other types if specified.
         * @param message ComplianceReportCriteria
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ComplianceReportCriteria, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ComplianceReportCriteria to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ComplianceReportFilter. */
    interface IComplianceReportFilter {

        /** ComplianceReportFilter recordTitles */
        recordTitles?: (string[]|null);

        /** ComplianceReportFilter recordUids */
        recordUids?: (Uint8Array[]|null);

        /** ComplianceReportFilter jobTitles */
        jobTitles?: (string[]|null);

        /** ComplianceReportFilter urls */
        urls?: (string[]|null);

        /** ComplianceReportFilter recordTypes */
        recordTypes?: (string[]|null);
    }

    /** Represents a ComplianceReportFilter. */
    class ComplianceReportFilter implements IComplianceReportFilter {

        /**
         * Constructs a new ComplianceReportFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IComplianceReportFilter);

        /** ComplianceReportFilter recordTitles. */
        public recordTitles: string[];

        /** ComplianceReportFilter recordUids. */
        public recordUids: Uint8Array[];

        /** ComplianceReportFilter jobTitles. */
        public jobTitles: string[];

        /** ComplianceReportFilter urls. */
        public urls: string[];

        /** ComplianceReportFilter recordTypes. */
        public recordTypes: string[];

        /**
         * Creates a new ComplianceReportFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ComplianceReportFilter instance
         */
        public static create(properties?: Enterprise.IComplianceReportFilter): Enterprise.ComplianceReportFilter;

        /**
         * Encodes the specified ComplianceReportFilter message. Does not implicitly {@link Enterprise.ComplianceReportFilter.verify|verify} messages.
         * @param message ComplianceReportFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IComplianceReportFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ComplianceReportFilter message, length delimited. Does not implicitly {@link Enterprise.ComplianceReportFilter.verify|verify} messages.
         * @param message ComplianceReportFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IComplianceReportFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ComplianceReportFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ComplianceReportFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ComplianceReportFilter;

        /**
         * Decodes a ComplianceReportFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ComplianceReportFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ComplianceReportFilter;

        /**
         * Verifies a ComplianceReportFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ComplianceReportFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ComplianceReportFilter
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ComplianceReportFilter;

        /**
         * Creates a plain object from a ComplianceReportFilter message. Also converts values to other types if specified.
         * @param message ComplianceReportFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ComplianceReportFilter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ComplianceReportFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ComplianceReportResponse. */
    interface IComplianceReportResponse {

        /** ComplianceReportResponse dateGenerated */
        dateGenerated?: (number|Long|null);

        /** ComplianceReportResponse runByUserName */
        runByUserName?: (string|null);

        /** ComplianceReportResponse reportName */
        reportName?: (string|null);

        /** ComplianceReportResponse reportUid */
        reportUid?: (Uint8Array|null);

        /** ComplianceReportResponse complianceReportRun */
        complianceReportRun?: (Enterprise.IComplianceReportRun|null);

        /** ComplianceReportResponse userProfiles */
        userProfiles?: (Enterprise.IUserProfile[]|null);

        /** ComplianceReportResponse auditTeams */
        auditTeams?: (Enterprise.IAuditTeam[]|null);

        /** ComplianceReportResponse auditRecords */
        auditRecords?: (Enterprise.IAuditRecord[]|null);

        /** ComplianceReportResponse userRecords */
        userRecords?: (Enterprise.IUserRecord[]|null);

        /** ComplianceReportResponse sharedFolderRecords */
        sharedFolderRecords?: (Enterprise.ISharedFolderRecord[]|null);

        /** ComplianceReportResponse sharedFolderUsers */
        sharedFolderUsers?: (Enterprise.ISharedFolderUser[]|null);

        /** ComplianceReportResponse sharedFolderTeams */
        sharedFolderTeams?: (Enterprise.ISharedFolderTeam[]|null);

        /** ComplianceReportResponse auditTeamUsers */
        auditTeamUsers?: (Enterprise.IAuditTeamUser[]|null);

        /** ComplianceReportResponse auditRoles */
        auditRoles?: (Enterprise.IAuditRole[]|null);

        /** ComplianceReportResponse linkedRecords */
        linkedRecords?: (Enterprise.ILinkedRecord[]|null);
    }

    /** Represents a ComplianceReportResponse. */
    class ComplianceReportResponse implements IComplianceReportResponse {

        /**
         * Constructs a new ComplianceReportResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IComplianceReportResponse);

        /** ComplianceReportResponse dateGenerated. */
        public dateGenerated: (number|Long);

        /** ComplianceReportResponse runByUserName. */
        public runByUserName: string;

        /** ComplianceReportResponse reportName. */
        public reportName: string;

        /** ComplianceReportResponse reportUid. */
        public reportUid: Uint8Array;

        /** ComplianceReportResponse complianceReportRun. */
        public complianceReportRun?: (Enterprise.IComplianceReportRun|null);

        /** ComplianceReportResponse userProfiles. */
        public userProfiles: Enterprise.IUserProfile[];

        /** ComplianceReportResponse auditTeams. */
        public auditTeams: Enterprise.IAuditTeam[];

        /** ComplianceReportResponse auditRecords. */
        public auditRecords: Enterprise.IAuditRecord[];

        /** ComplianceReportResponse userRecords. */
        public userRecords: Enterprise.IUserRecord[];

        /** ComplianceReportResponse sharedFolderRecords. */
        public sharedFolderRecords: Enterprise.ISharedFolderRecord[];

        /** ComplianceReportResponse sharedFolderUsers. */
        public sharedFolderUsers: Enterprise.ISharedFolderUser[];

        /** ComplianceReportResponse sharedFolderTeams. */
        public sharedFolderTeams: Enterprise.ISharedFolderTeam[];

        /** ComplianceReportResponse auditTeamUsers. */
        public auditTeamUsers: Enterprise.IAuditTeamUser[];

        /** ComplianceReportResponse auditRoles. */
        public auditRoles: Enterprise.IAuditRole[];

        /** ComplianceReportResponse linkedRecords. */
        public linkedRecords: Enterprise.ILinkedRecord[];

        /**
         * Creates a new ComplianceReportResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ComplianceReportResponse instance
         */
        public static create(properties?: Enterprise.IComplianceReportResponse): Enterprise.ComplianceReportResponse;

        /**
         * Encodes the specified ComplianceReportResponse message. Does not implicitly {@link Enterprise.ComplianceReportResponse.verify|verify} messages.
         * @param message ComplianceReportResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IComplianceReportResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ComplianceReportResponse message, length delimited. Does not implicitly {@link Enterprise.ComplianceReportResponse.verify|verify} messages.
         * @param message ComplianceReportResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IComplianceReportResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ComplianceReportResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ComplianceReportResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ComplianceReportResponse;

        /**
         * Decodes a ComplianceReportResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ComplianceReportResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ComplianceReportResponse;

        /**
         * Verifies a ComplianceReportResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ComplianceReportResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ComplianceReportResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ComplianceReportResponse;

        /**
         * Creates a plain object from a ComplianceReportResponse message. Also converts values to other types if specified.
         * @param message ComplianceReportResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ComplianceReportResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ComplianceReportResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AuditRecord. */
    interface IAuditRecord {

        /** AuditRecord recordUid */
        recordUid?: (Uint8Array|null);

        /** AuditRecord auditData */
        auditData?: (Uint8Array|null);

        /** AuditRecord hasAttachments */
        hasAttachments?: (boolean|null);

        /** AuditRecord inTrash */
        inTrash?: (boolean|null);

        /** AuditRecord treeLeft */
        treeLeft?: (number|null);

        /** AuditRecord treeRight */
        treeRight?: (number|null);
    }

    /** Represents an AuditRecord. */
    class AuditRecord implements IAuditRecord {

        /**
         * Constructs a new AuditRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IAuditRecord);

        /** AuditRecord recordUid. */
        public recordUid: Uint8Array;

        /** AuditRecord auditData. */
        public auditData: Uint8Array;

        /** AuditRecord hasAttachments. */
        public hasAttachments: boolean;

        /** AuditRecord inTrash. */
        public inTrash: boolean;

        /** AuditRecord treeLeft. */
        public treeLeft: number;

        /** AuditRecord treeRight. */
        public treeRight: number;

        /**
         * Creates a new AuditRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AuditRecord instance
         */
        public static create(properties?: Enterprise.IAuditRecord): Enterprise.AuditRecord;

        /**
         * Encodes the specified AuditRecord message. Does not implicitly {@link Enterprise.AuditRecord.verify|verify} messages.
         * @param message AuditRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IAuditRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AuditRecord message, length delimited. Does not implicitly {@link Enterprise.AuditRecord.verify|verify} messages.
         * @param message AuditRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IAuditRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AuditRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AuditRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.AuditRecord;

        /**
         * Decodes an AuditRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AuditRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.AuditRecord;

        /**
         * Verifies an AuditRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AuditRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AuditRecord
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.AuditRecord;

        /**
         * Creates a plain object from an AuditRecord message. Also converts values to other types if specified.
         * @param message AuditRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.AuditRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AuditRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AuditRole. */
    interface IAuditRole {

        /** AuditRole roleId */
        roleId?: (number|Long|null);

        /** AuditRole encryptedData */
        encryptedData?: (Uint8Array|null);

        /** AuditRole restrictShareOutsideEnterprise */
        restrictShareOutsideEnterprise?: (boolean|null);

        /** AuditRole restrictShareAll */
        restrictShareAll?: (boolean|null);

        /** AuditRole restrictShareOfAttachments */
        restrictShareOfAttachments?: (boolean|null);

        /** AuditRole restrictMaskPasswordsWhileEditing */
        restrictMaskPasswordsWhileEditing?: (boolean|null);

        /** AuditRole roleNodeManagements */
        roleNodeManagements?: (Enterprise.IRoleNodeManagement[]|null);
    }

    /** Represents an AuditRole. */
    class AuditRole implements IAuditRole {

        /**
         * Constructs a new AuditRole.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IAuditRole);

        /** AuditRole roleId. */
        public roleId: (number|Long);

        /** AuditRole encryptedData. */
        public encryptedData: Uint8Array;

        /** AuditRole restrictShareOutsideEnterprise. */
        public restrictShareOutsideEnterprise: boolean;

        /** AuditRole restrictShareAll. */
        public restrictShareAll: boolean;

        /** AuditRole restrictShareOfAttachments. */
        public restrictShareOfAttachments: boolean;

        /** AuditRole restrictMaskPasswordsWhileEditing. */
        public restrictMaskPasswordsWhileEditing: boolean;

        /** AuditRole roleNodeManagements. */
        public roleNodeManagements: Enterprise.IRoleNodeManagement[];

        /**
         * Creates a new AuditRole instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AuditRole instance
         */
        public static create(properties?: Enterprise.IAuditRole): Enterprise.AuditRole;

        /**
         * Encodes the specified AuditRole message. Does not implicitly {@link Enterprise.AuditRole.verify|verify} messages.
         * @param message AuditRole message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IAuditRole, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AuditRole message, length delimited. Does not implicitly {@link Enterprise.AuditRole.verify|verify} messages.
         * @param message AuditRole message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IAuditRole, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AuditRole message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AuditRole
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.AuditRole;

        /**
         * Decodes an AuditRole message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AuditRole
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.AuditRole;

        /**
         * Verifies an AuditRole message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AuditRole message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AuditRole
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.AuditRole;

        /**
         * Creates a plain object from an AuditRole message. Also converts values to other types if specified.
         * @param message AuditRole
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.AuditRole, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AuditRole to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RoleNodeManagement. */
    interface IRoleNodeManagement {

        /** RoleNodeManagement treeLeft */
        treeLeft?: (number|null);

        /** RoleNodeManagement treeRight */
        treeRight?: (number|null);

        /** RoleNodeManagement cascade */
        cascade?: (boolean|null);

        /** RoleNodeManagement privileges */
        privileges?: (number|null);
    }

    /** Represents a RoleNodeManagement. */
    class RoleNodeManagement implements IRoleNodeManagement {

        /**
         * Constructs a new RoleNodeManagement.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IRoleNodeManagement);

        /** RoleNodeManagement treeLeft. */
        public treeLeft: number;

        /** RoleNodeManagement treeRight. */
        public treeRight: number;

        /** RoleNodeManagement cascade. */
        public cascade: boolean;

        /** RoleNodeManagement privileges. */
        public privileges: number;

        /**
         * Creates a new RoleNodeManagement instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RoleNodeManagement instance
         */
        public static create(properties?: Enterprise.IRoleNodeManagement): Enterprise.RoleNodeManagement;

        /**
         * Encodes the specified RoleNodeManagement message. Does not implicitly {@link Enterprise.RoleNodeManagement.verify|verify} messages.
         * @param message RoleNodeManagement message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IRoleNodeManagement, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RoleNodeManagement message, length delimited. Does not implicitly {@link Enterprise.RoleNodeManagement.verify|verify} messages.
         * @param message RoleNodeManagement message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IRoleNodeManagement, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RoleNodeManagement message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RoleNodeManagement
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.RoleNodeManagement;

        /**
         * Decodes a RoleNodeManagement message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RoleNodeManagement
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.RoleNodeManagement;

        /**
         * Verifies a RoleNodeManagement message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RoleNodeManagement message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RoleNodeManagement
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.RoleNodeManagement;

        /**
         * Creates a plain object from a RoleNodeManagement message. Also converts values to other types if specified.
         * @param message RoleNodeManagement
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.RoleNodeManagement, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RoleNodeManagement to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserProfile. */
    interface IUserProfile {

        /** UserProfile enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** UserProfile fullName */
        fullName?: (string|null);

        /** UserProfile jobTitle */
        jobTitle?: (string|null);

        /** UserProfile email */
        email?: (string|null);

        /** UserProfile roleIds */
        roleIds?: ((number|Long)[]|null);
    }

    /** Represents a UserProfile. */
    class UserProfile implements IUserProfile {

        /**
         * Constructs a new UserProfile.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IUserProfile);

        /** UserProfile enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** UserProfile fullName. */
        public fullName: string;

        /** UserProfile jobTitle. */
        public jobTitle: string;

        /** UserProfile email. */
        public email: string;

        /** UserProfile roleIds. */
        public roleIds: (number|Long)[];

        /**
         * Creates a new UserProfile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserProfile instance
         */
        public static create(properties?: Enterprise.IUserProfile): Enterprise.UserProfile;

        /**
         * Encodes the specified UserProfile message. Does not implicitly {@link Enterprise.UserProfile.verify|verify} messages.
         * @param message UserProfile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IUserProfile, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserProfile message, length delimited. Does not implicitly {@link Enterprise.UserProfile.verify|verify} messages.
         * @param message UserProfile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IUserProfile, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserProfile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserProfile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.UserProfile;

        /**
         * Decodes a UserProfile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserProfile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.UserProfile;

        /**
         * Verifies a UserProfile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserProfile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserProfile
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.UserProfile;

        /**
         * Creates a plain object from a UserProfile message. Also converts values to other types if specified.
         * @param message UserProfile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.UserProfile, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserProfile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordPermission. */
    interface IRecordPermission {

        /** RecordPermission recordUid */
        recordUid?: (Uint8Array|null);

        /** RecordPermission permissionBits */
        permissionBits?: (number|null);
    }

    /** Represents a RecordPermission. */
    class RecordPermission implements IRecordPermission {

        /**
         * Constructs a new RecordPermission.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IRecordPermission);

        /** RecordPermission recordUid. */
        public recordUid: Uint8Array;

        /** RecordPermission permissionBits. */
        public permissionBits: number;

        /**
         * Creates a new RecordPermission instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordPermission instance
         */
        public static create(properties?: Enterprise.IRecordPermission): Enterprise.RecordPermission;

        /**
         * Encodes the specified RecordPermission message. Does not implicitly {@link Enterprise.RecordPermission.verify|verify} messages.
         * @param message RecordPermission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IRecordPermission, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordPermission message, length delimited. Does not implicitly {@link Enterprise.RecordPermission.verify|verify} messages.
         * @param message RecordPermission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IRecordPermission, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordPermission message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordPermission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.RecordPermission;

        /**
         * Decodes a RecordPermission message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordPermission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.RecordPermission;

        /**
         * Verifies a RecordPermission message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordPermission message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordPermission
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.RecordPermission;

        /**
         * Creates a plain object from a RecordPermission message. Also converts values to other types if specified.
         * @param message RecordPermission
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.RecordPermission, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordPermission to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserRecord. */
    interface IUserRecord {

        /** UserRecord enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** UserRecord recordPermissions */
        recordPermissions?: (Enterprise.IRecordPermission[]|null);
    }

    /** Represents a UserRecord. */
    class UserRecord implements IUserRecord {

        /**
         * Constructs a new UserRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IUserRecord);

        /** UserRecord enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** UserRecord recordPermissions. */
        public recordPermissions: Enterprise.IRecordPermission[];

        /**
         * Creates a new UserRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserRecord instance
         */
        public static create(properties?: Enterprise.IUserRecord): Enterprise.UserRecord;

        /**
         * Encodes the specified UserRecord message. Does not implicitly {@link Enterprise.UserRecord.verify|verify} messages.
         * @param message UserRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IUserRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserRecord message, length delimited. Does not implicitly {@link Enterprise.UserRecord.verify|verify} messages.
         * @param message UserRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IUserRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.UserRecord;

        /**
         * Decodes a UserRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.UserRecord;

        /**
         * Verifies a UserRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserRecord
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.UserRecord;

        /**
         * Creates a plain object from a UserRecord message. Also converts values to other types if specified.
         * @param message UserRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.UserRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AuditTeam. */
    interface IAuditTeam {

        /** AuditTeam teamUid */
        teamUid?: (Uint8Array|null);

        /** AuditTeam teamName */
        teamName?: (string|null);

        /** AuditTeam restrictEdit */
        restrictEdit?: (boolean|null);

        /** AuditTeam restrictShare */
        restrictShare?: (boolean|null);
    }

    /** Represents an AuditTeam. */
    class AuditTeam implements IAuditTeam {

        /**
         * Constructs a new AuditTeam.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IAuditTeam);

        /** AuditTeam teamUid. */
        public teamUid: Uint8Array;

        /** AuditTeam teamName. */
        public teamName: string;

        /** AuditTeam restrictEdit. */
        public restrictEdit: boolean;

        /** AuditTeam restrictShare. */
        public restrictShare: boolean;

        /**
         * Creates a new AuditTeam instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AuditTeam instance
         */
        public static create(properties?: Enterprise.IAuditTeam): Enterprise.AuditTeam;

        /**
         * Encodes the specified AuditTeam message. Does not implicitly {@link Enterprise.AuditTeam.verify|verify} messages.
         * @param message AuditTeam message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IAuditTeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AuditTeam message, length delimited. Does not implicitly {@link Enterprise.AuditTeam.verify|verify} messages.
         * @param message AuditTeam message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IAuditTeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AuditTeam message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AuditTeam
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.AuditTeam;

        /**
         * Decodes an AuditTeam message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AuditTeam
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.AuditTeam;

        /**
         * Verifies an AuditTeam message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AuditTeam message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AuditTeam
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.AuditTeam;

        /**
         * Creates a plain object from an AuditTeam message. Also converts values to other types if specified.
         * @param message AuditTeam
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.AuditTeam, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AuditTeam to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AuditTeamUser. */
    interface IAuditTeamUser {

        /** AuditTeamUser teamUid */
        teamUid?: (Uint8Array|null);

        /** AuditTeamUser enterpriseUserIds */
        enterpriseUserIds?: ((number|Long)[]|null);
    }

    /** Represents an AuditTeamUser. */
    class AuditTeamUser implements IAuditTeamUser {

        /**
         * Constructs a new AuditTeamUser.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IAuditTeamUser);

        /** AuditTeamUser teamUid. */
        public teamUid: Uint8Array;

        /** AuditTeamUser enterpriseUserIds. */
        public enterpriseUserIds: (number|Long)[];

        /**
         * Creates a new AuditTeamUser instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AuditTeamUser instance
         */
        public static create(properties?: Enterprise.IAuditTeamUser): Enterprise.AuditTeamUser;

        /**
         * Encodes the specified AuditTeamUser message. Does not implicitly {@link Enterprise.AuditTeamUser.verify|verify} messages.
         * @param message AuditTeamUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IAuditTeamUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AuditTeamUser message, length delimited. Does not implicitly {@link Enterprise.AuditTeamUser.verify|verify} messages.
         * @param message AuditTeamUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IAuditTeamUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AuditTeamUser message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AuditTeamUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.AuditTeamUser;

        /**
         * Decodes an AuditTeamUser message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AuditTeamUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.AuditTeamUser;

        /**
         * Verifies an AuditTeamUser message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AuditTeamUser message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AuditTeamUser
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.AuditTeamUser;

        /**
         * Creates a plain object from an AuditTeamUser message. Also converts values to other types if specified.
         * @param message AuditTeamUser
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.AuditTeamUser, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AuditTeamUser to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderRecord. */
    interface ISharedFolderRecord {

        /** SharedFolderRecord sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** SharedFolderRecord recordPermissions */
        recordPermissions?: (Enterprise.IRecordPermission[]|null);

        /** SharedFolderRecord shareAdminRecords */
        shareAdminRecords?: (Enterprise.IShareAdminRecord[]|null);
    }

    /** Represents a SharedFolderRecord. */
    class SharedFolderRecord implements ISharedFolderRecord {

        /**
         * Constructs a new SharedFolderRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ISharedFolderRecord);

        /** SharedFolderRecord sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** SharedFolderRecord recordPermissions. */
        public recordPermissions: Enterprise.IRecordPermission[];

        /** SharedFolderRecord shareAdminRecords. */
        public shareAdminRecords: Enterprise.IShareAdminRecord[];

        /**
         * Creates a new SharedFolderRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderRecord instance
         */
        public static create(properties?: Enterprise.ISharedFolderRecord): Enterprise.SharedFolderRecord;

        /**
         * Encodes the specified SharedFolderRecord message. Does not implicitly {@link Enterprise.SharedFolderRecord.verify|verify} messages.
         * @param message SharedFolderRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ISharedFolderRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderRecord message, length delimited. Does not implicitly {@link Enterprise.SharedFolderRecord.verify|verify} messages.
         * @param message SharedFolderRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ISharedFolderRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.SharedFolderRecord;

        /**
         * Decodes a SharedFolderRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.SharedFolderRecord;

        /**
         * Verifies a SharedFolderRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderRecord
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.SharedFolderRecord;

        /**
         * Creates a plain object from a SharedFolderRecord message. Also converts values to other types if specified.
         * @param message SharedFolderRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.SharedFolderRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShareAdminRecord. */
    interface IShareAdminRecord {

        /** ShareAdminRecord enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** ShareAdminRecord recordPermissionIndexes */
        recordPermissionIndexes?: (number[]|null);
    }

    /** Represents a ShareAdminRecord. */
    class ShareAdminRecord implements IShareAdminRecord {

        /**
         * Constructs a new ShareAdminRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IShareAdminRecord);

        /** ShareAdminRecord enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** ShareAdminRecord recordPermissionIndexes. */
        public recordPermissionIndexes: number[];

        /**
         * Creates a new ShareAdminRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShareAdminRecord instance
         */
        public static create(properties?: Enterprise.IShareAdminRecord): Enterprise.ShareAdminRecord;

        /**
         * Encodes the specified ShareAdminRecord message. Does not implicitly {@link Enterprise.ShareAdminRecord.verify|verify} messages.
         * @param message ShareAdminRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IShareAdminRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShareAdminRecord message, length delimited. Does not implicitly {@link Enterprise.ShareAdminRecord.verify|verify} messages.
         * @param message ShareAdminRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IShareAdminRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShareAdminRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShareAdminRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ShareAdminRecord;

        /**
         * Decodes a ShareAdminRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShareAdminRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ShareAdminRecord;

        /**
         * Verifies a ShareAdminRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShareAdminRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShareAdminRecord
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ShareAdminRecord;

        /**
         * Creates a plain object from a ShareAdminRecord message. Also converts values to other types if specified.
         * @param message ShareAdminRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ShareAdminRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShareAdminRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderUser. */
    interface ISharedFolderUser {

        /** SharedFolderUser sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** SharedFolderUser enterpriseUserIds */
        enterpriseUserIds?: ((number|Long)[]|null);
    }

    /** Represents a SharedFolderUser. */
    class SharedFolderUser implements ISharedFolderUser {

        /**
         * Constructs a new SharedFolderUser.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ISharedFolderUser);

        /** SharedFolderUser sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** SharedFolderUser enterpriseUserIds. */
        public enterpriseUserIds: (number|Long)[];

        /**
         * Creates a new SharedFolderUser instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderUser instance
         */
        public static create(properties?: Enterprise.ISharedFolderUser): Enterprise.SharedFolderUser;

        /**
         * Encodes the specified SharedFolderUser message. Does not implicitly {@link Enterprise.SharedFolderUser.verify|verify} messages.
         * @param message SharedFolderUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ISharedFolderUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderUser message, length delimited. Does not implicitly {@link Enterprise.SharedFolderUser.verify|verify} messages.
         * @param message SharedFolderUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ISharedFolderUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderUser message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.SharedFolderUser;

        /**
         * Decodes a SharedFolderUser message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.SharedFolderUser;

        /**
         * Verifies a SharedFolderUser message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderUser message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderUser
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.SharedFolderUser;

        /**
         * Creates a plain object from a SharedFolderUser message. Also converts values to other types if specified.
         * @param message SharedFolderUser
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.SharedFolderUser, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderUser to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderTeam. */
    interface ISharedFolderTeam {

        /** SharedFolderTeam sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** SharedFolderTeam teamUids */
        teamUids?: (Uint8Array[]|null);
    }

    /** Represents a SharedFolderTeam. */
    class SharedFolderTeam implements ISharedFolderTeam {

        /**
         * Constructs a new SharedFolderTeam.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ISharedFolderTeam);

        /** SharedFolderTeam sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** SharedFolderTeam teamUids. */
        public teamUids: Uint8Array[];

        /**
         * Creates a new SharedFolderTeam instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderTeam instance
         */
        public static create(properties?: Enterprise.ISharedFolderTeam): Enterprise.SharedFolderTeam;

        /**
         * Encodes the specified SharedFolderTeam message. Does not implicitly {@link Enterprise.SharedFolderTeam.verify|verify} messages.
         * @param message SharedFolderTeam message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ISharedFolderTeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderTeam message, length delimited. Does not implicitly {@link Enterprise.SharedFolderTeam.verify|verify} messages.
         * @param message SharedFolderTeam message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ISharedFolderTeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderTeam message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderTeam
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.SharedFolderTeam;

        /**
         * Decodes a SharedFolderTeam message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderTeam
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.SharedFolderTeam;

        /**
         * Verifies a SharedFolderTeam message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderTeam message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderTeam
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.SharedFolderTeam;

        /**
         * Creates a plain object from a SharedFolderTeam message. Also converts values to other types if specified.
         * @param message SharedFolderTeam
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.SharedFolderTeam, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderTeam to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetComplianceReportRequest. */
    interface IGetComplianceReportRequest {

        /** GetComplianceReportRequest reportUid */
        reportUid?: (Uint8Array|null);
    }

    /** Represents a GetComplianceReportRequest. */
    class GetComplianceReportRequest implements IGetComplianceReportRequest {

        /**
         * Constructs a new GetComplianceReportRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IGetComplianceReportRequest);

        /** GetComplianceReportRequest reportUid. */
        public reportUid: Uint8Array;

        /**
         * Creates a new GetComplianceReportRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetComplianceReportRequest instance
         */
        public static create(properties?: Enterprise.IGetComplianceReportRequest): Enterprise.GetComplianceReportRequest;

        /**
         * Encodes the specified GetComplianceReportRequest message. Does not implicitly {@link Enterprise.GetComplianceReportRequest.verify|verify} messages.
         * @param message GetComplianceReportRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IGetComplianceReportRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetComplianceReportRequest message, length delimited. Does not implicitly {@link Enterprise.GetComplianceReportRequest.verify|verify} messages.
         * @param message GetComplianceReportRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IGetComplianceReportRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetComplianceReportRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetComplianceReportRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.GetComplianceReportRequest;

        /**
         * Decodes a GetComplianceReportRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetComplianceReportRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.GetComplianceReportRequest;

        /**
         * Verifies a GetComplianceReportRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetComplianceReportRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetComplianceReportRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.GetComplianceReportRequest;

        /**
         * Creates a plain object from a GetComplianceReportRequest message. Also converts values to other types if specified.
         * @param message GetComplianceReportRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.GetComplianceReportRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetComplianceReportRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetComplianceReportResponse. */
    interface IGetComplianceReportResponse {

        /** GetComplianceReportResponse downloadUrl */
        downloadUrl?: (string|null);
    }

    /** Represents a GetComplianceReportResponse. */
    class GetComplianceReportResponse implements IGetComplianceReportResponse {

        /**
         * Constructs a new GetComplianceReportResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IGetComplianceReportResponse);

        /** GetComplianceReportResponse downloadUrl. */
        public downloadUrl: string;

        /**
         * Creates a new GetComplianceReportResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetComplianceReportResponse instance
         */
        public static create(properties?: Enterprise.IGetComplianceReportResponse): Enterprise.GetComplianceReportResponse;

        /**
         * Encodes the specified GetComplianceReportResponse message. Does not implicitly {@link Enterprise.GetComplianceReportResponse.verify|verify} messages.
         * @param message GetComplianceReportResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IGetComplianceReportResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetComplianceReportResponse message, length delimited. Does not implicitly {@link Enterprise.GetComplianceReportResponse.verify|verify} messages.
         * @param message GetComplianceReportResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IGetComplianceReportResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetComplianceReportResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetComplianceReportResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.GetComplianceReportResponse;

        /**
         * Decodes a GetComplianceReportResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetComplianceReportResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.GetComplianceReportResponse;

        /**
         * Verifies a GetComplianceReportResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetComplianceReportResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetComplianceReportResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.GetComplianceReportResponse;

        /**
         * Creates a plain object from a GetComplianceReportResponse message. Also converts values to other types if specified.
         * @param message GetComplianceReportResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.GetComplianceReportResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetComplianceReportResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ComplianceReportCriteriaRequest. */
    interface IComplianceReportCriteriaRequest {

        /** ComplianceReportCriteriaRequest criteriaUid */
        criteriaUid?: (Uint8Array|null);
    }

    /** Represents a ComplianceReportCriteriaRequest. */
    class ComplianceReportCriteriaRequest implements IComplianceReportCriteriaRequest {

        /**
         * Constructs a new ComplianceReportCriteriaRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IComplianceReportCriteriaRequest);

        /** ComplianceReportCriteriaRequest criteriaUid. */
        public criteriaUid: Uint8Array;

        /**
         * Creates a new ComplianceReportCriteriaRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ComplianceReportCriteriaRequest instance
         */
        public static create(properties?: Enterprise.IComplianceReportCriteriaRequest): Enterprise.ComplianceReportCriteriaRequest;

        /**
         * Encodes the specified ComplianceReportCriteriaRequest message. Does not implicitly {@link Enterprise.ComplianceReportCriteriaRequest.verify|verify} messages.
         * @param message ComplianceReportCriteriaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IComplianceReportCriteriaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ComplianceReportCriteriaRequest message, length delimited. Does not implicitly {@link Enterprise.ComplianceReportCriteriaRequest.verify|verify} messages.
         * @param message ComplianceReportCriteriaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IComplianceReportCriteriaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ComplianceReportCriteriaRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ComplianceReportCriteriaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.ComplianceReportCriteriaRequest;

        /**
         * Decodes a ComplianceReportCriteriaRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ComplianceReportCriteriaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.ComplianceReportCriteriaRequest;

        /**
         * Verifies a ComplianceReportCriteriaRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ComplianceReportCriteriaRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ComplianceReportCriteriaRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.ComplianceReportCriteriaRequest;

        /**
         * Creates a plain object from a ComplianceReportCriteriaRequest message. Also converts values to other types if specified.
         * @param message ComplianceReportCriteriaRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.ComplianceReportCriteriaRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ComplianceReportCriteriaRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SaveComplianceReportCriteriaResponse. */
    interface ISaveComplianceReportCriteriaResponse {

        /** SaveComplianceReportCriteriaResponse criteriaUid */
        criteriaUid?: (Uint8Array|null);
    }

    /** Represents a SaveComplianceReportCriteriaResponse. */
    class SaveComplianceReportCriteriaResponse implements ISaveComplianceReportCriteriaResponse {

        /**
         * Constructs a new SaveComplianceReportCriteriaResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ISaveComplianceReportCriteriaResponse);

        /** SaveComplianceReportCriteriaResponse criteriaUid. */
        public criteriaUid: Uint8Array;

        /**
         * Creates a new SaveComplianceReportCriteriaResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SaveComplianceReportCriteriaResponse instance
         */
        public static create(properties?: Enterprise.ISaveComplianceReportCriteriaResponse): Enterprise.SaveComplianceReportCriteriaResponse;

        /**
         * Encodes the specified SaveComplianceReportCriteriaResponse message. Does not implicitly {@link Enterprise.SaveComplianceReportCriteriaResponse.verify|verify} messages.
         * @param message SaveComplianceReportCriteriaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ISaveComplianceReportCriteriaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SaveComplianceReportCriteriaResponse message, length delimited. Does not implicitly {@link Enterprise.SaveComplianceReportCriteriaResponse.verify|verify} messages.
         * @param message SaveComplianceReportCriteriaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ISaveComplianceReportCriteriaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SaveComplianceReportCriteriaResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SaveComplianceReportCriteriaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.SaveComplianceReportCriteriaResponse;

        /**
         * Decodes a SaveComplianceReportCriteriaResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SaveComplianceReportCriteriaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.SaveComplianceReportCriteriaResponse;

        /**
         * Verifies a SaveComplianceReportCriteriaResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SaveComplianceReportCriteriaResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SaveComplianceReportCriteriaResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.SaveComplianceReportCriteriaResponse;

        /**
         * Creates a plain object from a SaveComplianceReportCriteriaResponse message. Also converts values to other types if specified.
         * @param message SaveComplianceReportCriteriaResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.SaveComplianceReportCriteriaResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SaveComplianceReportCriteriaResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LinkedRecord. */
    interface ILinkedRecord {

        /** LinkedRecord ownerUid */
        ownerUid?: (Uint8Array|null);

        /** LinkedRecord recordUids */
        recordUids?: (Uint8Array[]|null);
    }

    /** Represents a LinkedRecord. */
    class LinkedRecord implements ILinkedRecord {

        /**
         * Constructs a new LinkedRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ILinkedRecord);

        /** LinkedRecord ownerUid. */
        public ownerUid: Uint8Array;

        /** LinkedRecord recordUids. */
        public recordUids: Uint8Array[];

        /**
         * Creates a new LinkedRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LinkedRecord instance
         */
        public static create(properties?: Enterprise.ILinkedRecord): Enterprise.LinkedRecord;

        /**
         * Encodes the specified LinkedRecord message. Does not implicitly {@link Enterprise.LinkedRecord.verify|verify} messages.
         * @param message LinkedRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ILinkedRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LinkedRecord message, length delimited. Does not implicitly {@link Enterprise.LinkedRecord.verify|verify} messages.
         * @param message LinkedRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ILinkedRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LinkedRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LinkedRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.LinkedRecord;

        /**
         * Decodes a LinkedRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LinkedRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.LinkedRecord;

        /**
         * Verifies a LinkedRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LinkedRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LinkedRecord
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.LinkedRecord;

        /**
         * Creates a plain object from a LinkedRecord message. Also converts values to other types if specified.
         * @param message LinkedRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.LinkedRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LinkedRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetSharingAdminsRequest. */
    interface IGetSharingAdminsRequest {

        /** GetSharingAdminsRequest sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** GetSharingAdminsRequest recordUid */
        recordUid?: (Uint8Array|null);

        /** GetSharingAdminsRequest username */
        username?: (string|null);
    }

    /** Represents a GetSharingAdminsRequest. */
    class GetSharingAdminsRequest implements IGetSharingAdminsRequest {

        /**
         * Constructs a new GetSharingAdminsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IGetSharingAdminsRequest);

        /** GetSharingAdminsRequest sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** GetSharingAdminsRequest recordUid. */
        public recordUid: Uint8Array;

        /** GetSharingAdminsRequest username. */
        public username: string;

        /**
         * Creates a new GetSharingAdminsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetSharingAdminsRequest instance
         */
        public static create(properties?: Enterprise.IGetSharingAdminsRequest): Enterprise.GetSharingAdminsRequest;

        /**
         * Encodes the specified GetSharingAdminsRequest message. Does not implicitly {@link Enterprise.GetSharingAdminsRequest.verify|verify} messages.
         * @param message GetSharingAdminsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IGetSharingAdminsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetSharingAdminsRequest message, length delimited. Does not implicitly {@link Enterprise.GetSharingAdminsRequest.verify|verify} messages.
         * @param message GetSharingAdminsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IGetSharingAdminsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetSharingAdminsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetSharingAdminsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.GetSharingAdminsRequest;

        /**
         * Decodes a GetSharingAdminsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetSharingAdminsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.GetSharingAdminsRequest;

        /**
         * Verifies a GetSharingAdminsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetSharingAdminsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetSharingAdminsRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.GetSharingAdminsRequest;

        /**
         * Creates a plain object from a GetSharingAdminsRequest message. Also converts values to other types if specified.
         * @param message GetSharingAdminsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.GetSharingAdminsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetSharingAdminsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserProfileExt. */
    interface IUserProfileExt {

        /** UserProfileExt email */
        email?: (string|null);

        /** UserProfileExt fullName */
        fullName?: (string|null);

        /** UserProfileExt jobTitle */
        jobTitle?: (string|null);

        /** UserProfileExt isMSPMCAdmin */
        isMSPMCAdmin?: (boolean|null);

        /** UserProfileExt isInSharedFolder */
        isInSharedFolder?: (boolean|null);

        /** UserProfileExt isShareAdminForRequestedObject */
        isShareAdminForRequestedObject?: (boolean|null);

        /** UserProfileExt isShareAdminForSharedFolderOwner */
        isShareAdminForSharedFolderOwner?: (boolean|null);
    }

    /** Represents a UserProfileExt. */
    class UserProfileExt implements IUserProfileExt {

        /**
         * Constructs a new UserProfileExt.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IUserProfileExt);

        /** UserProfileExt email. */
        public email: string;

        /** UserProfileExt fullName. */
        public fullName: string;

        /** UserProfileExt jobTitle. */
        public jobTitle: string;

        /** UserProfileExt isMSPMCAdmin. */
        public isMSPMCAdmin: boolean;

        /** UserProfileExt isInSharedFolder. */
        public isInSharedFolder: boolean;

        /** UserProfileExt isShareAdminForRequestedObject. */
        public isShareAdminForRequestedObject: boolean;

        /** UserProfileExt isShareAdminForSharedFolderOwner. */
        public isShareAdminForSharedFolderOwner: boolean;

        /**
         * Creates a new UserProfileExt instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserProfileExt instance
         */
        public static create(properties?: Enterprise.IUserProfileExt): Enterprise.UserProfileExt;

        /**
         * Encodes the specified UserProfileExt message. Does not implicitly {@link Enterprise.UserProfileExt.verify|verify} messages.
         * @param message UserProfileExt message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IUserProfileExt, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserProfileExt message, length delimited. Does not implicitly {@link Enterprise.UserProfileExt.verify|verify} messages.
         * @param message UserProfileExt message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IUserProfileExt, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserProfileExt message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserProfileExt
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.UserProfileExt;

        /**
         * Decodes a UserProfileExt message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserProfileExt
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.UserProfileExt;

        /**
         * Verifies a UserProfileExt message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserProfileExt message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserProfileExt
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.UserProfileExt;

        /**
         * Creates a plain object from a UserProfileExt message. Also converts values to other types if specified.
         * @param message UserProfileExt
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.UserProfileExt, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserProfileExt to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetSharingAdminsResponse. */
    interface IGetSharingAdminsResponse {

        /** GetSharingAdminsResponse userProfileExts */
        userProfileExts?: (Enterprise.IUserProfileExt[]|null);
    }

    /** Represents a GetSharingAdminsResponse. */
    class GetSharingAdminsResponse implements IGetSharingAdminsResponse {

        /**
         * Constructs a new GetSharingAdminsResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IGetSharingAdminsResponse);

        /** GetSharingAdminsResponse userProfileExts. */
        public userProfileExts: Enterprise.IUserProfileExt[];

        /**
         * Creates a new GetSharingAdminsResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetSharingAdminsResponse instance
         */
        public static create(properties?: Enterprise.IGetSharingAdminsResponse): Enterprise.GetSharingAdminsResponse;

        /**
         * Encodes the specified GetSharingAdminsResponse message. Does not implicitly {@link Enterprise.GetSharingAdminsResponse.verify|verify} messages.
         * @param message GetSharingAdminsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IGetSharingAdminsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetSharingAdminsResponse message, length delimited. Does not implicitly {@link Enterprise.GetSharingAdminsResponse.verify|verify} messages.
         * @param message GetSharingAdminsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IGetSharingAdminsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetSharingAdminsResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetSharingAdminsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.GetSharingAdminsResponse;

        /**
         * Decodes a GetSharingAdminsResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetSharingAdminsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.GetSharingAdminsResponse;

        /**
         * Verifies a GetSharingAdminsResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetSharingAdminsResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetSharingAdminsResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.GetSharingAdminsResponse;

        /**
         * Creates a plain object from a GetSharingAdminsResponse message. Also converts values to other types if specified.
         * @param message GetSharingAdminsResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.GetSharingAdminsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetSharingAdminsResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TeamsEnterpriseUsersAddRequest. */
    interface ITeamsEnterpriseUsersAddRequest {

        /** TeamsEnterpriseUsersAddRequest teams */
        teams?: (Enterprise.ITeamsEnterpriseUsersAddTeamRequest[]|null);
    }

    /** Represents a TeamsEnterpriseUsersAddRequest. */
    class TeamsEnterpriseUsersAddRequest implements ITeamsEnterpriseUsersAddRequest {

        /**
         * Constructs a new TeamsEnterpriseUsersAddRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ITeamsEnterpriseUsersAddRequest);

        /** TeamsEnterpriseUsersAddRequest teams. */
        public teams: Enterprise.ITeamsEnterpriseUsersAddTeamRequest[];

        /**
         * Creates a new TeamsEnterpriseUsersAddRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TeamsEnterpriseUsersAddRequest instance
         */
        public static create(properties?: Enterprise.ITeamsEnterpriseUsersAddRequest): Enterprise.TeamsEnterpriseUsersAddRequest;

        /**
         * Encodes the specified TeamsEnterpriseUsersAddRequest message. Does not implicitly {@link Enterprise.TeamsEnterpriseUsersAddRequest.verify|verify} messages.
         * @param message TeamsEnterpriseUsersAddRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ITeamsEnterpriseUsersAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TeamsEnterpriseUsersAddRequest message, length delimited. Does not implicitly {@link Enterprise.TeamsEnterpriseUsersAddRequest.verify|verify} messages.
         * @param message TeamsEnterpriseUsersAddRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ITeamsEnterpriseUsersAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TeamsEnterpriseUsersAddRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamsEnterpriseUsersAddRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.TeamsEnterpriseUsersAddRequest;

        /**
         * Decodes a TeamsEnterpriseUsersAddRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TeamsEnterpriseUsersAddRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.TeamsEnterpriseUsersAddRequest;

        /**
         * Verifies a TeamsEnterpriseUsersAddRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TeamsEnterpriseUsersAddRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TeamsEnterpriseUsersAddRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.TeamsEnterpriseUsersAddRequest;

        /**
         * Creates a plain object from a TeamsEnterpriseUsersAddRequest message. Also converts values to other types if specified.
         * @param message TeamsEnterpriseUsersAddRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.TeamsEnterpriseUsersAddRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TeamsEnterpriseUsersAddRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TeamsEnterpriseUsersAddTeamRequest. */
    interface ITeamsEnterpriseUsersAddTeamRequest {

        /** TeamsEnterpriseUsersAddTeamRequest teamUid */
        teamUid?: (Uint8Array|null);

        /** TeamsEnterpriseUsersAddTeamRequest users */
        users?: (Enterprise.ITeamsEnterpriseUsersAddUserRequest[]|null);
    }

    /** Represents a TeamsEnterpriseUsersAddTeamRequest. */
    class TeamsEnterpriseUsersAddTeamRequest implements ITeamsEnterpriseUsersAddTeamRequest {

        /**
         * Constructs a new TeamsEnterpriseUsersAddTeamRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ITeamsEnterpriseUsersAddTeamRequest);

        /** TeamsEnterpriseUsersAddTeamRequest teamUid. */
        public teamUid: Uint8Array;

        /** TeamsEnterpriseUsersAddTeamRequest users. */
        public users: Enterprise.ITeamsEnterpriseUsersAddUserRequest[];

        /**
         * Creates a new TeamsEnterpriseUsersAddTeamRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TeamsEnterpriseUsersAddTeamRequest instance
         */
        public static create(properties?: Enterprise.ITeamsEnterpriseUsersAddTeamRequest): Enterprise.TeamsEnterpriseUsersAddTeamRequest;

        /**
         * Encodes the specified TeamsEnterpriseUsersAddTeamRequest message. Does not implicitly {@link Enterprise.TeamsEnterpriseUsersAddTeamRequest.verify|verify} messages.
         * @param message TeamsEnterpriseUsersAddTeamRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ITeamsEnterpriseUsersAddTeamRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TeamsEnterpriseUsersAddTeamRequest message, length delimited. Does not implicitly {@link Enterprise.TeamsEnterpriseUsersAddTeamRequest.verify|verify} messages.
         * @param message TeamsEnterpriseUsersAddTeamRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ITeamsEnterpriseUsersAddTeamRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TeamsEnterpriseUsersAddTeamRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamsEnterpriseUsersAddTeamRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.TeamsEnterpriseUsersAddTeamRequest;

        /**
         * Decodes a TeamsEnterpriseUsersAddTeamRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TeamsEnterpriseUsersAddTeamRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.TeamsEnterpriseUsersAddTeamRequest;

        /**
         * Verifies a TeamsEnterpriseUsersAddTeamRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TeamsEnterpriseUsersAddTeamRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TeamsEnterpriseUsersAddTeamRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.TeamsEnterpriseUsersAddTeamRequest;

        /**
         * Creates a plain object from a TeamsEnterpriseUsersAddTeamRequest message. Also converts values to other types if specified.
         * @param message TeamsEnterpriseUsersAddTeamRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.TeamsEnterpriseUsersAddTeamRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TeamsEnterpriseUsersAddTeamRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TeamsEnterpriseUsersAddUserRequest. */
    interface ITeamsEnterpriseUsersAddUserRequest {

        /** TeamsEnterpriseUsersAddUserRequest enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** TeamsEnterpriseUsersAddUserRequest userType */
        userType?: (Enterprise.TeamUserType|null);

        /** TeamsEnterpriseUsersAddUserRequest teamKey */
        teamKey?: (string|null);
    }

    /** Represents a TeamsEnterpriseUsersAddUserRequest. */
    class TeamsEnterpriseUsersAddUserRequest implements ITeamsEnterpriseUsersAddUserRequest {

        /**
         * Constructs a new TeamsEnterpriseUsersAddUserRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ITeamsEnterpriseUsersAddUserRequest);

        /** TeamsEnterpriseUsersAddUserRequest enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** TeamsEnterpriseUsersAddUserRequest userType. */
        public userType: Enterprise.TeamUserType;

        /** TeamsEnterpriseUsersAddUserRequest teamKey. */
        public teamKey: string;

        /**
         * Creates a new TeamsEnterpriseUsersAddUserRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TeamsEnterpriseUsersAddUserRequest instance
         */
        public static create(properties?: Enterprise.ITeamsEnterpriseUsersAddUserRequest): Enterprise.TeamsEnterpriseUsersAddUserRequest;

        /**
         * Encodes the specified TeamsEnterpriseUsersAddUserRequest message. Does not implicitly {@link Enterprise.TeamsEnterpriseUsersAddUserRequest.verify|verify} messages.
         * @param message TeamsEnterpriseUsersAddUserRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ITeamsEnterpriseUsersAddUserRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TeamsEnterpriseUsersAddUserRequest message, length delimited. Does not implicitly {@link Enterprise.TeamsEnterpriseUsersAddUserRequest.verify|verify} messages.
         * @param message TeamsEnterpriseUsersAddUserRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ITeamsEnterpriseUsersAddUserRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TeamsEnterpriseUsersAddUserRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamsEnterpriseUsersAddUserRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.TeamsEnterpriseUsersAddUserRequest;

        /**
         * Decodes a TeamsEnterpriseUsersAddUserRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TeamsEnterpriseUsersAddUserRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.TeamsEnterpriseUsersAddUserRequest;

        /**
         * Verifies a TeamsEnterpriseUsersAddUserRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TeamsEnterpriseUsersAddUserRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TeamsEnterpriseUsersAddUserRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.TeamsEnterpriseUsersAddUserRequest;

        /**
         * Creates a plain object from a TeamsEnterpriseUsersAddUserRequest message. Also converts values to other types if specified.
         * @param message TeamsEnterpriseUsersAddUserRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.TeamsEnterpriseUsersAddUserRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TeamsEnterpriseUsersAddUserRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** TeamUserType enum. */
    enum TeamUserType {
        USER = 0,
        ADMIN = 1,
        ADMIN_ONLY = 2
    }

    /** Properties of a TeamsEnterpriseUsersAddResponse. */
    interface ITeamsEnterpriseUsersAddResponse {

        /** TeamsEnterpriseUsersAddResponse teams */
        teams?: (Enterprise.ITeamsEnterpriseUsersAddTeamResponse[]|null);

        /** TeamsEnterpriseUsersAddResponse revision */
        revision?: (number|Long|null);
    }

    /** Represents a TeamsEnterpriseUsersAddResponse. */
    class TeamsEnterpriseUsersAddResponse implements ITeamsEnterpriseUsersAddResponse {

        /**
         * Constructs a new TeamsEnterpriseUsersAddResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ITeamsEnterpriseUsersAddResponse);

        /** TeamsEnterpriseUsersAddResponse teams. */
        public teams: Enterprise.ITeamsEnterpriseUsersAddTeamResponse[];

        /** TeamsEnterpriseUsersAddResponse revision. */
        public revision: (number|Long);

        /**
         * Creates a new TeamsEnterpriseUsersAddResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TeamsEnterpriseUsersAddResponse instance
         */
        public static create(properties?: Enterprise.ITeamsEnterpriseUsersAddResponse): Enterprise.TeamsEnterpriseUsersAddResponse;

        /**
         * Encodes the specified TeamsEnterpriseUsersAddResponse message. Does not implicitly {@link Enterprise.TeamsEnterpriseUsersAddResponse.verify|verify} messages.
         * @param message TeamsEnterpriseUsersAddResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ITeamsEnterpriseUsersAddResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TeamsEnterpriseUsersAddResponse message, length delimited. Does not implicitly {@link Enterprise.TeamsEnterpriseUsersAddResponse.verify|verify} messages.
         * @param message TeamsEnterpriseUsersAddResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ITeamsEnterpriseUsersAddResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TeamsEnterpriseUsersAddResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamsEnterpriseUsersAddResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.TeamsEnterpriseUsersAddResponse;

        /**
         * Decodes a TeamsEnterpriseUsersAddResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TeamsEnterpriseUsersAddResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.TeamsEnterpriseUsersAddResponse;

        /**
         * Verifies a TeamsEnterpriseUsersAddResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TeamsEnterpriseUsersAddResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TeamsEnterpriseUsersAddResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.TeamsEnterpriseUsersAddResponse;

        /**
         * Creates a plain object from a TeamsEnterpriseUsersAddResponse message. Also converts values to other types if specified.
         * @param message TeamsEnterpriseUsersAddResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.TeamsEnterpriseUsersAddResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TeamsEnterpriseUsersAddResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TeamsEnterpriseUsersAddTeamResponse. */
    interface ITeamsEnterpriseUsersAddTeamResponse {

        /** TeamsEnterpriseUsersAddTeamResponse teamUid */
        teamUid?: (Uint8Array|null);

        /** TeamsEnterpriseUsersAddTeamResponse users */
        users?: (Enterprise.ITeamsEnterpriseUsersAddUserResponse[]|null);

        /** TeamsEnterpriseUsersAddTeamResponse success */
        success?: (boolean|null);

        /** TeamsEnterpriseUsersAddTeamResponse message */
        message?: (string|null);

        /** TeamsEnterpriseUsersAddTeamResponse resultCode */
        resultCode?: (string|null);

        /** TeamsEnterpriseUsersAddTeamResponse additionalInfo */
        additionalInfo?: (string|null);
    }

    /** Represents a TeamsEnterpriseUsersAddTeamResponse. */
    class TeamsEnterpriseUsersAddTeamResponse implements ITeamsEnterpriseUsersAddTeamResponse {

        /**
         * Constructs a new TeamsEnterpriseUsersAddTeamResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ITeamsEnterpriseUsersAddTeamResponse);

        /** TeamsEnterpriseUsersAddTeamResponse teamUid. */
        public teamUid: Uint8Array;

        /** TeamsEnterpriseUsersAddTeamResponse users. */
        public users: Enterprise.ITeamsEnterpriseUsersAddUserResponse[];

        /** TeamsEnterpriseUsersAddTeamResponse success. */
        public success: boolean;

        /** TeamsEnterpriseUsersAddTeamResponse message. */
        public message: string;

        /** TeamsEnterpriseUsersAddTeamResponse resultCode. */
        public resultCode: string;

        /** TeamsEnterpriseUsersAddTeamResponse additionalInfo. */
        public additionalInfo: string;

        /**
         * Creates a new TeamsEnterpriseUsersAddTeamResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TeamsEnterpriseUsersAddTeamResponse instance
         */
        public static create(properties?: Enterprise.ITeamsEnterpriseUsersAddTeamResponse): Enterprise.TeamsEnterpriseUsersAddTeamResponse;

        /**
         * Encodes the specified TeamsEnterpriseUsersAddTeamResponse message. Does not implicitly {@link Enterprise.TeamsEnterpriseUsersAddTeamResponse.verify|verify} messages.
         * @param message TeamsEnterpriseUsersAddTeamResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ITeamsEnterpriseUsersAddTeamResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TeamsEnterpriseUsersAddTeamResponse message, length delimited. Does not implicitly {@link Enterprise.TeamsEnterpriseUsersAddTeamResponse.verify|verify} messages.
         * @param message TeamsEnterpriseUsersAddTeamResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ITeamsEnterpriseUsersAddTeamResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TeamsEnterpriseUsersAddTeamResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamsEnterpriseUsersAddTeamResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.TeamsEnterpriseUsersAddTeamResponse;

        /**
         * Decodes a TeamsEnterpriseUsersAddTeamResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TeamsEnterpriseUsersAddTeamResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.TeamsEnterpriseUsersAddTeamResponse;

        /**
         * Verifies a TeamsEnterpriseUsersAddTeamResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TeamsEnterpriseUsersAddTeamResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TeamsEnterpriseUsersAddTeamResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.TeamsEnterpriseUsersAddTeamResponse;

        /**
         * Creates a plain object from a TeamsEnterpriseUsersAddTeamResponse message. Also converts values to other types if specified.
         * @param message TeamsEnterpriseUsersAddTeamResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.TeamsEnterpriseUsersAddTeamResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TeamsEnterpriseUsersAddTeamResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TeamsEnterpriseUsersAddUserResponse. */
    interface ITeamsEnterpriseUsersAddUserResponse {

        /** TeamsEnterpriseUsersAddUserResponse enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** TeamsEnterpriseUsersAddUserResponse revision */
        revision?: (number|Long|null);

        /** TeamsEnterpriseUsersAddUserResponse success */
        success?: (boolean|null);

        /** TeamsEnterpriseUsersAddUserResponse message */
        message?: (string|null);

        /** TeamsEnterpriseUsersAddUserResponse resultCode */
        resultCode?: (string|null);

        /** TeamsEnterpriseUsersAddUserResponse additionalInfo */
        additionalInfo?: (string|null);
    }

    /** Represents a TeamsEnterpriseUsersAddUserResponse. */
    class TeamsEnterpriseUsersAddUserResponse implements ITeamsEnterpriseUsersAddUserResponse {

        /**
         * Constructs a new TeamsEnterpriseUsersAddUserResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.ITeamsEnterpriseUsersAddUserResponse);

        /** TeamsEnterpriseUsersAddUserResponse enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** TeamsEnterpriseUsersAddUserResponse revision. */
        public revision: (number|Long);

        /** TeamsEnterpriseUsersAddUserResponse success. */
        public success: boolean;

        /** TeamsEnterpriseUsersAddUserResponse message. */
        public message: string;

        /** TeamsEnterpriseUsersAddUserResponse resultCode. */
        public resultCode: string;

        /** TeamsEnterpriseUsersAddUserResponse additionalInfo. */
        public additionalInfo: string;

        /**
         * Creates a new TeamsEnterpriseUsersAddUserResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TeamsEnterpriseUsersAddUserResponse instance
         */
        public static create(properties?: Enterprise.ITeamsEnterpriseUsersAddUserResponse): Enterprise.TeamsEnterpriseUsersAddUserResponse;

        /**
         * Encodes the specified TeamsEnterpriseUsersAddUserResponse message. Does not implicitly {@link Enterprise.TeamsEnterpriseUsersAddUserResponse.verify|verify} messages.
         * @param message TeamsEnterpriseUsersAddUserResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.ITeamsEnterpriseUsersAddUserResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TeamsEnterpriseUsersAddUserResponse message, length delimited. Does not implicitly {@link Enterprise.TeamsEnterpriseUsersAddUserResponse.verify|verify} messages.
         * @param message TeamsEnterpriseUsersAddUserResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.ITeamsEnterpriseUsersAddUserResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TeamsEnterpriseUsersAddUserResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamsEnterpriseUsersAddUserResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.TeamsEnterpriseUsersAddUserResponse;

        /**
         * Decodes a TeamsEnterpriseUsersAddUserResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TeamsEnterpriseUsersAddUserResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.TeamsEnterpriseUsersAddUserResponse;

        /**
         * Verifies a TeamsEnterpriseUsersAddUserResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TeamsEnterpriseUsersAddUserResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TeamsEnterpriseUsersAddUserResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.TeamsEnterpriseUsersAddUserResponse;

        /**
         * Creates a plain object from a TeamsEnterpriseUsersAddUserResponse message. Also converts values to other types if specified.
         * @param message TeamsEnterpriseUsersAddUserResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.TeamsEnterpriseUsersAddUserResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TeamsEnterpriseUsersAddUserResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DomainAlias. */
    interface IDomainAlias {

        /** DomainAlias domain */
        domain?: (string|null);

        /** DomainAlias alias */
        alias?: (string|null);

        /** DomainAlias status */
        status?: (number|null);

        /** DomainAlias message */
        message?: (string|null);
    }

    /** Represents a DomainAlias. */
    class DomainAlias implements IDomainAlias {

        /**
         * Constructs a new DomainAlias.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IDomainAlias);

        /** DomainAlias domain. */
        public domain: string;

        /** DomainAlias alias. */
        public alias: string;

        /** DomainAlias status. */
        public status: number;

        /** DomainAlias message. */
        public message: string;

        /**
         * Creates a new DomainAlias instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DomainAlias instance
         */
        public static create(properties?: Enterprise.IDomainAlias): Enterprise.DomainAlias;

        /**
         * Encodes the specified DomainAlias message. Does not implicitly {@link Enterprise.DomainAlias.verify|verify} messages.
         * @param message DomainAlias message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IDomainAlias, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DomainAlias message, length delimited. Does not implicitly {@link Enterprise.DomainAlias.verify|verify} messages.
         * @param message DomainAlias message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IDomainAlias, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DomainAlias message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DomainAlias
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.DomainAlias;

        /**
         * Decodes a DomainAlias message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DomainAlias
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.DomainAlias;

        /**
         * Verifies a DomainAlias message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DomainAlias message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DomainAlias
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.DomainAlias;

        /**
         * Creates a plain object from a DomainAlias message. Also converts values to other types if specified.
         * @param message DomainAlias
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.DomainAlias, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DomainAlias to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DomainAliasRequest. */
    interface IDomainAliasRequest {

        /** DomainAliasRequest domainAlias */
        domainAlias?: (Enterprise.IDomainAlias[]|null);
    }

    /** Represents a DomainAliasRequest. */
    class DomainAliasRequest implements IDomainAliasRequest {

        /**
         * Constructs a new DomainAliasRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IDomainAliasRequest);

        /** DomainAliasRequest domainAlias. */
        public domainAlias: Enterprise.IDomainAlias[];

        /**
         * Creates a new DomainAliasRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DomainAliasRequest instance
         */
        public static create(properties?: Enterprise.IDomainAliasRequest): Enterprise.DomainAliasRequest;

        /**
         * Encodes the specified DomainAliasRequest message. Does not implicitly {@link Enterprise.DomainAliasRequest.verify|verify} messages.
         * @param message DomainAliasRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IDomainAliasRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DomainAliasRequest message, length delimited. Does not implicitly {@link Enterprise.DomainAliasRequest.verify|verify} messages.
         * @param message DomainAliasRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IDomainAliasRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DomainAliasRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DomainAliasRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.DomainAliasRequest;

        /**
         * Decodes a DomainAliasRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DomainAliasRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.DomainAliasRequest;

        /**
         * Verifies a DomainAliasRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DomainAliasRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DomainAliasRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.DomainAliasRequest;

        /**
         * Creates a plain object from a DomainAliasRequest message. Also converts values to other types if specified.
         * @param message DomainAliasRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.DomainAliasRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DomainAliasRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DomainAliasResponse. */
    interface IDomainAliasResponse {

        /** DomainAliasResponse domainAlias */
        domainAlias?: (Enterprise.IDomainAlias[]|null);
    }

    /** Represents a DomainAliasResponse. */
    class DomainAliasResponse implements IDomainAliasResponse {

        /**
         * Constructs a new DomainAliasResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IDomainAliasResponse);

        /** DomainAliasResponse domainAlias. */
        public domainAlias: Enterprise.IDomainAlias[];

        /**
         * Creates a new DomainAliasResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DomainAliasResponse instance
         */
        public static create(properties?: Enterprise.IDomainAliasResponse): Enterprise.DomainAliasResponse;

        /**
         * Encodes the specified DomainAliasResponse message. Does not implicitly {@link Enterprise.DomainAliasResponse.verify|verify} messages.
         * @param message DomainAliasResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IDomainAliasResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DomainAliasResponse message, length delimited. Does not implicitly {@link Enterprise.DomainAliasResponse.verify|verify} messages.
         * @param message DomainAliasResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IDomainAliasResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DomainAliasResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DomainAliasResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.DomainAliasResponse;

        /**
         * Decodes a DomainAliasResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DomainAliasResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.DomainAliasResponse;

        /**
         * Verifies a DomainAliasResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DomainAliasResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DomainAliasResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.DomainAliasResponse;

        /**
         * Creates a plain object from a DomainAliasResponse message. Also converts values to other types if specified.
         * @param message DomainAliasResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.DomainAliasResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DomainAliasResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseUsersProvisionRequest. */
    interface IEnterpriseUsersProvisionRequest {

        /** EnterpriseUsersProvisionRequest users */
        users?: (Enterprise.IEnterpriseUsersProvision[]|null);

        /** EnterpriseUsersProvisionRequest clientVersion */
        clientVersion?: (string|null);
    }

    /** Represents an EnterpriseUsersProvisionRequest. */
    class EnterpriseUsersProvisionRequest implements IEnterpriseUsersProvisionRequest {

        /**
         * Constructs a new EnterpriseUsersProvisionRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEnterpriseUsersProvisionRequest);

        /** EnterpriseUsersProvisionRequest users. */
        public users: Enterprise.IEnterpriseUsersProvision[];

        /** EnterpriseUsersProvisionRequest clientVersion. */
        public clientVersion: string;

        /**
         * Creates a new EnterpriseUsersProvisionRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseUsersProvisionRequest instance
         */
        public static create(properties?: Enterprise.IEnterpriseUsersProvisionRequest): Enterprise.EnterpriseUsersProvisionRequest;

        /**
         * Encodes the specified EnterpriseUsersProvisionRequest message. Does not implicitly {@link Enterprise.EnterpriseUsersProvisionRequest.verify|verify} messages.
         * @param message EnterpriseUsersProvisionRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEnterpriseUsersProvisionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseUsersProvisionRequest message, length delimited. Does not implicitly {@link Enterprise.EnterpriseUsersProvisionRequest.verify|verify} messages.
         * @param message EnterpriseUsersProvisionRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEnterpriseUsersProvisionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseUsersProvisionRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseUsersProvisionRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EnterpriseUsersProvisionRequest;

        /**
         * Decodes an EnterpriseUsersProvisionRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseUsersProvisionRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EnterpriseUsersProvisionRequest;

        /**
         * Verifies an EnterpriseUsersProvisionRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseUsersProvisionRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseUsersProvisionRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EnterpriseUsersProvisionRequest;

        /**
         * Creates a plain object from an EnterpriseUsersProvisionRequest message. Also converts values to other types if specified.
         * @param message EnterpriseUsersProvisionRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EnterpriseUsersProvisionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseUsersProvisionRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseUsersProvision. */
    interface IEnterpriseUsersProvision {

        /** EnterpriseUsersProvision enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** EnterpriseUsersProvision username */
        username?: (string|null);

        /** EnterpriseUsersProvision nodeId */
        nodeId?: (number|Long|null);

        /** EnterpriseUsersProvision encryptedData */
        encryptedData?: (string|null);

        /** EnterpriseUsersProvision keyType */
        keyType?: (Enterprise.EncryptedKeyType|null);

        /** EnterpriseUsersProvision fullName */
        fullName?: (string|null);

        /** EnterpriseUsersProvision jobTitle */
        jobTitle?: (string|null);

        /** EnterpriseUsersProvision enterpriseUsersDataKey */
        enterpriseUsersDataKey?: (Uint8Array|null);

        /** EnterpriseUsersProvision authVerifier */
        authVerifier?: (Uint8Array|null);

        /** EnterpriseUsersProvision encryptionParams */
        encryptionParams?: (Uint8Array|null);

        /** EnterpriseUsersProvision rsaPublicKey */
        rsaPublicKey?: (Uint8Array|null);

        /** EnterpriseUsersProvision rsaEncryptedPrivateKey */
        rsaEncryptedPrivateKey?: (Uint8Array|null);

        /** EnterpriseUsersProvision eccPublicKey */
        eccPublicKey?: (Uint8Array|null);

        /** EnterpriseUsersProvision eccEncryptedPrivateKey */
        eccEncryptedPrivateKey?: (Uint8Array|null);

        /** EnterpriseUsersProvision encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);

        /** EnterpriseUsersProvision encryptedClientKey */
        encryptedClientKey?: (Uint8Array|null);
    }

    /** Represents an EnterpriseUsersProvision. */
    class EnterpriseUsersProvision implements IEnterpriseUsersProvision {

        /**
         * Constructs a new EnterpriseUsersProvision.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEnterpriseUsersProvision);

        /** EnterpriseUsersProvision enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** EnterpriseUsersProvision username. */
        public username: string;

        /** EnterpriseUsersProvision nodeId. */
        public nodeId: (number|Long);

        /** EnterpriseUsersProvision encryptedData. */
        public encryptedData: string;

        /** EnterpriseUsersProvision keyType. */
        public keyType: Enterprise.EncryptedKeyType;

        /** EnterpriseUsersProvision fullName. */
        public fullName: string;

        /** EnterpriseUsersProvision jobTitle. */
        public jobTitle: string;

        /** EnterpriseUsersProvision enterpriseUsersDataKey. */
        public enterpriseUsersDataKey: Uint8Array;

        /** EnterpriseUsersProvision authVerifier. */
        public authVerifier: Uint8Array;

        /** EnterpriseUsersProvision encryptionParams. */
        public encryptionParams: Uint8Array;

        /** EnterpriseUsersProvision rsaPublicKey. */
        public rsaPublicKey: Uint8Array;

        /** EnterpriseUsersProvision rsaEncryptedPrivateKey. */
        public rsaEncryptedPrivateKey: Uint8Array;

        /** EnterpriseUsersProvision eccPublicKey. */
        public eccPublicKey: Uint8Array;

        /** EnterpriseUsersProvision eccEncryptedPrivateKey. */
        public eccEncryptedPrivateKey: Uint8Array;

        /** EnterpriseUsersProvision encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /** EnterpriseUsersProvision encryptedClientKey. */
        public encryptedClientKey: Uint8Array;

        /**
         * Creates a new EnterpriseUsersProvision instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseUsersProvision instance
         */
        public static create(properties?: Enterprise.IEnterpriseUsersProvision): Enterprise.EnterpriseUsersProvision;

        /**
         * Encodes the specified EnterpriseUsersProvision message. Does not implicitly {@link Enterprise.EnterpriseUsersProvision.verify|verify} messages.
         * @param message EnterpriseUsersProvision message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEnterpriseUsersProvision, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseUsersProvision message, length delimited. Does not implicitly {@link Enterprise.EnterpriseUsersProvision.verify|verify} messages.
         * @param message EnterpriseUsersProvision message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEnterpriseUsersProvision, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseUsersProvision message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseUsersProvision
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EnterpriseUsersProvision;

        /**
         * Decodes an EnterpriseUsersProvision message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseUsersProvision
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EnterpriseUsersProvision;

        /**
         * Verifies an EnterpriseUsersProvision message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseUsersProvision message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseUsersProvision
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EnterpriseUsersProvision;

        /**
         * Creates a plain object from an EnterpriseUsersProvision message. Also converts values to other types if specified.
         * @param message EnterpriseUsersProvision
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EnterpriseUsersProvision, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseUsersProvision to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseUsersProvisionResponse. */
    interface IEnterpriseUsersProvisionResponse {

        /** EnterpriseUsersProvisionResponse results */
        results?: (Enterprise.IEnterpriseUsersProvisionResult[]|null);
    }

    /** Represents an EnterpriseUsersProvisionResponse. */
    class EnterpriseUsersProvisionResponse implements IEnterpriseUsersProvisionResponse {

        /**
         * Constructs a new EnterpriseUsersProvisionResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEnterpriseUsersProvisionResponse);

        /** EnterpriseUsersProvisionResponse results. */
        public results: Enterprise.IEnterpriseUsersProvisionResult[];

        /**
         * Creates a new EnterpriseUsersProvisionResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseUsersProvisionResponse instance
         */
        public static create(properties?: Enterprise.IEnterpriseUsersProvisionResponse): Enterprise.EnterpriseUsersProvisionResponse;

        /**
         * Encodes the specified EnterpriseUsersProvisionResponse message. Does not implicitly {@link Enterprise.EnterpriseUsersProvisionResponse.verify|verify} messages.
         * @param message EnterpriseUsersProvisionResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEnterpriseUsersProvisionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseUsersProvisionResponse message, length delimited. Does not implicitly {@link Enterprise.EnterpriseUsersProvisionResponse.verify|verify} messages.
         * @param message EnterpriseUsersProvisionResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEnterpriseUsersProvisionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseUsersProvisionResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseUsersProvisionResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EnterpriseUsersProvisionResponse;

        /**
         * Decodes an EnterpriseUsersProvisionResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseUsersProvisionResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EnterpriseUsersProvisionResponse;

        /**
         * Verifies an EnterpriseUsersProvisionResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseUsersProvisionResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseUsersProvisionResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EnterpriseUsersProvisionResponse;

        /**
         * Creates a plain object from an EnterpriseUsersProvisionResponse message. Also converts values to other types if specified.
         * @param message EnterpriseUsersProvisionResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EnterpriseUsersProvisionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseUsersProvisionResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseUsersProvisionResult. */
    interface IEnterpriseUsersProvisionResult {

        /** EnterpriseUsersProvisionResult enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** EnterpriseUsersProvisionResult code */
        code?: (string|null);

        /** EnterpriseUsersProvisionResult message */
        message?: (string|null);

        /** EnterpriseUsersProvisionResult additionalInfo */
        additionalInfo?: (string|null);
    }

    /** Represents an EnterpriseUsersProvisionResult. */
    class EnterpriseUsersProvisionResult implements IEnterpriseUsersProvisionResult {

        /**
         * Constructs a new EnterpriseUsersProvisionResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEnterpriseUsersProvisionResult);

        /** EnterpriseUsersProvisionResult enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** EnterpriseUsersProvisionResult code. */
        public code: string;

        /** EnterpriseUsersProvisionResult message. */
        public message: string;

        /** EnterpriseUsersProvisionResult additionalInfo. */
        public additionalInfo: string;

        /**
         * Creates a new EnterpriseUsersProvisionResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseUsersProvisionResult instance
         */
        public static create(properties?: Enterprise.IEnterpriseUsersProvisionResult): Enterprise.EnterpriseUsersProvisionResult;

        /**
         * Encodes the specified EnterpriseUsersProvisionResult message. Does not implicitly {@link Enterprise.EnterpriseUsersProvisionResult.verify|verify} messages.
         * @param message EnterpriseUsersProvisionResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEnterpriseUsersProvisionResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseUsersProvisionResult message, length delimited. Does not implicitly {@link Enterprise.EnterpriseUsersProvisionResult.verify|verify} messages.
         * @param message EnterpriseUsersProvisionResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEnterpriseUsersProvisionResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseUsersProvisionResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseUsersProvisionResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EnterpriseUsersProvisionResult;

        /**
         * Decodes an EnterpriseUsersProvisionResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseUsersProvisionResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EnterpriseUsersProvisionResult;

        /**
         * Verifies an EnterpriseUsersProvisionResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseUsersProvisionResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseUsersProvisionResult
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EnterpriseUsersProvisionResult;

        /**
         * Creates a plain object from an EnterpriseUsersProvisionResult message. Also converts values to other types if specified.
         * @param message EnterpriseUsersProvisionResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EnterpriseUsersProvisionResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseUsersProvisionResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseUsersAddRequest. */
    interface IEnterpriseUsersAddRequest {

        /** EnterpriseUsersAddRequest users */
        users?: (Enterprise.IEnterpriseUsersAdd[]|null);

        /** EnterpriseUsersAddRequest clientVersion */
        clientVersion?: (string|null);
    }

    /** Represents an EnterpriseUsersAddRequest. */
    class EnterpriseUsersAddRequest implements IEnterpriseUsersAddRequest {

        /**
         * Constructs a new EnterpriseUsersAddRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEnterpriseUsersAddRequest);

        /** EnterpriseUsersAddRequest users. */
        public users: Enterprise.IEnterpriseUsersAdd[];

        /** EnterpriseUsersAddRequest clientVersion. */
        public clientVersion: string;

        /**
         * Creates a new EnterpriseUsersAddRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseUsersAddRequest instance
         */
        public static create(properties?: Enterprise.IEnterpriseUsersAddRequest): Enterprise.EnterpriseUsersAddRequest;

        /**
         * Encodes the specified EnterpriseUsersAddRequest message. Does not implicitly {@link Enterprise.EnterpriseUsersAddRequest.verify|verify} messages.
         * @param message EnterpriseUsersAddRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEnterpriseUsersAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseUsersAddRequest message, length delimited. Does not implicitly {@link Enterprise.EnterpriseUsersAddRequest.verify|verify} messages.
         * @param message EnterpriseUsersAddRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEnterpriseUsersAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseUsersAddRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseUsersAddRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EnterpriseUsersAddRequest;

        /**
         * Decodes an EnterpriseUsersAddRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseUsersAddRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EnterpriseUsersAddRequest;

        /**
         * Verifies an EnterpriseUsersAddRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseUsersAddRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseUsersAddRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EnterpriseUsersAddRequest;

        /**
         * Creates a plain object from an EnterpriseUsersAddRequest message. Also converts values to other types if specified.
         * @param message EnterpriseUsersAddRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EnterpriseUsersAddRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseUsersAddRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseUsersAdd. */
    interface IEnterpriseUsersAdd {

        /** EnterpriseUsersAdd enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** EnterpriseUsersAdd username */
        username?: (string|null);

        /** EnterpriseUsersAdd nodeId */
        nodeId?: (number|Long|null);

        /** EnterpriseUsersAdd encryptedData */
        encryptedData?: (string|null);

        /** EnterpriseUsersAdd keyType */
        keyType?: (Enterprise.EncryptedKeyType|null);

        /** EnterpriseUsersAdd fullName */
        fullName?: (string|null);

        /** EnterpriseUsersAdd jobTitle */
        jobTitle?: (string|null);

        /** EnterpriseUsersAdd suppressEmailInvite */
        suppressEmailInvite?: (boolean|null);

        /** EnterpriseUsersAdd inviteeLocale */
        inviteeLocale?: (string|null);

        /** EnterpriseUsersAdd move */
        move?: (boolean|null);

        /** EnterpriseUsersAdd roleId */
        roleId?: (number|Long|null);
    }

    /** Represents an EnterpriseUsersAdd. */
    class EnterpriseUsersAdd implements IEnterpriseUsersAdd {

        /**
         * Constructs a new EnterpriseUsersAdd.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEnterpriseUsersAdd);

        /** EnterpriseUsersAdd enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** EnterpriseUsersAdd username. */
        public username: string;

        /** EnterpriseUsersAdd nodeId. */
        public nodeId: (number|Long);

        /** EnterpriseUsersAdd encryptedData. */
        public encryptedData: string;

        /** EnterpriseUsersAdd keyType. */
        public keyType: Enterprise.EncryptedKeyType;

        /** EnterpriseUsersAdd fullName. */
        public fullName: string;

        /** EnterpriseUsersAdd jobTitle. */
        public jobTitle: string;

        /** EnterpriseUsersAdd suppressEmailInvite. */
        public suppressEmailInvite: boolean;

        /** EnterpriseUsersAdd inviteeLocale. */
        public inviteeLocale: string;

        /** EnterpriseUsersAdd move. */
        public move: boolean;

        /** EnterpriseUsersAdd roleId. */
        public roleId: (number|Long);

        /**
         * Creates a new EnterpriseUsersAdd instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseUsersAdd instance
         */
        public static create(properties?: Enterprise.IEnterpriseUsersAdd): Enterprise.EnterpriseUsersAdd;

        /**
         * Encodes the specified EnterpriseUsersAdd message. Does not implicitly {@link Enterprise.EnterpriseUsersAdd.verify|verify} messages.
         * @param message EnterpriseUsersAdd message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEnterpriseUsersAdd, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseUsersAdd message, length delimited. Does not implicitly {@link Enterprise.EnterpriseUsersAdd.verify|verify} messages.
         * @param message EnterpriseUsersAdd message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEnterpriseUsersAdd, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseUsersAdd message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseUsersAdd
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EnterpriseUsersAdd;

        /**
         * Decodes an EnterpriseUsersAdd message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseUsersAdd
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EnterpriseUsersAdd;

        /**
         * Verifies an EnterpriseUsersAdd message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseUsersAdd message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseUsersAdd
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EnterpriseUsersAdd;

        /**
         * Creates a plain object from an EnterpriseUsersAdd message. Also converts values to other types if specified.
         * @param message EnterpriseUsersAdd
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EnterpriseUsersAdd, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseUsersAdd to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseUsersAddResponse. */
    interface IEnterpriseUsersAddResponse {

        /** EnterpriseUsersAddResponse results */
        results?: (Enterprise.IEnterpriseUsersAddResult[]|null);

        /** EnterpriseUsersAddResponse success */
        success?: (boolean|null);

        /** EnterpriseUsersAddResponse code */
        code?: (string|null);

        /** EnterpriseUsersAddResponse message */
        message?: (string|null);

        /** EnterpriseUsersAddResponse additionalInfo */
        additionalInfo?: (string|null);
    }

    /** Represents an EnterpriseUsersAddResponse. */
    class EnterpriseUsersAddResponse implements IEnterpriseUsersAddResponse {

        /**
         * Constructs a new EnterpriseUsersAddResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEnterpriseUsersAddResponse);

        /** EnterpriseUsersAddResponse results. */
        public results: Enterprise.IEnterpriseUsersAddResult[];

        /** EnterpriseUsersAddResponse success. */
        public success: boolean;

        /** EnterpriseUsersAddResponse code. */
        public code: string;

        /** EnterpriseUsersAddResponse message. */
        public message: string;

        /** EnterpriseUsersAddResponse additionalInfo. */
        public additionalInfo: string;

        /**
         * Creates a new EnterpriseUsersAddResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseUsersAddResponse instance
         */
        public static create(properties?: Enterprise.IEnterpriseUsersAddResponse): Enterprise.EnterpriseUsersAddResponse;

        /**
         * Encodes the specified EnterpriseUsersAddResponse message. Does not implicitly {@link Enterprise.EnterpriseUsersAddResponse.verify|verify} messages.
         * @param message EnterpriseUsersAddResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEnterpriseUsersAddResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseUsersAddResponse message, length delimited. Does not implicitly {@link Enterprise.EnterpriseUsersAddResponse.verify|verify} messages.
         * @param message EnterpriseUsersAddResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEnterpriseUsersAddResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseUsersAddResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseUsersAddResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EnterpriseUsersAddResponse;

        /**
         * Decodes an EnterpriseUsersAddResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseUsersAddResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EnterpriseUsersAddResponse;

        /**
         * Verifies an EnterpriseUsersAddResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseUsersAddResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseUsersAddResponse
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EnterpriseUsersAddResponse;

        /**
         * Creates a plain object from an EnterpriseUsersAddResponse message. Also converts values to other types if specified.
         * @param message EnterpriseUsersAddResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EnterpriseUsersAddResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseUsersAddResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseUsersAddResult. */
    interface IEnterpriseUsersAddResult {

        /** EnterpriseUsersAddResult enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** EnterpriseUsersAddResult success */
        success?: (boolean|null);

        /** EnterpriseUsersAddResult verificationCode */
        verificationCode?: (string|null);

        /** EnterpriseUsersAddResult code */
        code?: (string|null);

        /** EnterpriseUsersAddResult message */
        message?: (string|null);

        /** EnterpriseUsersAddResult additionalInfo */
        additionalInfo?: (string|null);
    }

    /** Represents an EnterpriseUsersAddResult. */
    class EnterpriseUsersAddResult implements IEnterpriseUsersAddResult {

        /**
         * Constructs a new EnterpriseUsersAddResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IEnterpriseUsersAddResult);

        /** EnterpriseUsersAddResult enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** EnterpriseUsersAddResult success. */
        public success: boolean;

        /** EnterpriseUsersAddResult verificationCode. */
        public verificationCode: string;

        /** EnterpriseUsersAddResult code. */
        public code: string;

        /** EnterpriseUsersAddResult message. */
        public message: string;

        /** EnterpriseUsersAddResult additionalInfo. */
        public additionalInfo: string;

        /**
         * Creates a new EnterpriseUsersAddResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseUsersAddResult instance
         */
        public static create(properties?: Enterprise.IEnterpriseUsersAddResult): Enterprise.EnterpriseUsersAddResult;

        /**
         * Encodes the specified EnterpriseUsersAddResult message. Does not implicitly {@link Enterprise.EnterpriseUsersAddResult.verify|verify} messages.
         * @param message EnterpriseUsersAddResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IEnterpriseUsersAddResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseUsersAddResult message, length delimited. Does not implicitly {@link Enterprise.EnterpriseUsersAddResult.verify|verify} messages.
         * @param message EnterpriseUsersAddResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IEnterpriseUsersAddResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseUsersAddResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseUsersAddResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.EnterpriseUsersAddResult;

        /**
         * Decodes an EnterpriseUsersAddResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseUsersAddResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.EnterpriseUsersAddResult;

        /**
         * Verifies an EnterpriseUsersAddResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseUsersAddResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseUsersAddResult
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.EnterpriseUsersAddResult;

        /**
         * Creates a plain object from an EnterpriseUsersAddResult message. Also converts values to other types if specified.
         * @param message EnterpriseUsersAddResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.EnterpriseUsersAddResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseUsersAddResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UpdateMSPPermitsRequest. */
    interface IUpdateMSPPermitsRequest {

        /** UpdateMSPPermitsRequest mspEnterpriseId */
        mspEnterpriseId?: (number|null);

        /** UpdateMSPPermitsRequest maxAllowedLicenses */
        maxAllowedLicenses?: (number|null);

        /** UpdateMSPPermitsRequest allowedMcProducts */
        allowedMcProducts?: (string[]|null);

        /** UpdateMSPPermitsRequest allowedAddOns */
        allowedAddOns?: (string[]|null);

        /** UpdateMSPPermitsRequest maxFilePlanType */
        maxFilePlanType?: (string|null);

        /** UpdateMSPPermitsRequest allowUnlimitedLicenses */
        allowUnlimitedLicenses?: (boolean|null);
    }

    /** Represents an UpdateMSPPermitsRequest. */
    class UpdateMSPPermitsRequest implements IUpdateMSPPermitsRequest {

        /**
         * Constructs a new UpdateMSPPermitsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Enterprise.IUpdateMSPPermitsRequest);

        /** UpdateMSPPermitsRequest mspEnterpriseId. */
        public mspEnterpriseId: number;

        /** UpdateMSPPermitsRequest maxAllowedLicenses. */
        public maxAllowedLicenses: number;

        /** UpdateMSPPermitsRequest allowedMcProducts. */
        public allowedMcProducts: string[];

        /** UpdateMSPPermitsRequest allowedAddOns. */
        public allowedAddOns: string[];

        /** UpdateMSPPermitsRequest maxFilePlanType. */
        public maxFilePlanType: string;

        /** UpdateMSPPermitsRequest allowUnlimitedLicenses. */
        public allowUnlimitedLicenses: boolean;

        /**
         * Creates a new UpdateMSPPermitsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UpdateMSPPermitsRequest instance
         */
        public static create(properties?: Enterprise.IUpdateMSPPermitsRequest): Enterprise.UpdateMSPPermitsRequest;

        /**
         * Encodes the specified UpdateMSPPermitsRequest message. Does not implicitly {@link Enterprise.UpdateMSPPermitsRequest.verify|verify} messages.
         * @param message UpdateMSPPermitsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Enterprise.IUpdateMSPPermitsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UpdateMSPPermitsRequest message, length delimited. Does not implicitly {@link Enterprise.UpdateMSPPermitsRequest.verify|verify} messages.
         * @param message UpdateMSPPermitsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Enterprise.IUpdateMSPPermitsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UpdateMSPPermitsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UpdateMSPPermitsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Enterprise.UpdateMSPPermitsRequest;

        /**
         * Decodes an UpdateMSPPermitsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UpdateMSPPermitsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Enterprise.UpdateMSPPermitsRequest;

        /**
         * Verifies an UpdateMSPPermitsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UpdateMSPPermitsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UpdateMSPPermitsRequest
         */
        public static fromObject(object: { [k: string]: any }): Enterprise.UpdateMSPPermitsRequest;

        /**
         * Creates a plain object from an UpdateMSPPermitsRequest message. Also converts values to other types if specified.
         * @param message UpdateMSPPermitsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Enterprise.UpdateMSPPermitsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UpdateMSPPermitsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** AppClientType enum. */
    enum AppClientType {
        NOT_USED = 0,
        GENERAL = 1,
        DISCOVERY_AND_ROTATION_CONTROLLER = 2,
        KCM_CONTROLLER = 3
    }
}

/** Namespace AccountSummary. */
export namespace AccountSummary {

    /** Properties of an AccountSummaryRequest. */
    interface IAccountSummaryRequest {

        /** AccountSummaryRequest summaryVersion */
        summaryVersion?: (number|null);
    }

    /** Represents an AccountSummaryRequest. */
    class AccountSummaryRequest implements IAccountSummaryRequest {

        /**
         * Constructs a new AccountSummaryRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: AccountSummary.IAccountSummaryRequest);

        /** AccountSummaryRequest summaryVersion. */
        public summaryVersion: number;

        /**
         * Creates a new AccountSummaryRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AccountSummaryRequest instance
         */
        public static create(properties?: AccountSummary.IAccountSummaryRequest): AccountSummary.AccountSummaryRequest;

        /**
         * Encodes the specified AccountSummaryRequest message. Does not implicitly {@link AccountSummary.AccountSummaryRequest.verify|verify} messages.
         * @param message AccountSummaryRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: AccountSummary.IAccountSummaryRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AccountSummaryRequest message, length delimited. Does not implicitly {@link AccountSummary.AccountSummaryRequest.verify|verify} messages.
         * @param message AccountSummaryRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: AccountSummary.IAccountSummaryRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AccountSummaryRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AccountSummaryRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AccountSummary.AccountSummaryRequest;

        /**
         * Decodes an AccountSummaryRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AccountSummaryRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AccountSummary.AccountSummaryRequest;

        /**
         * Verifies an AccountSummaryRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AccountSummaryRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AccountSummaryRequest
         */
        public static fromObject(object: { [k: string]: any }): AccountSummary.AccountSummaryRequest;

        /**
         * Creates a plain object from an AccountSummaryRequest message. Also converts values to other types if specified.
         * @param message AccountSummaryRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: AccountSummary.AccountSummaryRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AccountSummaryRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AccountSummaryElements. */
    interface IAccountSummaryElements {

        /** AccountSummaryElements clientKey */
        clientKey?: (Uint8Array|null);

        /** AccountSummaryElements settings */
        settings?: (AccountSummary.ISettings|null);

        /** AccountSummaryElements keysInfo */
        keysInfo?: (AccountSummary.IKeysInfo|null);

        /** AccountSummaryElements syncLogs */
        syncLogs?: (AccountSummary.ISyncLog[]|null);

        /** AccountSummaryElements isEnterpriseAdmin */
        isEnterpriseAdmin?: (boolean|null);

        /** AccountSummaryElements license */
        license?: (AccountSummary.ILicense|null);

        /** AccountSummaryElements group */
        group?: (AccountSummary.IGroup|null);

        /** AccountSummaryElements Enforcements */
        Enforcements?: (AccountSummary.IEnforcements|null);

        /** AccountSummaryElements Images */
        Images?: (AccountSummary.IKeyValue[]|null);

        /** AccountSummaryElements personalLicense */
        personalLicense?: (AccountSummary.ILicense|null);

        /** AccountSummaryElements fixSharedFolderRecords */
        fixSharedFolderRecords?: (boolean|null);

        /** AccountSummaryElements usernames */
        usernames?: (string[]|null);

        /** AccountSummaryElements devices */
        devices?: (AccountSummary.IDeviceInfo[]|null);

        /** AccountSummaryElements isShareAdmin */
        isShareAdmin?: (boolean|null);
    }

    /** Represents an AccountSummaryElements. */
    class AccountSummaryElements implements IAccountSummaryElements {

        /**
         * Constructs a new AccountSummaryElements.
         * @param [properties] Properties to set
         */
        constructor(properties?: AccountSummary.IAccountSummaryElements);

        /** AccountSummaryElements clientKey. */
        public clientKey: Uint8Array;

        /** AccountSummaryElements settings. */
        public settings?: (AccountSummary.ISettings|null);

        /** AccountSummaryElements keysInfo. */
        public keysInfo?: (AccountSummary.IKeysInfo|null);

        /** AccountSummaryElements syncLogs. */
        public syncLogs: AccountSummary.ISyncLog[];

        /** AccountSummaryElements isEnterpriseAdmin. */
        public isEnterpriseAdmin: boolean;

        /** AccountSummaryElements license. */
        public license?: (AccountSummary.ILicense|null);

        /** AccountSummaryElements group. */
        public group?: (AccountSummary.IGroup|null);

        /** AccountSummaryElements Enforcements. */
        public Enforcements?: (AccountSummary.IEnforcements|null);

        /** AccountSummaryElements Images. */
        public Images: AccountSummary.IKeyValue[];

        /** AccountSummaryElements personalLicense. */
        public personalLicense?: (AccountSummary.ILicense|null);

        /** AccountSummaryElements fixSharedFolderRecords. */
        public fixSharedFolderRecords: boolean;

        /** AccountSummaryElements usernames. */
        public usernames: string[];

        /** AccountSummaryElements devices. */
        public devices: AccountSummary.IDeviceInfo[];

        /** AccountSummaryElements isShareAdmin. */
        public isShareAdmin: boolean;

        /**
         * Creates a new AccountSummaryElements instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AccountSummaryElements instance
         */
        public static create(properties?: AccountSummary.IAccountSummaryElements): AccountSummary.AccountSummaryElements;

        /**
         * Encodes the specified AccountSummaryElements message. Does not implicitly {@link AccountSummary.AccountSummaryElements.verify|verify} messages.
         * @param message AccountSummaryElements message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: AccountSummary.IAccountSummaryElements, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AccountSummaryElements message, length delimited. Does not implicitly {@link AccountSummary.AccountSummaryElements.verify|verify} messages.
         * @param message AccountSummaryElements message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: AccountSummary.IAccountSummaryElements, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AccountSummaryElements message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AccountSummaryElements
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AccountSummary.AccountSummaryElements;

        /**
         * Decodes an AccountSummaryElements message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AccountSummaryElements
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AccountSummary.AccountSummaryElements;

        /**
         * Verifies an AccountSummaryElements message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AccountSummaryElements message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AccountSummaryElements
         */
        public static fromObject(object: { [k: string]: any }): AccountSummary.AccountSummaryElements;

        /**
         * Creates a plain object from an AccountSummaryElements message. Also converts values to other types if specified.
         * @param message AccountSummaryElements
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: AccountSummary.AccountSummaryElements, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AccountSummaryElements to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeviceInfo. */
    interface IDeviceInfo {

        /** DeviceInfo encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);

        /** DeviceInfo deviceName */
        deviceName?: (string|null);

        /** DeviceInfo deviceStatus */
        deviceStatus?: (Authentication.DeviceStatus|null);

        /** DeviceInfo devicePublicKey */
        devicePublicKey?: (Uint8Array|null);

        /** DeviceInfo encryptedDataKeyDoNotUse */
        encryptedDataKeyDoNotUse?: (Uint8Array|null);

        /** DeviceInfo clientVersion */
        clientVersion?: (string|null);

        /** DeviceInfo username */
        username?: (string|null);

        /** DeviceInfo ipAddress */
        ipAddress?: (string|null);

        /** DeviceInfo approveRequestTime */
        approveRequestTime?: (number|Long|null);

        /** DeviceInfo encryptedDataKeyPresent */
        encryptedDataKeyPresent?: (boolean|null);

        /** DeviceInfo groupId */
        groupId?: (number|Long|null);
    }

    /** Represents a DeviceInfo. */
    class DeviceInfo implements IDeviceInfo {

        /**
         * Constructs a new DeviceInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: AccountSummary.IDeviceInfo);

        /** DeviceInfo encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /** DeviceInfo deviceName. */
        public deviceName: string;

        /** DeviceInfo deviceStatus. */
        public deviceStatus: Authentication.DeviceStatus;

        /** DeviceInfo devicePublicKey. */
        public devicePublicKey: Uint8Array;

        /** DeviceInfo encryptedDataKeyDoNotUse. */
        public encryptedDataKeyDoNotUse: Uint8Array;

        /** DeviceInfo clientVersion. */
        public clientVersion: string;

        /** DeviceInfo username. */
        public username: string;

        /** DeviceInfo ipAddress. */
        public ipAddress: string;

        /** DeviceInfo approveRequestTime. */
        public approveRequestTime: (number|Long);

        /** DeviceInfo encryptedDataKeyPresent. */
        public encryptedDataKeyPresent: boolean;

        /** DeviceInfo groupId. */
        public groupId: (number|Long);

        /**
         * Creates a new DeviceInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeviceInfo instance
         */
        public static create(properties?: AccountSummary.IDeviceInfo): AccountSummary.DeviceInfo;

        /**
         * Encodes the specified DeviceInfo message. Does not implicitly {@link AccountSummary.DeviceInfo.verify|verify} messages.
         * @param message DeviceInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: AccountSummary.IDeviceInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeviceInfo message, length delimited. Does not implicitly {@link AccountSummary.DeviceInfo.verify|verify} messages.
         * @param message DeviceInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: AccountSummary.IDeviceInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeviceInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeviceInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AccountSummary.DeviceInfo;

        /**
         * Decodes a DeviceInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeviceInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AccountSummary.DeviceInfo;

        /**
         * Verifies a DeviceInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeviceInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeviceInfo
         */
        public static fromObject(object: { [k: string]: any }): AccountSummary.DeviceInfo;

        /**
         * Creates a plain object from a DeviceInfo message. Also converts values to other types if specified.
         * @param message DeviceInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: AccountSummary.DeviceInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeviceInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KeysInfo. */
    interface IKeysInfo {

        /** KeysInfo encryptionParams */
        encryptionParams?: (Uint8Array|null);

        /** KeysInfo encryptedDataKey */
        encryptedDataKey?: (Uint8Array|null);

        /** KeysInfo dataKeyBackupDate */
        dataKeyBackupDate?: (number|null);

        /** KeysInfo userAuthUid */
        userAuthUid?: (Uint8Array|null);

        /** KeysInfo encryptedPrivateKey */
        encryptedPrivateKey?: (Uint8Array|null);

        /** KeysInfo encryptedEccPrivateKey */
        encryptedEccPrivateKey?: (Uint8Array|null);

        /** KeysInfo eccPublicKey */
        eccPublicKey?: (Uint8Array|null);
    }

    /** Represents a KeysInfo. */
    class KeysInfo implements IKeysInfo {

        /**
         * Constructs a new KeysInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: AccountSummary.IKeysInfo);

        /** KeysInfo encryptionParams. */
        public encryptionParams: Uint8Array;

        /** KeysInfo encryptedDataKey. */
        public encryptedDataKey: Uint8Array;

        /** KeysInfo dataKeyBackupDate. */
        public dataKeyBackupDate: number;

        /** KeysInfo userAuthUid. */
        public userAuthUid: Uint8Array;

        /** KeysInfo encryptedPrivateKey. */
        public encryptedPrivateKey: Uint8Array;

        /** KeysInfo encryptedEccPrivateKey. */
        public encryptedEccPrivateKey: Uint8Array;

        /** KeysInfo eccPublicKey. */
        public eccPublicKey: Uint8Array;

        /**
         * Creates a new KeysInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KeysInfo instance
         */
        public static create(properties?: AccountSummary.IKeysInfo): AccountSummary.KeysInfo;

        /**
         * Encodes the specified KeysInfo message. Does not implicitly {@link AccountSummary.KeysInfo.verify|verify} messages.
         * @param message KeysInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: AccountSummary.IKeysInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KeysInfo message, length delimited. Does not implicitly {@link AccountSummary.KeysInfo.verify|verify} messages.
         * @param message KeysInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: AccountSummary.IKeysInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KeysInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KeysInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AccountSummary.KeysInfo;

        /**
         * Decodes a KeysInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KeysInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AccountSummary.KeysInfo;

        /**
         * Verifies a KeysInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KeysInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KeysInfo
         */
        public static fromObject(object: { [k: string]: any }): AccountSummary.KeysInfo;

        /**
         * Creates a plain object from a KeysInfo message. Also converts values to other types if specified.
         * @param message KeysInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: AccountSummary.KeysInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KeysInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SyncLog. */
    interface ISyncLog {

        /** SyncLog countryName */
        countryName?: (string|null);

        /** SyncLog secondsAgo */
        secondsAgo?: (number|Long|null);

        /** SyncLog deviceName */
        deviceName?: (string|null);

        /** SyncLog countryCode */
        countryCode?: (string|null);

        /** SyncLog deviceUID */
        deviceUID?: (Uint8Array|null);

        /** SyncLog ipAddress */
        ipAddress?: (string|null);
    }

    /** Represents a SyncLog. */
    class SyncLog implements ISyncLog {

        /**
         * Constructs a new SyncLog.
         * @param [properties] Properties to set
         */
        constructor(properties?: AccountSummary.ISyncLog);

        /** SyncLog countryName. */
        public countryName: string;

        /** SyncLog secondsAgo. */
        public secondsAgo: (number|Long);

        /** SyncLog deviceName. */
        public deviceName: string;

        /** SyncLog countryCode. */
        public countryCode: string;

        /** SyncLog deviceUID. */
        public deviceUID: Uint8Array;

        /** SyncLog ipAddress. */
        public ipAddress: string;

        /**
         * Creates a new SyncLog instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SyncLog instance
         */
        public static create(properties?: AccountSummary.ISyncLog): AccountSummary.SyncLog;

        /**
         * Encodes the specified SyncLog message. Does not implicitly {@link AccountSummary.SyncLog.verify|verify} messages.
         * @param message SyncLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: AccountSummary.ISyncLog, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SyncLog message, length delimited. Does not implicitly {@link AccountSummary.SyncLog.verify|verify} messages.
         * @param message SyncLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: AccountSummary.ISyncLog, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SyncLog message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SyncLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AccountSummary.SyncLog;

        /**
         * Decodes a SyncLog message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SyncLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AccountSummary.SyncLog;

        /**
         * Verifies a SyncLog message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SyncLog message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SyncLog
         */
        public static fromObject(object: { [k: string]: any }): AccountSummary.SyncLog;

        /**
         * Creates a plain object from a SyncLog message. Also converts values to other types if specified.
         * @param message SyncLog
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: AccountSummary.SyncLog, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SyncLog to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a License. */
    interface ILicense {

        /** License subscriptionCode */
        subscriptionCode?: (string|null);

        /** License productTypeId */
        productTypeId?: (number|null);

        /** License productTypeName */
        productTypeName?: (string|null);

        /** License expirationDate */
        expirationDate?: (string|null);

        /** License secondsUntilExpiration */
        secondsUntilExpiration?: (number|Long|null);

        /** License maxDevices */
        maxDevices?: (number|null);

        /** License filePlanType */
        filePlanType?: (number|null);

        /** License bytesUsed */
        bytesUsed?: (number|Long|null);

        /** License bytesTotal */
        bytesTotal?: (number|Long|null);

        /** License secondsUntilStorageExpiration */
        secondsUntilStorageExpiration?: (number|Long|null);

        /** License storageExpirationDate */
        storageExpirationDate?: (string|null);

        /** License hasAutoRenewableAppstoreSubscription */
        hasAutoRenewableAppstoreSubscription?: (boolean|null);

        /** License accountType */
        accountType?: (number|null);

        /** License uploadsRemaining */
        uploadsRemaining?: (number|null);

        /** License enterpriseId */
        enterpriseId?: (number|null);

        /** License chatEnabled */
        chatEnabled?: (boolean|null);

        /** License auditAndReportingEnabled */
        auditAndReportingEnabled?: (boolean|null);

        /** License breachWatchFeatureDisable */
        breachWatchFeatureDisable?: (boolean|null);

        /** License accountUid */
        accountUid?: (Uint8Array|null);

        /** License allowPersonalLicense */
        allowPersonalLicense?: (boolean|null);

        /** License licensedBy */
        licensedBy?: (string|null);

        /** License email */
        email?: (string|null);

        /** License breachWatchEnabled */
        breachWatchEnabled?: (boolean|null);

        /** License breachWatchScanned */
        breachWatchScanned?: (boolean|null);

        /** License breachWatchExpiration */
        breachWatchExpiration?: (number|Long|null);

        /** License breachWatchDateCreated */
        breachWatchDateCreated?: (number|Long|null);

        /** License error */
        error?: (AccountSummary.IResult|null);
    }

    /** Represents a License. */
    class License implements ILicense {

        /**
         * Constructs a new License.
         * @param [properties] Properties to set
         */
        constructor(properties?: AccountSummary.ILicense);

        /** License subscriptionCode. */
        public subscriptionCode: string;

        /** License productTypeId. */
        public productTypeId: number;

        /** License productTypeName. */
        public productTypeName: string;

        /** License expirationDate. */
        public expirationDate: string;

        /** License secondsUntilExpiration. */
        public secondsUntilExpiration: (number|Long);

        /** License maxDevices. */
        public maxDevices: number;

        /** License filePlanType. */
        public filePlanType: number;

        /** License bytesUsed. */
        public bytesUsed: (number|Long);

        /** License bytesTotal. */
        public bytesTotal: (number|Long);

        /** License secondsUntilStorageExpiration. */
        public secondsUntilStorageExpiration: (number|Long);

        /** License storageExpirationDate. */
        public storageExpirationDate: string;

        /** License hasAutoRenewableAppstoreSubscription. */
        public hasAutoRenewableAppstoreSubscription: boolean;

        /** License accountType. */
        public accountType: number;

        /** License uploadsRemaining. */
        public uploadsRemaining: number;

        /** License enterpriseId. */
        public enterpriseId: number;

        /** License chatEnabled. */
        public chatEnabled: boolean;

        /** License auditAndReportingEnabled. */
        public auditAndReportingEnabled: boolean;

        /** License breachWatchFeatureDisable. */
        public breachWatchFeatureDisable: boolean;

        /** License accountUid. */
        public accountUid: Uint8Array;

        /** License allowPersonalLicense. */
        public allowPersonalLicense: boolean;

        /** License licensedBy. */
        public licensedBy: string;

        /** License email. */
        public email: string;

        /** License breachWatchEnabled. */
        public breachWatchEnabled: boolean;

        /** License breachWatchScanned. */
        public breachWatchScanned: boolean;

        /** License breachWatchExpiration. */
        public breachWatchExpiration: (number|Long);

        /** License breachWatchDateCreated. */
        public breachWatchDateCreated: (number|Long);

        /** License error. */
        public error?: (AccountSummary.IResult|null);

        /**
         * Creates a new License instance using the specified properties.
         * @param [properties] Properties to set
         * @returns License instance
         */
        public static create(properties?: AccountSummary.ILicense): AccountSummary.License;

        /**
         * Encodes the specified License message. Does not implicitly {@link AccountSummary.License.verify|verify} messages.
         * @param message License message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: AccountSummary.ILicense, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified License message, length delimited. Does not implicitly {@link AccountSummary.License.verify|verify} messages.
         * @param message License message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: AccountSummary.ILicense, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a License message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns License
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AccountSummary.License;

        /**
         * Decodes a License message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns License
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AccountSummary.License;

        /**
         * Verifies a License message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a License message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns License
         */
        public static fromObject(object: { [k: string]: any }): AccountSummary.License;

        /**
         * Creates a plain object from a License message. Also converts values to other types if specified.
         * @param message License
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: AccountSummary.License, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this License to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AddOn. */
    interface IAddOn {

        /** AddOn licenseKeyId */
        licenseKeyId?: (number|null);

        /** AddOn name */
        name?: (string|null);

        /** AddOn expirationDate */
        expirationDate?: (number|Long|null);

        /** AddOn createdDate */
        createdDate?: (number|Long|null);

        /** AddOn isTrial */
        isTrial?: (boolean|null);

        /** AddOn enabled */
        enabled?: (boolean|null);

        /** AddOn scanned */
        scanned?: (boolean|null);

        /** AddOn featureDisable */
        featureDisable?: (boolean|null);
    }

    /** Represents an AddOn. */
    class AddOn implements IAddOn {

        /**
         * Constructs a new AddOn.
         * @param [properties] Properties to set
         */
        constructor(properties?: AccountSummary.IAddOn);

        /** AddOn licenseKeyId. */
        public licenseKeyId: number;

        /** AddOn name. */
        public name: string;

        /** AddOn expirationDate. */
        public expirationDate: (number|Long);

        /** AddOn createdDate. */
        public createdDate: (number|Long);

        /** AddOn isTrial. */
        public isTrial: boolean;

        /** AddOn enabled. */
        public enabled: boolean;

        /** AddOn scanned. */
        public scanned: boolean;

        /** AddOn featureDisable. */
        public featureDisable: boolean;

        /**
         * Creates a new AddOn instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AddOn instance
         */
        public static create(properties?: AccountSummary.IAddOn): AccountSummary.AddOn;

        /**
         * Encodes the specified AddOn message. Does not implicitly {@link AccountSummary.AddOn.verify|verify} messages.
         * @param message AddOn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: AccountSummary.IAddOn, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AddOn message, length delimited. Does not implicitly {@link AccountSummary.AddOn.verify|verify} messages.
         * @param message AddOn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: AccountSummary.IAddOn, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AddOn message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AddOn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AccountSummary.AddOn;

        /**
         * Decodes an AddOn message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AddOn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AccountSummary.AddOn;

        /**
         * Verifies an AddOn message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AddOn message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AddOn
         */
        public static fromObject(object: { [k: string]: any }): AccountSummary.AddOn;

        /**
         * Creates a plain object from an AddOn message. Also converts values to other types if specified.
         * @param message AddOn
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: AccountSummary.AddOn, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AddOn to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Settings. */
    interface ISettings {

        /** Settings audit */
        audit?: (boolean|null);

        /** Settings mustPerformAccountShareBy */
        mustPerformAccountShareBy?: (number|Long|null);

        /** Settings shareAccountTo */
        shareAccountTo?: (AccountSummary.IMissingAccountShareKey[]|null);

        /** Settings rules */
        rules?: (AccountSummary.IPasswordRule[]|null);

        /** Settings passwordRulesIntro */
        passwordRulesIntro?: (string|null);

        /** Settings autoBackupDays */
        autoBackupDays?: (number|null);

        /** Settings theme */
        theme?: (string|null);

        /** Settings channel */
        channel?: (string|null);

        /** Settings channelValue */
        channelValue?: (string|null);

        /** Settings rsaConfigured */
        rsaConfigured?: (boolean|null);

        /** Settings emailVerified */
        emailVerified?: (boolean|null);

        /** Settings masterPasswordLastModified */
        masterPasswordLastModified?: (number|null);

        /** Settings accountFolderKey */
        accountFolderKey?: (Uint8Array|null);

        /** Settings securityKeys */
        securityKeys?: (AccountSummary.ISecurityKey[]|null);

        /** ????? */
        keyValues?: (AccountSummary.IKeyValue[]|null);

        /** Settings ssoUser */
        ssoUser?: (boolean|null);

        /** Settings onlineAccessOnly */
        onlineAccessOnly?: (boolean|null);

        /** Settings masterPasswordExpiry */
        masterPasswordExpiry?: (number|null);

        /** Settings twoFactorRequired */
        twoFactorRequired?: (boolean|null);

        /** Settings disallowExport */
        disallowExport?: (boolean|null);

        /** Settings restrictFiles */
        restrictFiles?: (boolean|null);

        /** Settings restrictAllSharing */
        restrictAllSharing?: (boolean|null);

        /** Settings restrictSharing */
        restrictSharing?: (boolean|null);

        /** Settings restrictSharingIncomingAll */
        restrictSharingIncomingAll?: (boolean|null);

        /** Settings restrictSharingIncomingEnterprise */
        restrictSharingIncomingEnterprise?: (boolean|null);

        /** Settings logoutTimer */
        logoutTimer?: (number|Long|null);

        /** Settings persistentLogin */
        persistentLogin?: (boolean|null);

        /** Settings ipDisableAutoApprove */
        ipDisableAutoApprove?: (boolean|null);

        /** Settings shareDataKeyWithEccPublicKey */
        shareDataKeyWithEccPublicKey?: (boolean|null);

        /** Settings shareDataKeyWithDevicePublicKey */
        shareDataKeyWithDevicePublicKey?: (boolean|null);

        /** Settings RecordTypesCounter */
        RecordTypesCounter?: (number|null);

        /** Settings RecordTypesEnterpriseCounter */
        RecordTypesEnterpriseCounter?: (number|null);

        /** Settings recordTypesEnabled */
        recordTypesEnabled?: (boolean|null);

        /** Settings canManageRecordTypes */
        canManageRecordTypes?: (boolean|null);
    }

    /** Represents a Settings. */
    class Settings implements ISettings {

        /**
         * Constructs a new Settings.
         * @param [properties] Properties to set
         */
        constructor(properties?: AccountSummary.ISettings);

        /** Settings audit. */
        public audit: boolean;

        /** Settings mustPerformAccountShareBy. */
        public mustPerformAccountShareBy: (number|Long);

        /** Settings shareAccountTo. */
        public shareAccountTo: AccountSummary.IMissingAccountShareKey[];

        /** Settings rules. */
        public rules: AccountSummary.IPasswordRule[];

        /** Settings passwordRulesIntro. */
        public passwordRulesIntro: string;

        /** Settings autoBackupDays. */
        public autoBackupDays: number;

        /** Settings theme. */
        public theme: string;

        /** Settings channel. */
        public channel: string;

        /** Settings channelValue. */
        public channelValue: string;

        /** Settings rsaConfigured. */
        public rsaConfigured: boolean;

        /** Settings emailVerified. */
        public emailVerified: boolean;

        /** Settings masterPasswordLastModified. */
        public masterPasswordLastModified: number;

        /** Settings accountFolderKey. */
        public accountFolderKey: Uint8Array;

        /** Settings securityKeys. */
        public securityKeys: AccountSummary.ISecurityKey[];

        /** ????? */
        public keyValues: AccountSummary.IKeyValue[];

        /** Settings ssoUser. */
        public ssoUser: boolean;

        /** Settings onlineAccessOnly. */
        public onlineAccessOnly: boolean;

        /** Settings masterPasswordExpiry. */
        public masterPasswordExpiry: number;

        /** Settings twoFactorRequired. */
        public twoFactorRequired: boolean;

        /** Settings disallowExport. */
        public disallowExport: boolean;

        /** Settings restrictFiles. */
        public restrictFiles: boolean;

        /** Settings restrictAllSharing. */
        public restrictAllSharing: boolean;

        /** Settings restrictSharing. */
        public restrictSharing: boolean;

        /** Settings restrictSharingIncomingAll. */
        public restrictSharingIncomingAll: boolean;

        /** Settings restrictSharingIncomingEnterprise. */
        public restrictSharingIncomingEnterprise: boolean;

        /** Settings logoutTimer. */
        public logoutTimer: (number|Long);

        /** Settings persistentLogin. */
        public persistentLogin: boolean;

        /** Settings ipDisableAutoApprove. */
        public ipDisableAutoApprove: boolean;

        /** Settings shareDataKeyWithEccPublicKey. */
        public shareDataKeyWithEccPublicKey: boolean;

        /** Settings shareDataKeyWithDevicePublicKey. */
        public shareDataKeyWithDevicePublicKey: boolean;

        /** Settings RecordTypesCounter. */
        public RecordTypesCounter: number;

        /** Settings RecordTypesEnterpriseCounter. */
        public RecordTypesEnterpriseCounter: number;

        /** Settings recordTypesEnabled. */
        public recordTypesEnabled: boolean;

        /** Settings canManageRecordTypes. */
        public canManageRecordTypes: boolean;

        /**
         * Creates a new Settings instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Settings instance
         */
        public static create(properties?: AccountSummary.ISettings): AccountSummary.Settings;

        /**
         * Encodes the specified Settings message. Does not implicitly {@link AccountSummary.Settings.verify|verify} messages.
         * @param message Settings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: AccountSummary.ISettings, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Settings message, length delimited. Does not implicitly {@link AccountSummary.Settings.verify|verify} messages.
         * @param message Settings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: AccountSummary.ISettings, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Settings message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Settings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AccountSummary.Settings;

        /**
         * Decodes a Settings message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Settings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AccountSummary.Settings;

        /**
         * Verifies a Settings message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Settings message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Settings
         */
        public static fromObject(object: { [k: string]: any }): AccountSummary.Settings;

        /**
         * Creates a plain object from a Settings message. Also converts values to other types if specified.
         * @param message Settings
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: AccountSummary.Settings, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Settings to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KeyValue. */
    interface IKeyValue {

        /** KeyValue key */
        key?: (string|null);

        /** KeyValue value */
        value?: (string|null);
    }

    /** Represents a KeyValue. */
    class KeyValue implements IKeyValue {

        /**
         * Constructs a new KeyValue.
         * @param [properties] Properties to set
         */
        constructor(properties?: AccountSummary.IKeyValue);

        /** KeyValue key. */
        public key: string;

        /** KeyValue value. */
        public value: string;

        /**
         * Creates a new KeyValue instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KeyValue instance
         */
        public static create(properties?: AccountSummary.IKeyValue): AccountSummary.KeyValue;

        /**
         * Encodes the specified KeyValue message. Does not implicitly {@link AccountSummary.KeyValue.verify|verify} messages.
         * @param message KeyValue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: AccountSummary.IKeyValue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KeyValue message, length delimited. Does not implicitly {@link AccountSummary.KeyValue.verify|verify} messages.
         * @param message KeyValue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: AccountSummary.IKeyValue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KeyValue message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KeyValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AccountSummary.KeyValue;

        /**
         * Decodes a KeyValue message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KeyValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AccountSummary.KeyValue;

        /**
         * Verifies a KeyValue message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KeyValue message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KeyValue
         */
        public static fromObject(object: { [k: string]: any }): AccountSummary.KeyValue;

        /**
         * Creates a plain object from a KeyValue message. Also converts values to other types if specified.
         * @param message KeyValue
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: AccountSummary.KeyValue, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KeyValue to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KeyValueBoolean. */
    interface IKeyValueBoolean {

        /** KeyValueBoolean key */
        key?: (string|null);

        /** KeyValueBoolean value */
        value?: (boolean|null);
    }

    /** Represents a KeyValueBoolean. */
    class KeyValueBoolean implements IKeyValueBoolean {

        /**
         * Constructs a new KeyValueBoolean.
         * @param [properties] Properties to set
         */
        constructor(properties?: AccountSummary.IKeyValueBoolean);

        /** KeyValueBoolean key. */
        public key: string;

        /** KeyValueBoolean value. */
        public value: boolean;

        /**
         * Creates a new KeyValueBoolean instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KeyValueBoolean instance
         */
        public static create(properties?: AccountSummary.IKeyValueBoolean): AccountSummary.KeyValueBoolean;

        /**
         * Encodes the specified KeyValueBoolean message. Does not implicitly {@link AccountSummary.KeyValueBoolean.verify|verify} messages.
         * @param message KeyValueBoolean message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: AccountSummary.IKeyValueBoolean, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KeyValueBoolean message, length delimited. Does not implicitly {@link AccountSummary.KeyValueBoolean.verify|verify} messages.
         * @param message KeyValueBoolean message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: AccountSummary.IKeyValueBoolean, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KeyValueBoolean message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KeyValueBoolean
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AccountSummary.KeyValueBoolean;

        /**
         * Decodes a KeyValueBoolean message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KeyValueBoolean
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AccountSummary.KeyValueBoolean;

        /**
         * Verifies a KeyValueBoolean message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KeyValueBoolean message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KeyValueBoolean
         */
        public static fromObject(object: { [k: string]: any }): AccountSummary.KeyValueBoolean;

        /**
         * Creates a plain object from a KeyValueBoolean message. Also converts values to other types if specified.
         * @param message KeyValueBoolean
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: AccountSummary.KeyValueBoolean, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KeyValueBoolean to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KeyValueLong. */
    interface IKeyValueLong {

        /** KeyValueLong key */
        key?: (string|null);

        /** KeyValueLong value */
        value?: (number|Long|null);
    }

    /** Represents a KeyValueLong. */
    class KeyValueLong implements IKeyValueLong {

        /**
         * Constructs a new KeyValueLong.
         * @param [properties] Properties to set
         */
        constructor(properties?: AccountSummary.IKeyValueLong);

        /** KeyValueLong key. */
        public key: string;

        /** KeyValueLong value. */
        public value: (number|Long);

        /**
         * Creates a new KeyValueLong instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KeyValueLong instance
         */
        public static create(properties?: AccountSummary.IKeyValueLong): AccountSummary.KeyValueLong;

        /**
         * Encodes the specified KeyValueLong message. Does not implicitly {@link AccountSummary.KeyValueLong.verify|verify} messages.
         * @param message KeyValueLong message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: AccountSummary.IKeyValueLong, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KeyValueLong message, length delimited. Does not implicitly {@link AccountSummary.KeyValueLong.verify|verify} messages.
         * @param message KeyValueLong message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: AccountSummary.IKeyValueLong, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KeyValueLong message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KeyValueLong
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AccountSummary.KeyValueLong;

        /**
         * Decodes a KeyValueLong message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KeyValueLong
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AccountSummary.KeyValueLong;

        /**
         * Verifies a KeyValueLong message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KeyValueLong message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KeyValueLong
         */
        public static fromObject(object: { [k: string]: any }): AccountSummary.KeyValueLong;

        /**
         * Creates a plain object from a KeyValueLong message. Also converts values to other types if specified.
         * @param message KeyValueLong
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: AccountSummary.KeyValueLong, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KeyValueLong to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Result. */
    interface IResult {

        /** Result resultCode */
        resultCode?: (string|null);

        /** Result message */
        message?: (string|null);

        /** Result result */
        result?: (string|null);
    }

    /** Represents a Result. */
    class Result implements IResult {

        /**
         * Constructs a new Result.
         * @param [properties] Properties to set
         */
        constructor(properties?: AccountSummary.IResult);

        /** Result resultCode. */
        public resultCode: string;

        /** Result message. */
        public message: string;

        /** Result result. */
        public result: string;

        /**
         * Creates a new Result instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Result instance
         */
        public static create(properties?: AccountSummary.IResult): AccountSummary.Result;

        /**
         * Encodes the specified Result message. Does not implicitly {@link AccountSummary.Result.verify|verify} messages.
         * @param message Result message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: AccountSummary.IResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Result message, length delimited. Does not implicitly {@link AccountSummary.Result.verify|verify} messages.
         * @param message Result message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: AccountSummary.IResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Result message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Result
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AccountSummary.Result;

        /**
         * Decodes a Result message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Result
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AccountSummary.Result;

        /**
         * Verifies a Result message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Result message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Result
         */
        public static fromObject(object: { [k: string]: any }): AccountSummary.Result;

        /**
         * Creates a plain object from a Result message. Also converts values to other types if specified.
         * @param message Result
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: AccountSummary.Result, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Result to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an Enforcements. */
    interface IEnforcements {

        /** Enforcements strings */
        strings?: (AccountSummary.IKeyValue[]|null);

        /** Enforcements booleans */
        booleans?: (AccountSummary.IKeyValueBoolean[]|null);

        /** Enforcements longs */
        longs?: (AccountSummary.IKeyValueLong[]|null);

        /** Enforcements jsons */
        jsons?: (AccountSummary.IKeyValue[]|null);
    }

    /** Represents an Enforcements. */
    class Enforcements implements IEnforcements {

        /**
         * Constructs a new Enforcements.
         * @param [properties] Properties to set
         */
        constructor(properties?: AccountSummary.IEnforcements);

        /** Enforcements strings. */
        public strings: AccountSummary.IKeyValue[];

        /** Enforcements booleans. */
        public booleans: AccountSummary.IKeyValueBoolean[];

        /** Enforcements longs. */
        public longs: AccountSummary.IKeyValueLong[];

        /** Enforcements jsons. */
        public jsons: AccountSummary.IKeyValue[];

        /**
         * Creates a new Enforcements instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Enforcements instance
         */
        public static create(properties?: AccountSummary.IEnforcements): AccountSummary.Enforcements;

        /**
         * Encodes the specified Enforcements message. Does not implicitly {@link AccountSummary.Enforcements.verify|verify} messages.
         * @param message Enforcements message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: AccountSummary.IEnforcements, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Enforcements message, length delimited. Does not implicitly {@link AccountSummary.Enforcements.verify|verify} messages.
         * @param message Enforcements message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: AccountSummary.IEnforcements, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Enforcements message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Enforcements
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AccountSummary.Enforcements;

        /**
         * Decodes an Enforcements message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Enforcements
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AccountSummary.Enforcements;

        /**
         * Verifies an Enforcements message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Enforcements message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Enforcements
         */
        public static fromObject(object: { [k: string]: any }): AccountSummary.Enforcements;

        /**
         * Creates a plain object from an Enforcements message. Also converts values to other types if specified.
         * @param message Enforcements
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: AccountSummary.Enforcements, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Enforcements to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MissingAccountShareKey. */
    interface IMissingAccountShareKey {

        /** MissingAccountShareKey roleId */
        roleId?: (number|Long|null);

        /** MissingAccountShareKey publicKey */
        publicKey?: (Uint8Array|null);
    }

    /** Represents a MissingAccountShareKey. */
    class MissingAccountShareKey implements IMissingAccountShareKey {

        /**
         * Constructs a new MissingAccountShareKey.
         * @param [properties] Properties to set
         */
        constructor(properties?: AccountSummary.IMissingAccountShareKey);

        /** MissingAccountShareKey roleId. */
        public roleId: (number|Long);

        /** MissingAccountShareKey publicKey. */
        public publicKey: Uint8Array;

        /**
         * Creates a new MissingAccountShareKey instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MissingAccountShareKey instance
         */
        public static create(properties?: AccountSummary.IMissingAccountShareKey): AccountSummary.MissingAccountShareKey;

        /**
         * Encodes the specified MissingAccountShareKey message. Does not implicitly {@link AccountSummary.MissingAccountShareKey.verify|verify} messages.
         * @param message MissingAccountShareKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: AccountSummary.IMissingAccountShareKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MissingAccountShareKey message, length delimited. Does not implicitly {@link AccountSummary.MissingAccountShareKey.verify|verify} messages.
         * @param message MissingAccountShareKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: AccountSummary.IMissingAccountShareKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MissingAccountShareKey message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MissingAccountShareKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AccountSummary.MissingAccountShareKey;

        /**
         * Decodes a MissingAccountShareKey message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MissingAccountShareKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AccountSummary.MissingAccountShareKey;

        /**
         * Verifies a MissingAccountShareKey message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MissingAccountShareKey message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MissingAccountShareKey
         */
        public static fromObject(object: { [k: string]: any }): AccountSummary.MissingAccountShareKey;

        /**
         * Creates a plain object from a MissingAccountShareKey message. Also converts values to other types if specified.
         * @param message MissingAccountShareKey
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: AccountSummary.MissingAccountShareKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MissingAccountShareKey to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PasswordRule. */
    interface IPasswordRule {

        /** PasswordRule ruleType */
        ruleType?: (string|null);

        /** PasswordRule pattern */
        pattern?: (string|null);

        /** PasswordRule match */
        match?: (boolean|null);

        /** PasswordRule minimum */
        minimum?: (number|null);

        /** PasswordRule description */
        description?: (string|null);

        /** PasswordRule value */
        value?: (string|null);
    }

    /** Represents a PasswordRule. */
    class PasswordRule implements IPasswordRule {

        /**
         * Constructs a new PasswordRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: AccountSummary.IPasswordRule);

        /** PasswordRule ruleType. */
        public ruleType: string;

        /** PasswordRule pattern. */
        public pattern: string;

        /** PasswordRule match. */
        public match: boolean;

        /** PasswordRule minimum. */
        public minimum: number;

        /** PasswordRule description. */
        public description: string;

        /** PasswordRule value. */
        public value: string;

        /**
         * Creates a new PasswordRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PasswordRule instance
         */
        public static create(properties?: AccountSummary.IPasswordRule): AccountSummary.PasswordRule;

        /**
         * Encodes the specified PasswordRule message. Does not implicitly {@link AccountSummary.PasswordRule.verify|verify} messages.
         * @param message PasswordRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: AccountSummary.IPasswordRule, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PasswordRule message, length delimited. Does not implicitly {@link AccountSummary.PasswordRule.verify|verify} messages.
         * @param message PasswordRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: AccountSummary.IPasswordRule, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PasswordRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PasswordRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AccountSummary.PasswordRule;

        /**
         * Decodes a PasswordRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PasswordRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AccountSummary.PasswordRule;

        /**
         * Verifies a PasswordRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PasswordRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PasswordRule
         */
        public static fromObject(object: { [k: string]: any }): AccountSummary.PasswordRule;

        /**
         * Creates a plain object from a PasswordRule message. Also converts values to other types if specified.
         * @param message PasswordRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: AccountSummary.PasswordRule, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PasswordRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SecurityKey. */
    interface ISecurityKey {

        /** SecurityKey deviceId */
        deviceId?: (number|Long|null);

        /** SecurityKey deviceName */
        deviceName?: (string|null);

        /** SecurityKey dateAdded */
        dateAdded?: (number|Long|null);

        /** SecurityKey isValid */
        isValid?: (boolean|null);

        /** SecurityKey deviceRegistration */
        deviceRegistration?: (AccountSummary.IDeviceRegistration|null);
    }

    /** Represents a SecurityKey. */
    class SecurityKey implements ISecurityKey {

        /**
         * Constructs a new SecurityKey.
         * @param [properties] Properties to set
         */
        constructor(properties?: AccountSummary.ISecurityKey);

        /** SecurityKey deviceId. */
        public deviceId: (number|Long);

        /** SecurityKey deviceName. */
        public deviceName: string;

        /** SecurityKey dateAdded. */
        public dateAdded: (number|Long);

        /** SecurityKey isValid. */
        public isValid: boolean;

        /** SecurityKey deviceRegistration. */
        public deviceRegistration?: (AccountSummary.IDeviceRegistration|null);

        /**
         * Creates a new SecurityKey instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecurityKey instance
         */
        public static create(properties?: AccountSummary.ISecurityKey): AccountSummary.SecurityKey;

        /**
         * Encodes the specified SecurityKey message. Does not implicitly {@link AccountSummary.SecurityKey.verify|verify} messages.
         * @param message SecurityKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: AccountSummary.ISecurityKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecurityKey message, length delimited. Does not implicitly {@link AccountSummary.SecurityKey.verify|verify} messages.
         * @param message SecurityKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: AccountSummary.ISecurityKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecurityKey message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecurityKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AccountSummary.SecurityKey;

        /**
         * Decodes a SecurityKey message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecurityKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AccountSummary.SecurityKey;

        /**
         * Verifies a SecurityKey message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecurityKey message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecurityKey
         */
        public static fromObject(object: { [k: string]: any }): AccountSummary.SecurityKey;

        /**
         * Creates a plain object from a SecurityKey message. Also converts values to other types if specified.
         * @param message SecurityKey
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: AccountSummary.SecurityKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecurityKey to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeviceRegistration. */
    interface IDeviceRegistration {

        /** DeviceRegistration keyHandle */
        keyHandle?: (string|null);

        /** DeviceRegistration publicKey */
        publicKey?: (Uint8Array|null);

        /** DeviceRegistration attestationCert */
        attestationCert?: (string|null);

        /** DeviceRegistration counter */
        counter?: (number|Long|null);

        /** DeviceRegistration compromised */
        compromised?: (boolean|null);
    }

    /** Represents a DeviceRegistration. */
    class DeviceRegistration implements IDeviceRegistration {

        /**
         * Constructs a new DeviceRegistration.
         * @param [properties] Properties to set
         */
        constructor(properties?: AccountSummary.IDeviceRegistration);

        /** DeviceRegistration keyHandle. */
        public keyHandle: string;

        /** DeviceRegistration publicKey. */
        public publicKey: Uint8Array;

        /** DeviceRegistration attestationCert. */
        public attestationCert: string;

        /** DeviceRegistration counter. */
        public counter: (number|Long);

        /** DeviceRegistration compromised. */
        public compromised: boolean;

        /**
         * Creates a new DeviceRegistration instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeviceRegistration instance
         */
        public static create(properties?: AccountSummary.IDeviceRegistration): AccountSummary.DeviceRegistration;

        /**
         * Encodes the specified DeviceRegistration message. Does not implicitly {@link AccountSummary.DeviceRegistration.verify|verify} messages.
         * @param message DeviceRegistration message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: AccountSummary.IDeviceRegistration, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeviceRegistration message, length delimited. Does not implicitly {@link AccountSummary.DeviceRegistration.verify|verify} messages.
         * @param message DeviceRegistration message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: AccountSummary.IDeviceRegistration, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeviceRegistration message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeviceRegistration
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AccountSummary.DeviceRegistration;

        /**
         * Decodes a DeviceRegistration message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeviceRegistration
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AccountSummary.DeviceRegistration;

        /**
         * Verifies a DeviceRegistration message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeviceRegistration message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeviceRegistration
         */
        public static fromObject(object: { [k: string]: any }): AccountSummary.DeviceRegistration;

        /**
         * Creates a plain object from a DeviceRegistration message. Also converts values to other types if specified.
         * @param message DeviceRegistration
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: AccountSummary.DeviceRegistration, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeviceRegistration to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Group. */
    interface IGroup {

        /** Group admin */
        admin?: (boolean|null);

        /** Group groupVerificationCode */
        groupVerificationCode?: (string|null);

        /** Group administrator */
        administrator?: (AccountSummary.IAdministrator|null);
    }

    /** Represents a Group. */
    class Group implements IGroup {

        /**
         * Constructs a new Group.
         * @param [properties] Properties to set
         */
        constructor(properties?: AccountSummary.IGroup);

        /** Group admin. */
        public admin: boolean;

        /** Group groupVerificationCode. */
        public groupVerificationCode: string;

        /** Group administrator. */
        public administrator?: (AccountSummary.IAdministrator|null);

        /**
         * Creates a new Group instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Group instance
         */
        public static create(properties?: AccountSummary.IGroup): AccountSummary.Group;

        /**
         * Encodes the specified Group message. Does not implicitly {@link AccountSummary.Group.verify|verify} messages.
         * @param message Group message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: AccountSummary.IGroup, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Group message, length delimited. Does not implicitly {@link AccountSummary.Group.verify|verify} messages.
         * @param message Group message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: AccountSummary.IGroup, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Group message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Group
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AccountSummary.Group;

        /**
         * Decodes a Group message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Group
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AccountSummary.Group;

        /**
         * Verifies a Group message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Group message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Group
         */
        public static fromObject(object: { [k: string]: any }): AccountSummary.Group;

        /**
         * Creates a plain object from a Group message. Also converts values to other types if specified.
         * @param message Group
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: AccountSummary.Group, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Group to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an Administrator. */
    interface IAdministrator {

        /** Administrator firstName */
        firstName?: (string|null);

        /** Administrator lastName */
        lastName?: (string|null);

        /** Administrator email */
        email?: (string|null);

        /** Administrator currentNumberOfUsers */
        currentNumberOfUsers?: (number|null);

        /** Administrator numberOfUsers */
        numberOfUsers?: (number|null);

        /** Administrator subscriptionCode */
        subscriptionCode?: (string|null);

        /** Administrator expirationDate */
        expirationDate?: (string|null);

        /** Administrator purchaseDate */
        purchaseDate?: (string|null);
    }

    /** Represents an Administrator. */
    class Administrator implements IAdministrator {

        /**
         * Constructs a new Administrator.
         * @param [properties] Properties to set
         */
        constructor(properties?: AccountSummary.IAdministrator);

        /** Administrator firstName. */
        public firstName: string;

        /** Administrator lastName. */
        public lastName: string;

        /** Administrator email. */
        public email: string;

        /** Administrator currentNumberOfUsers. */
        public currentNumberOfUsers: number;

        /** Administrator numberOfUsers. */
        public numberOfUsers: number;

        /** Administrator subscriptionCode. */
        public subscriptionCode: string;

        /** Administrator expirationDate. */
        public expirationDate: string;

        /** Administrator purchaseDate. */
        public purchaseDate: string;

        /**
         * Creates a new Administrator instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Administrator instance
         */
        public static create(properties?: AccountSummary.IAdministrator): AccountSummary.Administrator;

        /**
         * Encodes the specified Administrator message. Does not implicitly {@link AccountSummary.Administrator.verify|verify} messages.
         * @param message Administrator message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: AccountSummary.IAdministrator, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Administrator message, length delimited. Does not implicitly {@link AccountSummary.Administrator.verify|verify} messages.
         * @param message Administrator message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: AccountSummary.IAdministrator, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Administrator message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Administrator
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AccountSummary.Administrator;

        /**
         * Decodes an Administrator message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Administrator
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AccountSummary.Administrator;

        /**
         * Verifies an Administrator message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Administrator message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Administrator
         */
        public static fromObject(object: { [k: string]: any }): AccountSummary.Administrator;

        /**
         * Creates a plain object from an Administrator message. Also converts values to other types if specified.
         * @param message Administrator
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: AccountSummary.Administrator, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Administrator to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Automator. */
export namespace Automator {

    /**
     * This enumerates the SSO Authentication protocols we support.
     * We plan to support more protocols in the future.
     */
    enum SsoAuthenticationProtocolType {
        UNKNOWN_PROTOCOL = 0,
        SAML2 = 1
    }

    /** CertificateFormat enum. */
    enum CertificateFormat {
        UNKNOWN_FORMAT = 0,
        PKCS12 = 1,
        JKS = 2
    }

    /** Properties of an AutomatorSettingValue. */
    interface IAutomatorSettingValue {

        /** AutomatorSettingValue settingId */
        settingId?: (number|Long|null);

        /** AutomatorSettingValue settingTypeId */
        settingTypeId?: (number|null);

        /** AutomatorSettingValue settingTag */
        settingTag?: (string|null);

        /** AutomatorSettingValue settingName */
        settingName?: (string|null);

        /** AutomatorSettingValue settingValue */
        settingValue?: (string|null);

        /** AutomatorSettingValue dataType */
        dataType?: (SsoCloud.DataType|null);

        /** AutomatorSettingValue lastModified */
        lastModified?: (string|null);

        /** AutomatorSettingValue fromFile */
        fromFile?: (boolean|null);

        /** AutomatorSettingValue encrypted */
        encrypted?: (boolean|null);

        /** AutomatorSettingValue encoded */
        encoded?: (boolean|null);

        /** AutomatorSettingValue editable */
        editable?: (boolean|null);

        /** AutomatorSettingValue translated */
        translated?: (boolean|null);

        /** AutomatorSettingValue userVisible */
        userVisible?: (boolean|null);

        /** AutomatorSettingValue required */
        required?: (boolean|null);
    }

    /**
     * This represents one setting and its value.
     * The value is always a string but it is dynamically typed.
     * The dataType property determines what type it is (boolean, string, integer, ...) and thus how it should be interpreted.
     * Other properties such as "editable" and "fromFile" help the client determine whether the user can edit the value and what type of interface to present to the user (text box, file upload, etc.).
     */
    class AutomatorSettingValue implements IAutomatorSettingValue {

        /**
         * Constructs a new AutomatorSettingValue.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IAutomatorSettingValue);

        /** AutomatorSettingValue settingId. */
        public settingId: (number|Long);

        /** AutomatorSettingValue settingTypeId. */
        public settingTypeId: number;

        /** AutomatorSettingValue settingTag. */
        public settingTag: string;

        /** AutomatorSettingValue settingName. */
        public settingName: string;

        /** AutomatorSettingValue settingValue. */
        public settingValue: string;

        /** AutomatorSettingValue dataType. */
        public dataType: SsoCloud.DataType;

        /** AutomatorSettingValue lastModified. */
        public lastModified: string;

        /** AutomatorSettingValue fromFile. */
        public fromFile: boolean;

        /** AutomatorSettingValue encrypted. */
        public encrypted: boolean;

        /** AutomatorSettingValue encoded. */
        public encoded: boolean;

        /** AutomatorSettingValue editable. */
        public editable: boolean;

        /** AutomatorSettingValue translated. */
        public translated: boolean;

        /** AutomatorSettingValue userVisible. */
        public userVisible: boolean;

        /** AutomatorSettingValue required. */
        public required: boolean;

        /**
         * Creates a new AutomatorSettingValue instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AutomatorSettingValue instance
         */
        public static create(properties?: Automator.IAutomatorSettingValue): Automator.AutomatorSettingValue;

        /**
         * Encodes the specified AutomatorSettingValue message. Does not implicitly {@link Automator.AutomatorSettingValue.verify|verify} messages.
         * @param message AutomatorSettingValue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IAutomatorSettingValue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AutomatorSettingValue message, length delimited. Does not implicitly {@link Automator.AutomatorSettingValue.verify|verify} messages.
         * @param message AutomatorSettingValue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IAutomatorSettingValue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AutomatorSettingValue message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AutomatorSettingValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.AutomatorSettingValue;

        /**
         * Decodes an AutomatorSettingValue message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AutomatorSettingValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.AutomatorSettingValue;

        /**
         * Verifies an AutomatorSettingValue message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AutomatorSettingValue message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AutomatorSettingValue
         */
        public static fromObject(object: { [k: string]: any }): Automator.AutomatorSettingValue;

        /**
         * Creates a plain object from an AutomatorSettingValue message. Also converts values to other types if specified.
         * @param message AutomatorSettingValue
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.AutomatorSettingValue, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AutomatorSettingValue to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ApproveDeviceRequest. */
    interface IApproveDeviceRequest {

        /** ApproveDeviceRequest automatorId */
        automatorId?: (number|Long|null);

        /** ApproveDeviceRequest ssoAuthenticationProtocolType */
        ssoAuthenticationProtocolType?: (Automator.SsoAuthenticationProtocolType|null);

        /** ApproveDeviceRequest authMessage */
        authMessage?: (string|null);

        /** ApproveDeviceRequest email */
        email?: (string|null);

        /** ApproveDeviceRequest devicePublicKey */
        devicePublicKey?: (Uint8Array|null);

        /** ApproveDeviceRequest serverEccPublicKeyId */
        serverEccPublicKeyId?: (number|null);

        /** ApproveDeviceRequest userEncryptedDataKey */
        userEncryptedDataKey?: (Uint8Array|null);

        /** ApproveDeviceRequest userEncryptedDataKeyType */
        userEncryptedDataKeyType?: (Enterprise.EncryptedKeyType|null);

        /** ApproveDeviceRequest ipAddress */
        ipAddress?: (string|null);
    }

    /**
     * ApproveDeviceRequest
     * This is used to ask Automator to approve a user's device.
     * It requires a SAML Authentication response, or the equivalent.
     *
     */
    class ApproveDeviceRequest implements IApproveDeviceRequest {

        /**
         * Constructs a new ApproveDeviceRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IApproveDeviceRequest);

        /** ApproveDeviceRequest automatorId. */
        public automatorId: (number|Long);

        /** ApproveDeviceRequest ssoAuthenticationProtocolType. */
        public ssoAuthenticationProtocolType: Automator.SsoAuthenticationProtocolType;

        /** ApproveDeviceRequest authMessage. */
        public authMessage: string;

        /** ApproveDeviceRequest email. */
        public email: string;

        /** ApproveDeviceRequest devicePublicKey. */
        public devicePublicKey: Uint8Array;

        /** ApproveDeviceRequest serverEccPublicKeyId. */
        public serverEccPublicKeyId: number;

        /** ApproveDeviceRequest userEncryptedDataKey. */
        public userEncryptedDataKey: Uint8Array;

        /** ApproveDeviceRequest userEncryptedDataKeyType. */
        public userEncryptedDataKeyType: Enterprise.EncryptedKeyType;

        /** ApproveDeviceRequest ipAddress. */
        public ipAddress: string;

        /**
         * Creates a new ApproveDeviceRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApproveDeviceRequest instance
         */
        public static create(properties?: Automator.IApproveDeviceRequest): Automator.ApproveDeviceRequest;

        /**
         * Encodes the specified ApproveDeviceRequest message. Does not implicitly {@link Automator.ApproveDeviceRequest.verify|verify} messages.
         * @param message ApproveDeviceRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IApproveDeviceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ApproveDeviceRequest message, length delimited. Does not implicitly {@link Automator.ApproveDeviceRequest.verify|verify} messages.
         * @param message ApproveDeviceRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IApproveDeviceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ApproveDeviceRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApproveDeviceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.ApproveDeviceRequest;

        /**
         * Decodes an ApproveDeviceRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApproveDeviceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.ApproveDeviceRequest;

        /**
         * Verifies an ApproveDeviceRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ApproveDeviceRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ApproveDeviceRequest
         */
        public static fromObject(object: { [k: string]: any }): Automator.ApproveDeviceRequest;

        /**
         * Creates a plain object from an ApproveDeviceRequest message. Also converts values to other types if specified.
         * @param message ApproveDeviceRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.ApproveDeviceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ApproveDeviceRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SetupRequest. */
    interface ISetupRequest {

        /** SetupRequest automatorId */
        automatorId?: (number|Long|null);

        /** SetupRequest serverEccPublicKeyId */
        serverEccPublicKeyId?: (number|null);

        /** SetupRequest automatorState */
        automatorState?: (Automator.AutomatorState|null);

        /** SetupRequest encryptedEnterprisePrivateEcKey */
        encryptedEnterprisePrivateEcKey?: (Uint8Array|null);

        /** SetupRequest encryptedEnterprisePrivateRsaKey */
        encryptedEnterprisePrivateRsaKey?: (Uint8Array|null);
    }

    /**
     * SetupRequest
     * In NEEDS_CRYPTO_STEP_1, this causes the automator to reply with the automator public EC key.
     * In NEEDS_CRYPTO_STEP_2, this causes the automator to accept the ec_enterprise_private_key encrypted with the automator's public EC key.
     *
     * The client should check the automatorState in the AutomatorResponse to see what the next step should be.
     *
     */
    class SetupRequest implements ISetupRequest {

        /**
         * Constructs a new SetupRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.ISetupRequest);

        /** SetupRequest automatorId. */
        public automatorId: (number|Long);

        /** SetupRequest serverEccPublicKeyId. */
        public serverEccPublicKeyId: number;

        /** SetupRequest automatorState. */
        public automatorState: Automator.AutomatorState;

        /** SetupRequest encryptedEnterprisePrivateEcKey. */
        public encryptedEnterprisePrivateEcKey: Uint8Array;

        /** SetupRequest encryptedEnterprisePrivateRsaKey. */
        public encryptedEnterprisePrivateRsaKey: Uint8Array;

        /**
         * Creates a new SetupRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SetupRequest instance
         */
        public static create(properties?: Automator.ISetupRequest): Automator.SetupRequest;

        /**
         * Encodes the specified SetupRequest message. Does not implicitly {@link Automator.SetupRequest.verify|verify} messages.
         * @param message SetupRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.ISetupRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SetupRequest message, length delimited. Does not implicitly {@link Automator.SetupRequest.verify|verify} messages.
         * @param message SetupRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.ISetupRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SetupRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SetupRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.SetupRequest;

        /**
         * Decodes a SetupRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SetupRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.SetupRequest;

        /**
         * Verifies a SetupRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SetupRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SetupRequest
         */
        public static fromObject(object: { [k: string]: any }): Automator.SetupRequest;

        /**
         * Creates a plain object from a SetupRequest message. Also converts values to other types if specified.
         * @param message SetupRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.SetupRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SetupRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StatusRequest. */
    interface IStatusRequest {

        /** StatusRequest automatorId */
        automatorId?: (number|Long|null);

        /** StatusRequest serverEccPublicKeyId */
        serverEccPublicKeyId?: (number|null);
    }

    /**
     * StatusRequest
     * This is used to ask the Automator instance for its status via an authenticated REST call.
     */
    class StatusRequest implements IStatusRequest {

        /**
         * Constructs a new StatusRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IStatusRequest);

        /** StatusRequest automatorId. */
        public automatorId: (number|Long);

        /** StatusRequest serverEccPublicKeyId. */
        public serverEccPublicKeyId: number;

        /**
         * Creates a new StatusRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StatusRequest instance
         */
        public static create(properties?: Automator.IStatusRequest): Automator.StatusRequest;

        /**
         * Encodes the specified StatusRequest message. Does not implicitly {@link Automator.StatusRequest.verify|verify} messages.
         * @param message StatusRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IStatusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StatusRequest message, length delimited. Does not implicitly {@link Automator.StatusRequest.verify|verify} messages.
         * @param message StatusRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IStatusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StatusRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StatusRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.StatusRequest;

        /**
         * Decodes a StatusRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StatusRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.StatusRequest;

        /**
         * Verifies a StatusRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StatusRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StatusRequest
         */
        public static fromObject(object: { [k: string]: any }): Automator.StatusRequest;

        /**
         * Creates a plain object from a StatusRequest message. Also converts values to other types if specified.
         * @param message StatusRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.StatusRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StatusRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an InitializeRequest. */
    interface IInitializeRequest {

        /** InitializeRequest automatorId */
        automatorId?: (number|Long|null);

        /** InitializeRequest idpMetadata */
        idpMetadata?: (string|null);

        /** InitializeRequest idpSigningCertificate */
        idpSigningCertificate?: (Uint8Array|null);

        /** InitializeRequest ssoEntityId */
        ssoEntityId?: (string|null);

        /** InitializeRequest emailMapping */
        emailMapping?: (string|null);

        /** InitializeRequest firstnameMapping */
        firstnameMapping?: (string|null);

        /** InitializeRequest lastnameMapping */
        lastnameMapping?: (string|null);

        /** InitializeRequest disabled */
        disabled?: (boolean|null);

        /** InitializeRequest serverEccPublicKeyId */
        serverEccPublicKeyId?: (number|null);

        /** InitializeRequest config */
        config?: (Uint8Array|null);

        /** InitializeRequest sslMode */
        sslMode?: (string|null);

        /** InitializeRequest persistState */
        persistState?: (boolean|null);

        /** InitializeRequest disableSniCheck */
        disableSniCheck?: (boolean|null);

        /** InitializeRequest sslCertificateFilename */
        sslCertificateFilename?: (string|null);

        /** InitializeRequest sslCertificateFilePassword */
        sslCertificateFilePassword?: (string|null);

        /** InitializeRequest sslCertificateKeyPassword */
        sslCertificateKeyPassword?: (string|null);

        /** InitializeRequest sslCertificateContents */
        sslCertificateContents?: (Uint8Array|null);

        /** InitializeRequest automatorHost */
        automatorHost?: (string|null);

        /** InitializeRequest automatorPort */
        automatorPort?: (string|null);

        /** InitializeRequest ipAllow */
        ipAllow?: (string|null);

        /** InitializeRequest ipDeny */
        ipDeny?: (string|null);
    }

    /**
     * InitializeRequest
     * This is used to Initialize the Automator instance via an authenticated REST call.
     * Updated for Automator 2.0 by adding 9 new configuration parameters.
     * Updated for Automator 2.2 by adding 2 new configuration parameters.
     *
     */
    class InitializeRequest implements IInitializeRequest {

        /**
         * Constructs a new InitializeRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IInitializeRequest);

        /** InitializeRequest automatorId. */
        public automatorId: (number|Long);

        /** InitializeRequest idpMetadata. */
        public idpMetadata: string;

        /** InitializeRequest idpSigningCertificate. */
        public idpSigningCertificate: Uint8Array;

        /** InitializeRequest ssoEntityId. */
        public ssoEntityId: string;

        /** InitializeRequest emailMapping. */
        public emailMapping: string;

        /** InitializeRequest firstnameMapping. */
        public firstnameMapping: string;

        /** InitializeRequest lastnameMapping. */
        public lastnameMapping: string;

        /** InitializeRequest disabled. */
        public disabled: boolean;

        /** InitializeRequest serverEccPublicKeyId. */
        public serverEccPublicKeyId: number;

        /** InitializeRequest config. */
        public config: Uint8Array;

        /** InitializeRequest sslMode. */
        public sslMode: string;

        /** InitializeRequest persistState. */
        public persistState: boolean;

        /** InitializeRequest disableSniCheck. */
        public disableSniCheck: boolean;

        /** InitializeRequest sslCertificateFilename. */
        public sslCertificateFilename: string;

        /** InitializeRequest sslCertificateFilePassword. */
        public sslCertificateFilePassword: string;

        /** InitializeRequest sslCertificateKeyPassword. */
        public sslCertificateKeyPassword: string;

        /** InitializeRequest sslCertificateContents. */
        public sslCertificateContents: Uint8Array;

        /** InitializeRequest automatorHost. */
        public automatorHost: string;

        /** InitializeRequest automatorPort. */
        public automatorPort: string;

        /** InitializeRequest ipAllow. */
        public ipAllow: string;

        /** InitializeRequest ipDeny. */
        public ipDeny: string;

        /**
         * Creates a new InitializeRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns InitializeRequest instance
         */
        public static create(properties?: Automator.IInitializeRequest): Automator.InitializeRequest;

        /**
         * Encodes the specified InitializeRequest message. Does not implicitly {@link Automator.InitializeRequest.verify|verify} messages.
         * @param message InitializeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IInitializeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InitializeRequest message, length delimited. Does not implicitly {@link Automator.InitializeRequest.verify|verify} messages.
         * @param message InitializeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IInitializeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InitializeRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InitializeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.InitializeRequest;

        /**
         * Decodes an InitializeRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InitializeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.InitializeRequest;

        /**
         * Verifies an InitializeRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InitializeRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InitializeRequest
         */
        public static fromObject(object: { [k: string]: any }): Automator.InitializeRequest;

        /**
         * Creates a plain object from an InitializeRequest message. Also converts values to other types if specified.
         * @param message InitializeRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.InitializeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InitializeRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NotInitializedResponse. */
    interface INotInitializedResponse {

        /** NotInitializedResponse automatorTransmissionKey */
        automatorTransmissionKey?: (Uint8Array|null);

        /** NotInitializedResponse signingCertificate */
        signingCertificate?: (Uint8Array|null);

        /** NotInitializedResponse signingCertificateFilename */
        signingCertificateFilename?: (string|null);

        /** NotInitializedResponse signingCertificatePassword */
        signingCertificatePassword?: (string|null);

        /** NotInitializedResponse signingKeyPassword */
        signingKeyPassword?: (string|null);

        /** NotInitializedResponse signingCertificateFormat */
        signingCertificateFormat?: (Automator.CertificateFormat|null);

        /** NotInitializedResponse automatorPublicKey */
        automatorPublicKey?: (Uint8Array|null);

        /** NotInitializedResponse config */
        config?: (Uint8Array|null);
    }

    /**
     * NotInitializedResponse
     * The Automator instance replies with this message if it has not been initialized.
     * The certificate is most likely the SSL certificate of the Automator.
     * The certificate will be passed to the corresponding Cloud SSO instance and used to sign the IdP messages.
     *
     * This message will be encrypted with the ECC public key whose ID is indicated in the request received from Keeper.
     * All other messages are encrypted with the automatorTransmissionKey.
     */
    class NotInitializedResponse implements INotInitializedResponse {

        /**
         * Constructs a new NotInitializedResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.INotInitializedResponse);

        /** NotInitializedResponse automatorTransmissionKey. */
        public automatorTransmissionKey: Uint8Array;

        /** NotInitializedResponse signingCertificate. */
        public signingCertificate: Uint8Array;

        /** NotInitializedResponse signingCertificateFilename. */
        public signingCertificateFilename: string;

        /** NotInitializedResponse signingCertificatePassword. */
        public signingCertificatePassword: string;

        /** NotInitializedResponse signingKeyPassword. */
        public signingKeyPassword: string;

        /** NotInitializedResponse signingCertificateFormat. */
        public signingCertificateFormat: Automator.CertificateFormat;

        /** NotInitializedResponse automatorPublicKey. */
        public automatorPublicKey: Uint8Array;

        /** NotInitializedResponse config. */
        public config: Uint8Array;

        /**
         * Creates a new NotInitializedResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NotInitializedResponse instance
         */
        public static create(properties?: Automator.INotInitializedResponse): Automator.NotInitializedResponse;

        /**
         * Encodes the specified NotInitializedResponse message. Does not implicitly {@link Automator.NotInitializedResponse.verify|verify} messages.
         * @param message NotInitializedResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.INotInitializedResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NotInitializedResponse message, length delimited. Does not implicitly {@link Automator.NotInitializedResponse.verify|verify} messages.
         * @param message NotInitializedResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.INotInitializedResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NotInitializedResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NotInitializedResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.NotInitializedResponse;

        /**
         * Decodes a NotInitializedResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NotInitializedResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.NotInitializedResponse;

        /**
         * Verifies a NotInitializedResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NotInitializedResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NotInitializedResponse
         */
        public static fromObject(object: { [k: string]: any }): Automator.NotInitializedResponse;

        /**
         * Creates a plain object from a NotInitializedResponse message. Also converts values to other types if specified.
         * @param message NotInitializedResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.NotInitializedResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NotInitializedResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AutomatorResponse. */
    interface IAutomatorResponse {

        /** AutomatorResponse automatorId */
        automatorId?: (number|Long|null);

        /** AutomatorResponse enabled */
        enabled?: (boolean|null);

        /** AutomatorResponse timestamp */
        timestamp?: (number|Long|null);

        /** AutomatorResponse approveDevice */
        approveDevice?: (Automator.IApproveDeviceResponse|null);

        /** AutomatorResponse status */
        status?: (Automator.IStatusResponse|null);

        /** AutomatorResponse notInitialized */
        notInitialized?: (Automator.INotInitializedResponse|null);

        /** AutomatorResponse error */
        error?: (Automator.IErrorResponse|null);

        /** AutomatorResponse automatorState */
        automatorState?: (Automator.AutomatorState|null);

        /** AutomatorResponse automatorPublicEcKey */
        automatorPublicEcKey?: (Uint8Array|null);
    }

    /**
     * AutomatorResponse
     * This is always the response to an API request.
     * Just as in a Keeperapp client, it is encrypted with the one-time transmissionKey sent with the ApiRequest.
     */
    class AutomatorResponse implements IAutomatorResponse {

        /**
         * Constructs a new AutomatorResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IAutomatorResponse);

        /** AutomatorResponse automatorId. */
        public automatorId: (number|Long);

        /** AutomatorResponse enabled. */
        public enabled: boolean;

        /** AutomatorResponse timestamp. */
        public timestamp: (number|Long);

        /** AutomatorResponse approveDevice. */
        public approveDevice?: (Automator.IApproveDeviceResponse|null);

        /** AutomatorResponse status. */
        public status?: (Automator.IStatusResponse|null);

        /** AutomatorResponse notInitialized. */
        public notInitialized?: (Automator.INotInitializedResponse|null);

        /** AutomatorResponse error. */
        public error?: (Automator.IErrorResponse|null);

        /** AutomatorResponse automatorState. */
        public automatorState: Automator.AutomatorState;

        /** AutomatorResponse automatorPublicEcKey. */
        public automatorPublicEcKey: Uint8Array;

        /** AutomatorResponse response. */
        public response?: ("approveDevice"|"status"|"notInitialized"|"error");

        /**
         * Creates a new AutomatorResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AutomatorResponse instance
         */
        public static create(properties?: Automator.IAutomatorResponse): Automator.AutomatorResponse;

        /**
         * Encodes the specified AutomatorResponse message. Does not implicitly {@link Automator.AutomatorResponse.verify|verify} messages.
         * @param message AutomatorResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IAutomatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AutomatorResponse message, length delimited. Does not implicitly {@link Automator.AutomatorResponse.verify|verify} messages.
         * @param message AutomatorResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IAutomatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AutomatorResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AutomatorResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.AutomatorResponse;

        /**
         * Decodes an AutomatorResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AutomatorResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.AutomatorResponse;

        /**
         * Verifies an AutomatorResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AutomatorResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AutomatorResponse
         */
        public static fromObject(object: { [k: string]: any }): Automator.AutomatorResponse;

        /**
         * Creates a plain object from an AutomatorResponse message. Also converts values to other types if specified.
         * @param message AutomatorResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.AutomatorResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AutomatorResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ApproveDeviceResponse. */
    interface IApproveDeviceResponse {

        /** ApproveDeviceResponse approved */
        approved?: (boolean|null);

        /** ApproveDeviceResponse encryptedUserDataKey */
        encryptedUserDataKey?: (Uint8Array|null);

        /** ApproveDeviceResponse message */
        message?: (string|null);
    }

    /**
     * ApproveDeviceResponse
     * Includes information about whether the device was approved or not.
     * There will be a message in the 'message' field of the AutomatorResponse if the device was not approved.
     */
    class ApproveDeviceResponse implements IApproveDeviceResponse {

        /**
         * Constructs a new ApproveDeviceResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IApproveDeviceResponse);

        /** ApproveDeviceResponse approved. */
        public approved: boolean;

        /** ApproveDeviceResponse encryptedUserDataKey. */
        public encryptedUserDataKey: Uint8Array;

        /** ApproveDeviceResponse message. */
        public message: string;

        /**
         * Creates a new ApproveDeviceResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApproveDeviceResponse instance
         */
        public static create(properties?: Automator.IApproveDeviceResponse): Automator.ApproveDeviceResponse;

        /**
         * Encodes the specified ApproveDeviceResponse message. Does not implicitly {@link Automator.ApproveDeviceResponse.verify|verify} messages.
         * @param message ApproveDeviceResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IApproveDeviceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ApproveDeviceResponse message, length delimited. Does not implicitly {@link Automator.ApproveDeviceResponse.verify|verify} messages.
         * @param message ApproveDeviceResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IApproveDeviceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ApproveDeviceResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApproveDeviceResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.ApproveDeviceResponse;

        /**
         * Decodes an ApproveDeviceResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApproveDeviceResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.ApproveDeviceResponse;

        /**
         * Verifies an ApproveDeviceResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ApproveDeviceResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ApproveDeviceResponse
         */
        public static fromObject(object: { [k: string]: any }): Automator.ApproveDeviceResponse;

        /**
         * Creates a plain object from an ApproveDeviceResponse message. Also converts values to other types if specified.
         * @param message ApproveDeviceResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.ApproveDeviceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ApproveDeviceResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StatusResponse. */
    interface IStatusResponse {

        /** StatusResponse initialized */
        initialized?: (boolean|null);

        /** StatusResponse enabledTimestamp */
        enabledTimestamp?: (number|Long|null);

        /** StatusResponse initializedTimestamp */
        initializedTimestamp?: (number|Long|null);

        /** StatusResponse updatedTimestamp */
        updatedTimestamp?: (number|Long|null);

        /** StatusResponse numberOfDevicesApproved */
        numberOfDevicesApproved?: (number|Long|null);

        /** StatusResponse numberOfDevicesDenied */
        numberOfDevicesDenied?: (number|Long|null);

        /** StatusResponse numberOfErrors */
        numberOfErrors?: (number|Long|null);

        /** StatusResponse sslCertificateExpiration */
        sslCertificateExpiration?: (number|Long|null);

        /** StatusResponse notInitializedResponse */
        notInitializedResponse?: (Automator.INotInitializedResponse|null);

        /** StatusResponse config */
        config?: (Uint8Array|null);
    }

    /**
     * StatusResponse
     * Includes information about the status of the Automator instance, if it has been initialized.
     * There will be a message in the 'message' field of the AutomatorResponse if there was an internal error.
     * If this is in response to an 'initializeRequest' message it will contain a NotInitializedResponse that
     * contains information about the signing certificate used by the Automator.
     */
    class StatusResponse implements IStatusResponse {

        /**
         * Constructs a new StatusResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IStatusResponse);

        /** StatusResponse initialized. */
        public initialized: boolean;

        /** StatusResponse enabledTimestamp. */
        public enabledTimestamp: (number|Long);

        /** StatusResponse initializedTimestamp. */
        public initializedTimestamp: (number|Long);

        /** StatusResponse updatedTimestamp. */
        public updatedTimestamp: (number|Long);

        /** StatusResponse numberOfDevicesApproved. */
        public numberOfDevicesApproved: (number|Long);

        /** StatusResponse numberOfDevicesDenied. */
        public numberOfDevicesDenied: (number|Long);

        /** StatusResponse numberOfErrors. */
        public numberOfErrors: (number|Long);

        /** StatusResponse sslCertificateExpiration. */
        public sslCertificateExpiration: (number|Long);

        /** StatusResponse notInitializedResponse. */
        public notInitializedResponse?: (Automator.INotInitializedResponse|null);

        /** StatusResponse config. */
        public config: Uint8Array;

        /**
         * Creates a new StatusResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StatusResponse instance
         */
        public static create(properties?: Automator.IStatusResponse): Automator.StatusResponse;

        /**
         * Encodes the specified StatusResponse message. Does not implicitly {@link Automator.StatusResponse.verify|verify} messages.
         * @param message StatusResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StatusResponse message, length delimited. Does not implicitly {@link Automator.StatusResponse.verify|verify} messages.
         * @param message StatusResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StatusResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StatusResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.StatusResponse;

        /**
         * Decodes a StatusResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StatusResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.StatusResponse;

        /**
         * Verifies a StatusResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StatusResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StatusResponse
         */
        public static fromObject(object: { [k: string]: any }): Automator.StatusResponse;

        /**
         * Creates a plain object from a StatusResponse message. Also converts values to other types if specified.
         * @param message StatusResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.StatusResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StatusResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ErrorResponse. */
    interface IErrorResponse {

        /** ErrorResponse message */
        message?: (string|null);
    }

    /**
     * ErrorResponse
     * Includes error information, if the Automator encountered an error during processing.
     */
    class ErrorResponse implements IErrorResponse {

        /**
         * Constructs a new ErrorResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IErrorResponse);

        /** ErrorResponse message. */
        public message: string;

        /**
         * Creates a new ErrorResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ErrorResponse instance
         */
        public static create(properties?: Automator.IErrorResponse): Automator.ErrorResponse;

        /**
         * Encodes the specified ErrorResponse message. Does not implicitly {@link Automator.ErrorResponse.verify|verify} messages.
         * @param message ErrorResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IErrorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ErrorResponse message, length delimited. Does not implicitly {@link Automator.ErrorResponse.verify|verify} messages.
         * @param message ErrorResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IErrorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ErrorResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ErrorResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.ErrorResponse;

        /**
         * Decodes an ErrorResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ErrorResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.ErrorResponse;

        /**
         * Verifies an ErrorResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ErrorResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ErrorResponse
         */
        public static fromObject(object: { [k: string]: any }): Automator.ErrorResponse;

        /**
         * Creates a plain object from an ErrorResponse message. Also converts values to other types if specified.
         * @param message ErrorResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.ErrorResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ErrorResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** These are the known skill types. */
    enum SkillType {
        UNKNOWN_SKILL_TYPE = 0,
        DEVICE_APPROVAL = 1,
        TEAM_APPROVAL = 2
    }

    /** Properties of a LogEntry. */
    interface ILogEntry {

        /** LogEntry serverTime */
        serverTime?: (string|null);

        /** LogEntry messageLevel */
        messageLevel?: (string|null);

        /** LogEntry component */
        component?: (string|null);

        /** LogEntry message */
        message?: (string|null);
    }

    /**
     * One entry from the log.
     * Normally, log entries will be sorted in reverse chronological order (newest first).
     *
     * Included in AdminResponse.
     */
    class LogEntry implements ILogEntry {

        /**
         * Constructs a new LogEntry.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.ILogEntry);

        /** LogEntry serverTime. */
        public serverTime: string;

        /** LogEntry messageLevel. */
        public messageLevel: string;

        /** LogEntry component. */
        public component: string;

        /** LogEntry message. */
        public message: string;

        /**
         * Creates a new LogEntry instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LogEntry instance
         */
        public static create(properties?: Automator.ILogEntry): Automator.LogEntry;

        /**
         * Encodes the specified LogEntry message. Does not implicitly {@link Automator.LogEntry.verify|verify} messages.
         * @param message LogEntry message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.ILogEntry, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LogEntry message, length delimited. Does not implicitly {@link Automator.LogEntry.verify|verify} messages.
         * @param message LogEntry message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.ILogEntry, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LogEntry message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LogEntry
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.LogEntry;

        /**
         * Decodes a LogEntry message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LogEntry
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.LogEntry;

        /**
         * Verifies a LogEntry message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LogEntry message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LogEntry
         */
        public static fromObject(object: { [k: string]: any }): Automator.LogEntry;

        /**
         * Creates a plain object from a LogEntry message. Also converts values to other types if specified.
         * @param message LogEntry
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.LogEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LogEntry to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /**
     * AutomatorState (enum)
     *
     * Provides the state of the Automator - part of the status.
     */
    enum AutomatorState {
        UNKNOWN_STATE = 0,
        RUNNING = 1,
        ERROR = 2,
        NEEDS_INITIALIZATION = 3,
        NEEDS_CRYPTO_STEP_1 = 4,
        NEEDS_CRYPTO_STEP_2 = 5
    }

    /** Properties of an AdminResponse. */
    interface IAdminResponse {

        /** AdminResponse success */
        success?: (boolean|null);

        /** AdminResponse message */
        message?: (string|null);

        /** AdminResponse automatorInfo */
        automatorInfo?: (Automator.IAutomatorInfo[]|null);
    }

    /**
     * AdminResponse
     *
     * This is sent in reply to an Admin request.
     * There can be more than one Automator on a Node so that's why this is a multi-response.
     */
    class AdminResponse implements IAdminResponse {

        /**
         * Constructs a new AdminResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IAdminResponse);

        /** AdminResponse success. */
        public success: boolean;

        /** AdminResponse message. */
        public message: string;

        /** AdminResponse automatorInfo. */
        public automatorInfo: Automator.IAutomatorInfo[];

        /**
         * Creates a new AdminResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AdminResponse instance
         */
        public static create(properties?: Automator.IAdminResponse): Automator.AdminResponse;

        /**
         * Encodes the specified AdminResponse message. Does not implicitly {@link Automator.AdminResponse.verify|verify} messages.
         * @param message AdminResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IAdminResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AdminResponse message, length delimited. Does not implicitly {@link Automator.AdminResponse.verify|verify} messages.
         * @param message AdminResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IAdminResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AdminResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AdminResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.AdminResponse;

        /**
         * Decodes an AdminResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AdminResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.AdminResponse;

        /**
         * Verifies an AdminResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AdminResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AdminResponse
         */
        public static fromObject(object: { [k: string]: any }): Automator.AdminResponse;

        /**
         * Creates a plain object from an AdminResponse message. Also converts values to other types if specified.
         * @param message AdminResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.AdminResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AdminResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AutomatorInfo. */
    interface IAutomatorInfo {

        /** AutomatorInfo automatorId */
        automatorId?: (number|Long|null);

        /** AutomatorInfo nodeId */
        nodeId?: (number|Long|null);

        /** AutomatorInfo name */
        name?: (string|null);

        /** AutomatorInfo enabled */
        enabled?: (boolean|null);

        /** AutomatorInfo url */
        url?: (string|null);

        /** AutomatorInfo automatorSkills */
        automatorSkills?: (Automator.IAutomatorSkill[]|null);

        /** AutomatorInfo automatorSettingValues */
        automatorSettingValues?: (Automator.IAutomatorSettingValue[]|null);

        /** AutomatorInfo status */
        status?: (Automator.IStatusResponse|null);

        /** AutomatorInfo logEntries */
        logEntries?: (Automator.ILogEntry[]|null);

        /** AutomatorInfo automatorState */
        automatorState?: (Automator.AutomatorState|null);
    }

    /** Information about an automator for a client that is configuring an Automator. */
    class AutomatorInfo implements IAutomatorInfo {

        /**
         * Constructs a new AutomatorInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IAutomatorInfo);

        /** AutomatorInfo automatorId. */
        public automatorId: (number|Long);

        /** AutomatorInfo nodeId. */
        public nodeId: (number|Long);

        /** AutomatorInfo name. */
        public name: string;

        /** AutomatorInfo enabled. */
        public enabled: boolean;

        /** AutomatorInfo url. */
        public url: string;

        /** AutomatorInfo automatorSkills. */
        public automatorSkills: Automator.IAutomatorSkill[];

        /** AutomatorInfo automatorSettingValues. */
        public automatorSettingValues: Automator.IAutomatorSettingValue[];

        /** AutomatorInfo status. */
        public status?: (Automator.IStatusResponse|null);

        /** AutomatorInfo logEntries. */
        public logEntries: Automator.ILogEntry[];

        /** AutomatorInfo automatorState. */
        public automatorState: Automator.AutomatorState;

        /**
         * Creates a new AutomatorInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AutomatorInfo instance
         */
        public static create(properties?: Automator.IAutomatorInfo): Automator.AutomatorInfo;

        /**
         * Encodes the specified AutomatorInfo message. Does not implicitly {@link Automator.AutomatorInfo.verify|verify} messages.
         * @param message AutomatorInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IAutomatorInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AutomatorInfo message, length delimited. Does not implicitly {@link Automator.AutomatorInfo.verify|verify} messages.
         * @param message AutomatorInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IAutomatorInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AutomatorInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AutomatorInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.AutomatorInfo;

        /**
         * Decodes an AutomatorInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AutomatorInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.AutomatorInfo;

        /**
         * Verifies an AutomatorInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AutomatorInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AutomatorInfo
         */
        public static fromObject(object: { [k: string]: any }): Automator.AutomatorInfo;

        /**
         * Creates a plain object from an AutomatorInfo message. Also converts values to other types if specified.
         * @param message AutomatorInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.AutomatorInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AutomatorInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AdminCreateAutomatorRequest. */
    interface IAdminCreateAutomatorRequest {

        /** AdminCreateAutomatorRequest nodeId */
        nodeId?: (number|Long|null);

        /** AdminCreateAutomatorRequest name */
        name?: (string|null);

        /** AdminCreateAutomatorRequest skill */
        skill?: (Automator.IAutomatorSkill|null);
    }

    /**
     * AdminCreateAutomatorRequest
     * Create an automator on a Node.
     *
     * Returns AdminResponse
     */
    class AdminCreateAutomatorRequest implements IAdminCreateAutomatorRequest {

        /**
         * Constructs a new AdminCreateAutomatorRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IAdminCreateAutomatorRequest);

        /** AdminCreateAutomatorRequest nodeId. */
        public nodeId: (number|Long);

        /** AdminCreateAutomatorRequest name. */
        public name: string;

        /** AdminCreateAutomatorRequest skill. */
        public skill?: (Automator.IAutomatorSkill|null);

        /**
         * Creates a new AdminCreateAutomatorRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AdminCreateAutomatorRequest instance
         */
        public static create(properties?: Automator.IAdminCreateAutomatorRequest): Automator.AdminCreateAutomatorRequest;

        /**
         * Encodes the specified AdminCreateAutomatorRequest message. Does not implicitly {@link Automator.AdminCreateAutomatorRequest.verify|verify} messages.
         * @param message AdminCreateAutomatorRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IAdminCreateAutomatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AdminCreateAutomatorRequest message, length delimited. Does not implicitly {@link Automator.AdminCreateAutomatorRequest.verify|verify} messages.
         * @param message AdminCreateAutomatorRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IAdminCreateAutomatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AdminCreateAutomatorRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AdminCreateAutomatorRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.AdminCreateAutomatorRequest;

        /**
         * Decodes an AdminCreateAutomatorRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AdminCreateAutomatorRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.AdminCreateAutomatorRequest;

        /**
         * Verifies an AdminCreateAutomatorRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AdminCreateAutomatorRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AdminCreateAutomatorRequest
         */
        public static fromObject(object: { [k: string]: any }): Automator.AdminCreateAutomatorRequest;

        /**
         * Creates a plain object from an AdminCreateAutomatorRequest message. Also converts values to other types if specified.
         * @param message AdminCreateAutomatorRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.AdminCreateAutomatorRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AdminCreateAutomatorRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AdminDeleteAutomatorRequest. */
    interface IAdminDeleteAutomatorRequest {

        /** AdminDeleteAutomatorRequest automatorId */
        automatorId?: (number|Long|null);
    }

    /**
     * AdminDeleteAutomatorRequest
     *
     * Delete an automator and its settings.
     * Does not notify or affect the actual Automator running at the client site.
     *
     * Returns AdminResponse
     */
    class AdminDeleteAutomatorRequest implements IAdminDeleteAutomatorRequest {

        /**
         * Constructs a new AdminDeleteAutomatorRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IAdminDeleteAutomatorRequest);

        /** AdminDeleteAutomatorRequest automatorId. */
        public automatorId: (number|Long);

        /**
         * Creates a new AdminDeleteAutomatorRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AdminDeleteAutomatorRequest instance
         */
        public static create(properties?: Automator.IAdminDeleteAutomatorRequest): Automator.AdminDeleteAutomatorRequest;

        /**
         * Encodes the specified AdminDeleteAutomatorRequest message. Does not implicitly {@link Automator.AdminDeleteAutomatorRequest.verify|verify} messages.
         * @param message AdminDeleteAutomatorRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IAdminDeleteAutomatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AdminDeleteAutomatorRequest message, length delimited. Does not implicitly {@link Automator.AdminDeleteAutomatorRequest.verify|verify} messages.
         * @param message AdminDeleteAutomatorRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IAdminDeleteAutomatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AdminDeleteAutomatorRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AdminDeleteAutomatorRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.AdminDeleteAutomatorRequest;

        /**
         * Decodes an AdminDeleteAutomatorRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AdminDeleteAutomatorRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.AdminDeleteAutomatorRequest;

        /**
         * Verifies an AdminDeleteAutomatorRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AdminDeleteAutomatorRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AdminDeleteAutomatorRequest
         */
        public static fromObject(object: { [k: string]: any }): Automator.AdminDeleteAutomatorRequest;

        /**
         * Creates a plain object from an AdminDeleteAutomatorRequest message. Also converts values to other types if specified.
         * @param message AdminDeleteAutomatorRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.AdminDeleteAutomatorRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AdminDeleteAutomatorRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AdminGetAutomatorsOnNodeRequest. */
    interface IAdminGetAutomatorsOnNodeRequest {

        /** AdminGetAutomatorsOnNodeRequest nodeId */
        nodeId?: (number|Long|null);
    }

    /**
     * Retrieve automators on a node.
     * The info should also be in enterprise_summary or whatever it is called.
     *
     * If you want info on a particular automator, use automator_get.
     * Returns AdminResponse
     */
    class AdminGetAutomatorsOnNodeRequest implements IAdminGetAutomatorsOnNodeRequest {

        /**
         * Constructs a new AdminGetAutomatorsOnNodeRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IAdminGetAutomatorsOnNodeRequest);

        /** AdminGetAutomatorsOnNodeRequest nodeId. */
        public nodeId: (number|Long);

        /**
         * Creates a new AdminGetAutomatorsOnNodeRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AdminGetAutomatorsOnNodeRequest instance
         */
        public static create(properties?: Automator.IAdminGetAutomatorsOnNodeRequest): Automator.AdminGetAutomatorsOnNodeRequest;

        /**
         * Encodes the specified AdminGetAutomatorsOnNodeRequest message. Does not implicitly {@link Automator.AdminGetAutomatorsOnNodeRequest.verify|verify} messages.
         * @param message AdminGetAutomatorsOnNodeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IAdminGetAutomatorsOnNodeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AdminGetAutomatorsOnNodeRequest message, length delimited. Does not implicitly {@link Automator.AdminGetAutomatorsOnNodeRequest.verify|verify} messages.
         * @param message AdminGetAutomatorsOnNodeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IAdminGetAutomatorsOnNodeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AdminGetAutomatorsOnNodeRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AdminGetAutomatorsOnNodeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.AdminGetAutomatorsOnNodeRequest;

        /**
         * Decodes an AdminGetAutomatorsOnNodeRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AdminGetAutomatorsOnNodeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.AdminGetAutomatorsOnNodeRequest;

        /**
         * Verifies an AdminGetAutomatorsOnNodeRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AdminGetAutomatorsOnNodeRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AdminGetAutomatorsOnNodeRequest
         */
        public static fromObject(object: { [k: string]: any }): Automator.AdminGetAutomatorsOnNodeRequest;

        /**
         * Creates a plain object from an AdminGetAutomatorsOnNodeRequest message. Also converts values to other types if specified.
         * @param message AdminGetAutomatorsOnNodeRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.AdminGetAutomatorsOnNodeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AdminGetAutomatorsOnNodeRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AdminGetAutomatorsForEnterpriseRequest. */
    interface IAdminGetAutomatorsForEnterpriseRequest {

        /** AdminGetAutomatorsForEnterpriseRequest enterpriseId */
        enterpriseId?: (number|null);
    }

    /**
     * Retrieve automators in an enterprise.
     * The info should also be in enterprise_summary or whatever it is called.
     *
     * If you want info on a particular automator, use automator_get.
     * If you want a list of automators on a node, use automator_get_on_node
     * Returns AdminResponse
     */
    class AdminGetAutomatorsForEnterpriseRequest implements IAdminGetAutomatorsForEnterpriseRequest {

        /**
         * Constructs a new AdminGetAutomatorsForEnterpriseRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IAdminGetAutomatorsForEnterpriseRequest);

        /** AdminGetAutomatorsForEnterpriseRequest enterpriseId. */
        public enterpriseId: number;

        /**
         * Creates a new AdminGetAutomatorsForEnterpriseRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AdminGetAutomatorsForEnterpriseRequest instance
         */
        public static create(properties?: Automator.IAdminGetAutomatorsForEnterpriseRequest): Automator.AdminGetAutomatorsForEnterpriseRequest;

        /**
         * Encodes the specified AdminGetAutomatorsForEnterpriseRequest message. Does not implicitly {@link Automator.AdminGetAutomatorsForEnterpriseRequest.verify|verify} messages.
         * @param message AdminGetAutomatorsForEnterpriseRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IAdminGetAutomatorsForEnterpriseRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AdminGetAutomatorsForEnterpriseRequest message, length delimited. Does not implicitly {@link Automator.AdminGetAutomatorsForEnterpriseRequest.verify|verify} messages.
         * @param message AdminGetAutomatorsForEnterpriseRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IAdminGetAutomatorsForEnterpriseRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AdminGetAutomatorsForEnterpriseRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AdminGetAutomatorsForEnterpriseRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.AdminGetAutomatorsForEnterpriseRequest;

        /**
         * Decodes an AdminGetAutomatorsForEnterpriseRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AdminGetAutomatorsForEnterpriseRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.AdminGetAutomatorsForEnterpriseRequest;

        /**
         * Verifies an AdminGetAutomatorsForEnterpriseRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AdminGetAutomatorsForEnterpriseRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AdminGetAutomatorsForEnterpriseRequest
         */
        public static fromObject(object: { [k: string]: any }): Automator.AdminGetAutomatorsForEnterpriseRequest;

        /**
         * Creates a plain object from an AdminGetAutomatorsForEnterpriseRequest message. Also converts values to other types if specified.
         * @param message AdminGetAutomatorsForEnterpriseRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.AdminGetAutomatorsForEnterpriseRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AdminGetAutomatorsForEnterpriseRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AdminGetAutomatorRequest. */
    interface IAdminGetAutomatorRequest {

        /** AdminGetAutomatorRequest automatorId */
        automatorId?: (number|Long|null);
    }

    /**
     * Retrieve information about a specific automator.
     *
     * Returns AdminResponse
     */
    class AdminGetAutomatorRequest implements IAdminGetAutomatorRequest {

        /**
         * Constructs a new AdminGetAutomatorRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IAdminGetAutomatorRequest);

        /** AdminGetAutomatorRequest automatorId. */
        public automatorId: (number|Long);

        /**
         * Creates a new AdminGetAutomatorRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AdminGetAutomatorRequest instance
         */
        public static create(properties?: Automator.IAdminGetAutomatorRequest): Automator.AdminGetAutomatorRequest;

        /**
         * Encodes the specified AdminGetAutomatorRequest message. Does not implicitly {@link Automator.AdminGetAutomatorRequest.verify|verify} messages.
         * @param message AdminGetAutomatorRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IAdminGetAutomatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AdminGetAutomatorRequest message, length delimited. Does not implicitly {@link Automator.AdminGetAutomatorRequest.verify|verify} messages.
         * @param message AdminGetAutomatorRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IAdminGetAutomatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AdminGetAutomatorRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AdminGetAutomatorRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.AdminGetAutomatorRequest;

        /**
         * Decodes an AdminGetAutomatorRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AdminGetAutomatorRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.AdminGetAutomatorRequest;

        /**
         * Verifies an AdminGetAutomatorRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AdminGetAutomatorRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AdminGetAutomatorRequest
         */
        public static fromObject(object: { [k: string]: any }): Automator.AdminGetAutomatorRequest;

        /**
         * Creates a plain object from an AdminGetAutomatorRequest message. Also converts values to other types if specified.
         * @param message AdminGetAutomatorRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.AdminGetAutomatorRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AdminGetAutomatorRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AdminEnableAutomatorRequest. */
    interface IAdminEnableAutomatorRequest {

        /** AdminEnableAutomatorRequest automatorId */
        automatorId?: (number|Long|null);

        /** AdminEnableAutomatorRequest enabled */
        enabled?: (boolean|null);
    }

    /**
     * Enable or disable an automator.
     *
     * Returns AdminResponse
     */
    class AdminEnableAutomatorRequest implements IAdminEnableAutomatorRequest {

        /**
         * Constructs a new AdminEnableAutomatorRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IAdminEnableAutomatorRequest);

        /** AdminEnableAutomatorRequest automatorId. */
        public automatorId: (number|Long);

        /** AdminEnableAutomatorRequest enabled. */
        public enabled: boolean;

        /**
         * Creates a new AdminEnableAutomatorRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AdminEnableAutomatorRequest instance
         */
        public static create(properties?: Automator.IAdminEnableAutomatorRequest): Automator.AdminEnableAutomatorRequest;

        /**
         * Encodes the specified AdminEnableAutomatorRequest message. Does not implicitly {@link Automator.AdminEnableAutomatorRequest.verify|verify} messages.
         * @param message AdminEnableAutomatorRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IAdminEnableAutomatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AdminEnableAutomatorRequest message, length delimited. Does not implicitly {@link Automator.AdminEnableAutomatorRequest.verify|verify} messages.
         * @param message AdminEnableAutomatorRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IAdminEnableAutomatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AdminEnableAutomatorRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AdminEnableAutomatorRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.AdminEnableAutomatorRequest;

        /**
         * Decodes an AdminEnableAutomatorRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AdminEnableAutomatorRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.AdminEnableAutomatorRequest;

        /**
         * Verifies an AdminEnableAutomatorRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AdminEnableAutomatorRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AdminEnableAutomatorRequest
         */
        public static fromObject(object: { [k: string]: any }): Automator.AdminEnableAutomatorRequest;

        /**
         * Creates a plain object from an AdminEnableAutomatorRequest message. Also converts values to other types if specified.
         * @param message AdminEnableAutomatorRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.AdminEnableAutomatorRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AdminEnableAutomatorRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AdminEditAutomatorRequest. */
    interface IAdminEditAutomatorRequest {

        /** AdminEditAutomatorRequest automatorId */
        automatorId?: (number|Long|null);

        /** AdminEditAutomatorRequest name */
        name?: (string|null);

        /** AdminEditAutomatorRequest enabled */
        enabled?: (boolean|null);

        /** AdminEditAutomatorRequest url */
        url?: (string|null);

        /** AdminEditAutomatorRequest skillTypes */
        skillTypes?: (Automator.SkillType[]|null);

        /** AdminEditAutomatorRequest automatorSettingValues */
        automatorSettingValues?: (Automator.IAutomatorSettingValue[]|null);
    }

    /**
     * Edit settings on the automator.
     *
     * If a value is non-empty, it will be set on the Automator.
     *
     * Returns AdminResponse with all current settings
     */
    class AdminEditAutomatorRequest implements IAdminEditAutomatorRequest {

        /**
         * Constructs a new AdminEditAutomatorRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IAdminEditAutomatorRequest);

        /** AdminEditAutomatorRequest automatorId. */
        public automatorId: (number|Long);

        /** AdminEditAutomatorRequest name. */
        public name: string;

        /** AdminEditAutomatorRequest enabled. */
        public enabled: boolean;

        /** AdminEditAutomatorRequest url. */
        public url: string;

        /** AdminEditAutomatorRequest skillTypes. */
        public skillTypes: Automator.SkillType[];

        /** AdminEditAutomatorRequest automatorSettingValues. */
        public automatorSettingValues: Automator.IAutomatorSettingValue[];

        /**
         * Creates a new AdminEditAutomatorRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AdminEditAutomatorRequest instance
         */
        public static create(properties?: Automator.IAdminEditAutomatorRequest): Automator.AdminEditAutomatorRequest;

        /**
         * Encodes the specified AdminEditAutomatorRequest message. Does not implicitly {@link Automator.AdminEditAutomatorRequest.verify|verify} messages.
         * @param message AdminEditAutomatorRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IAdminEditAutomatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AdminEditAutomatorRequest message, length delimited. Does not implicitly {@link Automator.AdminEditAutomatorRequest.verify|verify} messages.
         * @param message AdminEditAutomatorRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IAdminEditAutomatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AdminEditAutomatorRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AdminEditAutomatorRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.AdminEditAutomatorRequest;

        /**
         * Decodes an AdminEditAutomatorRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AdminEditAutomatorRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.AdminEditAutomatorRequest;

        /**
         * Verifies an AdminEditAutomatorRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AdminEditAutomatorRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AdminEditAutomatorRequest
         */
        public static fromObject(object: { [k: string]: any }): Automator.AdminEditAutomatorRequest;

        /**
         * Creates a plain object from an AdminEditAutomatorRequest message. Also converts values to other types if specified.
         * @param message AdminEditAutomatorRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.AdminEditAutomatorRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AdminEditAutomatorRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AdminSetupAutomatorRequest. */
    interface IAdminSetupAutomatorRequest {

        /** AdminSetupAutomatorRequest automatorId */
        automatorId?: (number|Long|null);

        /** AdminSetupAutomatorRequest automatorState */
        automatorState?: (Automator.AutomatorState|null);

        /** AdminSetupAutomatorRequest encryptedEcEnterprisePrivateKey */
        encryptedEcEnterprisePrivateKey?: (Uint8Array|null);

        /** AdminSetupAutomatorRequest encryptedRsaEnterprisePrivateKey */
        encryptedRsaEnterprisePrivateKey?: (Uint8Array|null);
    }

    /**
     * Initiate a setup operation with the automator via Keeper.
     * Step 1 is to request the Automator's EC public key.  Use automatorState = NEEDS_CRYPTO_STEP_1
     * Step 2 is to send the ec_enterprise_private_key encrypted with the public key. Use automatorState = NEEDS_CRYPTO_STEP_2
     *
     * Returns AdminSetupAutomatorResponse
     */
    class AdminSetupAutomatorRequest implements IAdminSetupAutomatorRequest {

        /**
         * Constructs a new AdminSetupAutomatorRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IAdminSetupAutomatorRequest);

        /** AdminSetupAutomatorRequest automatorId. */
        public automatorId: (number|Long);

        /** AdminSetupAutomatorRequest automatorState. */
        public automatorState: Automator.AutomatorState;

        /** AdminSetupAutomatorRequest encryptedEcEnterprisePrivateKey. */
        public encryptedEcEnterprisePrivateKey: Uint8Array;

        /** AdminSetupAutomatorRequest encryptedRsaEnterprisePrivateKey. */
        public encryptedRsaEnterprisePrivateKey: Uint8Array;

        /**
         * Creates a new AdminSetupAutomatorRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AdminSetupAutomatorRequest instance
         */
        public static create(properties?: Automator.IAdminSetupAutomatorRequest): Automator.AdminSetupAutomatorRequest;

        /**
         * Encodes the specified AdminSetupAutomatorRequest message. Does not implicitly {@link Automator.AdminSetupAutomatorRequest.verify|verify} messages.
         * @param message AdminSetupAutomatorRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IAdminSetupAutomatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AdminSetupAutomatorRequest message, length delimited. Does not implicitly {@link Automator.AdminSetupAutomatorRequest.verify|verify} messages.
         * @param message AdminSetupAutomatorRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IAdminSetupAutomatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AdminSetupAutomatorRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AdminSetupAutomatorRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.AdminSetupAutomatorRequest;

        /**
         * Decodes an AdminSetupAutomatorRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AdminSetupAutomatorRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.AdminSetupAutomatorRequest;

        /**
         * Verifies an AdminSetupAutomatorRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AdminSetupAutomatorRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AdminSetupAutomatorRequest
         */
        public static fromObject(object: { [k: string]: any }): Automator.AdminSetupAutomatorRequest;

        /**
         * Creates a plain object from an AdminSetupAutomatorRequest message. Also converts values to other types if specified.
         * @param message AdminSetupAutomatorRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.AdminSetupAutomatorRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AdminSetupAutomatorRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AdminSetupAutomatorResponse. */
    interface IAdminSetupAutomatorResponse {

        /** AdminSetupAutomatorResponse success */
        success?: (boolean|null);

        /** AdminSetupAutomatorResponse message */
        message?: (string|null);

        /** AdminSetupAutomatorResponse automatorId */
        automatorId?: (number|Long|null);

        /** AdminSetupAutomatorResponse automatorState */
        automatorState?: (Automator.AutomatorState|null);

        /** AdminSetupAutomatorResponse automatorEcPublicKey */
        automatorEcPublicKey?: (Uint8Array|null);
    }

    /**
     * The response to an AdminSetupAutomatorRequest.
     * The automatorEcPublicKey fields will be non-empty iff the AutomatorState is NEEDS_CRYPTO_STEP_2
     */
    class AdminSetupAutomatorResponse implements IAdminSetupAutomatorResponse {

        /**
         * Constructs a new AdminSetupAutomatorResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IAdminSetupAutomatorResponse);

        /** AdminSetupAutomatorResponse success. */
        public success: boolean;

        /** AdminSetupAutomatorResponse message. */
        public message: string;

        /** AdminSetupAutomatorResponse automatorId. */
        public automatorId: (number|Long);

        /** AdminSetupAutomatorResponse automatorState. */
        public automatorState: Automator.AutomatorState;

        /** AdminSetupAutomatorResponse automatorEcPublicKey. */
        public automatorEcPublicKey: Uint8Array;

        /**
         * Creates a new AdminSetupAutomatorResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AdminSetupAutomatorResponse instance
         */
        public static create(properties?: Automator.IAdminSetupAutomatorResponse): Automator.AdminSetupAutomatorResponse;

        /**
         * Encodes the specified AdminSetupAutomatorResponse message. Does not implicitly {@link Automator.AdminSetupAutomatorResponse.verify|verify} messages.
         * @param message AdminSetupAutomatorResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IAdminSetupAutomatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AdminSetupAutomatorResponse message, length delimited. Does not implicitly {@link Automator.AdminSetupAutomatorResponse.verify|verify} messages.
         * @param message AdminSetupAutomatorResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IAdminSetupAutomatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AdminSetupAutomatorResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AdminSetupAutomatorResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.AdminSetupAutomatorResponse;

        /**
         * Decodes an AdminSetupAutomatorResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AdminSetupAutomatorResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.AdminSetupAutomatorResponse;

        /**
         * Verifies an AdminSetupAutomatorResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AdminSetupAutomatorResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AdminSetupAutomatorResponse
         */
        public static fromObject(object: { [k: string]: any }): Automator.AdminSetupAutomatorResponse;

        /**
         * Creates a plain object from an AdminSetupAutomatorResponse message. Also converts values to other types if specified.
         * @param message AdminSetupAutomatorResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.AdminSetupAutomatorResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AdminSetupAutomatorResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AdminAutomatorSkillsRequest. */
    interface IAdminAutomatorSkillsRequest {

        /** AdminAutomatorSkillsRequest automatorId */
        automatorId?: (number|Long|null);
    }

    /**
     * Retrieve the list of known skills that Automators can have.
     * This is NOT the list of skills that a particular Automator has.
     *
     * Returns AdminAutomatorSkillsResponse.
     */
    class AdminAutomatorSkillsRequest implements IAdminAutomatorSkillsRequest {

        /**
         * Constructs a new AdminAutomatorSkillsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IAdminAutomatorSkillsRequest);

        /** AdminAutomatorSkillsRequest automatorId. */
        public automatorId: (number|Long);

        /**
         * Creates a new AdminAutomatorSkillsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AdminAutomatorSkillsRequest instance
         */
        public static create(properties?: Automator.IAdminAutomatorSkillsRequest): Automator.AdminAutomatorSkillsRequest;

        /**
         * Encodes the specified AdminAutomatorSkillsRequest message. Does not implicitly {@link Automator.AdminAutomatorSkillsRequest.verify|verify} messages.
         * @param message AdminAutomatorSkillsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IAdminAutomatorSkillsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AdminAutomatorSkillsRequest message, length delimited. Does not implicitly {@link Automator.AdminAutomatorSkillsRequest.verify|verify} messages.
         * @param message AdminAutomatorSkillsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IAdminAutomatorSkillsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AdminAutomatorSkillsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AdminAutomatorSkillsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.AdminAutomatorSkillsRequest;

        /**
         * Decodes an AdminAutomatorSkillsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AdminAutomatorSkillsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.AdminAutomatorSkillsRequest;

        /**
         * Verifies an AdminAutomatorSkillsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AdminAutomatorSkillsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AdminAutomatorSkillsRequest
         */
        public static fromObject(object: { [k: string]: any }): Automator.AdminAutomatorSkillsRequest;

        /**
         * Creates a plain object from an AdminAutomatorSkillsRequest message. Also converts values to other types if specified.
         * @param message AdminAutomatorSkillsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.AdminAutomatorSkillsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AdminAutomatorSkillsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AutomatorSkill. */
    interface IAutomatorSkill {

        /** AutomatorSkill skillType */
        skillType?: (Automator.SkillType|null);

        /** AutomatorSkill name */
        name?: (string|null);

        /** AutomatorSkill translatedName */
        translatedName?: (string|null);
    }

    /** Information about a specific defined skill such as Device Approval. */
    class AutomatorSkill implements IAutomatorSkill {

        /**
         * Constructs a new AutomatorSkill.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IAutomatorSkill);

        /** AutomatorSkill skillType. */
        public skillType: Automator.SkillType;

        /** AutomatorSkill name. */
        public name: string;

        /** AutomatorSkill translatedName. */
        public translatedName: string;

        /**
         * Creates a new AutomatorSkill instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AutomatorSkill instance
         */
        public static create(properties?: Automator.IAutomatorSkill): Automator.AutomatorSkill;

        /**
         * Encodes the specified AutomatorSkill message. Does not implicitly {@link Automator.AutomatorSkill.verify|verify} messages.
         * @param message AutomatorSkill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IAutomatorSkill, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AutomatorSkill message, length delimited. Does not implicitly {@link Automator.AutomatorSkill.verify|verify} messages.
         * @param message AutomatorSkill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IAutomatorSkill, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AutomatorSkill message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AutomatorSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.AutomatorSkill;

        /**
         * Decodes an AutomatorSkill message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AutomatorSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.AutomatorSkill;

        /**
         * Verifies an AutomatorSkill message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AutomatorSkill message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AutomatorSkill
         */
        public static fromObject(object: { [k: string]: any }): Automator.AutomatorSkill;

        /**
         * Creates a plain object from an AutomatorSkill message. Also converts values to other types if specified.
         * @param message AutomatorSkill
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.AutomatorSkill, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AutomatorSkill to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AdminAutomatorSkillsResponse. */
    interface IAdminAutomatorSkillsResponse {

        /** AdminAutomatorSkillsResponse success */
        success?: (boolean|null);

        /** AdminAutomatorSkillsResponse message */
        message?: (string|null);

        /** AdminAutomatorSkillsResponse automatorSkills */
        automatorSkills?: (Automator.IAutomatorSkill[]|null);
    }

    /** Contains a list of known skill types that Automators can have. */
    class AdminAutomatorSkillsResponse implements IAdminAutomatorSkillsResponse {

        /**
         * Constructs a new AdminAutomatorSkillsResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IAdminAutomatorSkillsResponse);

        /** AdminAutomatorSkillsResponse success. */
        public success: boolean;

        /** AdminAutomatorSkillsResponse message. */
        public message: string;

        /** AdminAutomatorSkillsResponse automatorSkills. */
        public automatorSkills: Automator.IAutomatorSkill[];

        /**
         * Creates a new AdminAutomatorSkillsResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AdminAutomatorSkillsResponse instance
         */
        public static create(properties?: Automator.IAdminAutomatorSkillsResponse): Automator.AdminAutomatorSkillsResponse;

        /**
         * Encodes the specified AdminAutomatorSkillsResponse message. Does not implicitly {@link Automator.AdminAutomatorSkillsResponse.verify|verify} messages.
         * @param message AdminAutomatorSkillsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IAdminAutomatorSkillsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AdminAutomatorSkillsResponse message, length delimited. Does not implicitly {@link Automator.AdminAutomatorSkillsResponse.verify|verify} messages.
         * @param message AdminAutomatorSkillsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IAdminAutomatorSkillsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AdminAutomatorSkillsResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AdminAutomatorSkillsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.AdminAutomatorSkillsResponse;

        /**
         * Decodes an AdminAutomatorSkillsResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AdminAutomatorSkillsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.AdminAutomatorSkillsResponse;

        /**
         * Verifies an AdminAutomatorSkillsResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AdminAutomatorSkillsResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AdminAutomatorSkillsResponse
         */
        public static fromObject(object: { [k: string]: any }): Automator.AdminAutomatorSkillsResponse;

        /**
         * Creates a plain object from an AdminAutomatorSkillsResponse message. Also converts values to other types if specified.
         * @param message AdminAutomatorSkillsResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.AdminAutomatorSkillsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AdminAutomatorSkillsResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AdminResetAutomatorRequest. */
    interface IAdminResetAutomatorRequest {

        /** AdminResetAutomatorRequest automatorId */
        automatorId?: (number|Long|null);
    }

    /**
     * Sends a message to an Automator to reset all of its settings so that it can be re-initialized.
     *
     * We don't want this in the Console - just in Commander, or for use in testing.
     *
     * Returns AdminResponse
     */
    class AdminResetAutomatorRequest implements IAdminResetAutomatorRequest {

        /**
         * Constructs a new AdminResetAutomatorRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IAdminResetAutomatorRequest);

        /** AdminResetAutomatorRequest automatorId. */
        public automatorId: (number|Long);

        /**
         * Creates a new AdminResetAutomatorRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AdminResetAutomatorRequest instance
         */
        public static create(properties?: Automator.IAdminResetAutomatorRequest): Automator.AdminResetAutomatorRequest;

        /**
         * Encodes the specified AdminResetAutomatorRequest message. Does not implicitly {@link Automator.AdminResetAutomatorRequest.verify|verify} messages.
         * @param message AdminResetAutomatorRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IAdminResetAutomatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AdminResetAutomatorRequest message, length delimited. Does not implicitly {@link Automator.AdminResetAutomatorRequest.verify|verify} messages.
         * @param message AdminResetAutomatorRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IAdminResetAutomatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AdminResetAutomatorRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AdminResetAutomatorRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.AdminResetAutomatorRequest;

        /**
         * Decodes an AdminResetAutomatorRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AdminResetAutomatorRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.AdminResetAutomatorRequest;

        /**
         * Verifies an AdminResetAutomatorRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AdminResetAutomatorRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AdminResetAutomatorRequest
         */
        public static fromObject(object: { [k: string]: any }): Automator.AdminResetAutomatorRequest;

        /**
         * Creates a plain object from an AdminResetAutomatorRequest message. Also converts values to other types if specified.
         * @param message AdminResetAutomatorRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.AdminResetAutomatorRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AdminResetAutomatorRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AdminInitializeAutomatorRequest. */
    interface IAdminInitializeAutomatorRequest {

        /** AdminInitializeAutomatorRequest automatorId */
        automatorId?: (number|Long|null);
    }

    /**
     * Sends configuration settings to an Automator.
     * Call this after AdminAutomatorEdit to send the new settings to the Automator.
     *
     * Returns AdminResponse
     */
    class AdminInitializeAutomatorRequest implements IAdminInitializeAutomatorRequest {

        /**
         * Constructs a new AdminInitializeAutomatorRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IAdminInitializeAutomatorRequest);

        /** AdminInitializeAutomatorRequest automatorId. */
        public automatorId: (number|Long);

        /**
         * Creates a new AdminInitializeAutomatorRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AdminInitializeAutomatorRequest instance
         */
        public static create(properties?: Automator.IAdminInitializeAutomatorRequest): Automator.AdminInitializeAutomatorRequest;

        /**
         * Encodes the specified AdminInitializeAutomatorRequest message. Does not implicitly {@link Automator.AdminInitializeAutomatorRequest.verify|verify} messages.
         * @param message AdminInitializeAutomatorRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IAdminInitializeAutomatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AdminInitializeAutomatorRequest message, length delimited. Does not implicitly {@link Automator.AdminInitializeAutomatorRequest.verify|verify} messages.
         * @param message AdminInitializeAutomatorRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IAdminInitializeAutomatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AdminInitializeAutomatorRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AdminInitializeAutomatorRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.AdminInitializeAutomatorRequest;

        /**
         * Decodes an AdminInitializeAutomatorRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AdminInitializeAutomatorRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.AdminInitializeAutomatorRequest;

        /**
         * Verifies an AdminInitializeAutomatorRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AdminInitializeAutomatorRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AdminInitializeAutomatorRequest
         */
        public static fromObject(object: { [k: string]: any }): Automator.AdminInitializeAutomatorRequest;

        /**
         * Creates a plain object from an AdminInitializeAutomatorRequest message. Also converts values to other types if specified.
         * @param message AdminInitializeAutomatorRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.AdminInitializeAutomatorRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AdminInitializeAutomatorRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AdminAutomatorLogRequest. */
    interface IAdminAutomatorLogRequest {

        /** AdminAutomatorLogRequest automatorId */
        automatorId?: (number|Long|null);
    }

    /**
     * AdminAutomatorLogRequest
     *
     * Retrieves the internal log entries of Keeper that relate to the given Automator instance.
     * It does not contact the remote Automator.
     *
     * Returns AdminResponse
     */
    class AdminAutomatorLogRequest implements IAdminAutomatorLogRequest {

        /**
         * Constructs a new AdminAutomatorLogRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IAdminAutomatorLogRequest);

        /** AdminAutomatorLogRequest automatorId. */
        public automatorId: (number|Long);

        /**
         * Creates a new AdminAutomatorLogRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AdminAutomatorLogRequest instance
         */
        public static create(properties?: Automator.IAdminAutomatorLogRequest): Automator.AdminAutomatorLogRequest;

        /**
         * Encodes the specified AdminAutomatorLogRequest message. Does not implicitly {@link Automator.AdminAutomatorLogRequest.verify|verify} messages.
         * @param message AdminAutomatorLogRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IAdminAutomatorLogRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AdminAutomatorLogRequest message, length delimited. Does not implicitly {@link Automator.AdminAutomatorLogRequest.verify|verify} messages.
         * @param message AdminAutomatorLogRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IAdminAutomatorLogRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AdminAutomatorLogRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AdminAutomatorLogRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.AdminAutomatorLogRequest;

        /**
         * Decodes an AdminAutomatorLogRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AdminAutomatorLogRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.AdminAutomatorLogRequest;

        /**
         * Verifies an AdminAutomatorLogRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AdminAutomatorLogRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AdminAutomatorLogRequest
         */
        public static fromObject(object: { [k: string]: any }): Automator.AdminAutomatorLogRequest;

        /**
         * Creates a plain object from an AdminAutomatorLogRequest message. Also converts values to other types if specified.
         * @param message AdminAutomatorLogRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.AdminAutomatorLogRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AdminAutomatorLogRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AdminAutomatorLogClearRequest. */
    interface IAdminAutomatorLogClearRequest {

        /** AdminAutomatorLogClearRequest automatorId */
        automatorId?: (number|Long|null);
    }

    /**
     * AdminAutomatorLogClearRequest
     *
     * Clears the internal log entries of Keeper that relate to the given Automator instance.
     * It does not contact the remote Automator.
     *
     * Returns AdminResponse
     */
    class AdminAutomatorLogClearRequest implements IAdminAutomatorLogClearRequest {

        /**
         * Constructs a new AdminAutomatorLogClearRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Automator.IAdminAutomatorLogClearRequest);

        /** AdminAutomatorLogClearRequest automatorId. */
        public automatorId: (number|Long);

        /**
         * Creates a new AdminAutomatorLogClearRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AdminAutomatorLogClearRequest instance
         */
        public static create(properties?: Automator.IAdminAutomatorLogClearRequest): Automator.AdminAutomatorLogClearRequest;

        /**
         * Encodes the specified AdminAutomatorLogClearRequest message. Does not implicitly {@link Automator.AdminAutomatorLogClearRequest.verify|verify} messages.
         * @param message AdminAutomatorLogClearRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Automator.IAdminAutomatorLogClearRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AdminAutomatorLogClearRequest message, length delimited. Does not implicitly {@link Automator.AdminAutomatorLogClearRequest.verify|verify} messages.
         * @param message AdminAutomatorLogClearRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Automator.IAdminAutomatorLogClearRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AdminAutomatorLogClearRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AdminAutomatorLogClearRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Automator.AdminAutomatorLogClearRequest;

        /**
         * Decodes an AdminAutomatorLogClearRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AdminAutomatorLogClearRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Automator.AdminAutomatorLogClearRequest;

        /**
         * Verifies an AdminAutomatorLogClearRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AdminAutomatorLogClearRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AdminAutomatorLogClearRequest
         */
        public static fromObject(object: { [k: string]: any }): Automator.AdminAutomatorLogClearRequest;

        /**
         * Creates a plain object from an AdminAutomatorLogClearRequest message. Also converts values to other types if specified.
         * @param message AdminAutomatorLogClearRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Automator.AdminAutomatorLogClearRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AdminAutomatorLogClearRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace SsoCloud. */
export namespace SsoCloud {

    /** Authentication protocols we support. */
    enum AuthProtocolType {
        SAML2 = 0
    }

    /** Datatypes of SsoCloudSettings */
    enum DataType {
        ANY = 0,
        BOOLEAN = 1,
        INTEGER = 2,
        STRING = 3,
        BYTES = 4,
        URL = 5,
        com_keepersecurity_proto_SsoCloud_DataType = 6,
        com_keepersecurity_proto_SsoCloud_AuthProtocolType = 7,
        com_keepersecurity_proto_SsoCloud_SsoIdpType = 8,
        LONG = 9,
        TIMESTAMP = 10
    }

    /** This is how the client can change a Configuration setting */
    enum SsoCloudSettingOperationType {
        SET = 0,
        GET = 1,
        DELETE = 2,
        RESET_TO_DEFAULT = 3
    }

    /** SsoIdpType enum. */
    enum SsoIdpType {
        XX_UNUSED = 0,
        GENERIC = 1,
        F5 = 2,
        GOOGLE = 3,
        OKTA = 4,
        ADFS = 5,
        AZURE = 6,
        ONELOGIN = 7,
        PING = 8,
        JUMPCLOUD = 9
    }

    /** Properties of a SsoCloudSettingValue. */
    interface ISsoCloudSettingValue {

        /** SsoCloudSettingValue settingId */
        settingId?: (number|Long|null);

        /** SsoCloudSettingValue settingName */
        settingName?: (string|null);

        /** SsoCloudSettingValue label */
        label?: (string|null);

        /** SsoCloudSettingValue value */
        value?: (string|null);

        /** SsoCloudSettingValue valueType */
        valueType?: (SsoCloud.DataType|null);

        /** SsoCloudSettingValue lastModified */
        lastModified?: (string|null);

        /** SsoCloudSettingValue isFromFile */
        isFromFile?: (boolean|null);

        /** SsoCloudSettingValue isEditable */
        isEditable?: (boolean|null);

        /** SsoCloudSettingValue isRequired */
        isRequired?: (boolean|null);
    }

    /** This is the value of a Configuration setting */
    class SsoCloudSettingValue implements ISsoCloudSettingValue {

        /**
         * Constructs a new SsoCloudSettingValue.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoCloudSettingValue);

        /** SsoCloudSettingValue settingId. */
        public settingId: (number|Long);

        /** SsoCloudSettingValue settingName. */
        public settingName: string;

        /** SsoCloudSettingValue label. */
        public label: string;

        /** SsoCloudSettingValue value. */
        public value: string;

        /** SsoCloudSettingValue valueType. */
        public valueType: SsoCloud.DataType;

        /** SsoCloudSettingValue lastModified. */
        public lastModified: string;

        /** SsoCloudSettingValue isFromFile. */
        public isFromFile: boolean;

        /** SsoCloudSettingValue isEditable. */
        public isEditable: boolean;

        /** SsoCloudSettingValue isRequired. */
        public isRequired: boolean;

        /**
         * Creates a new SsoCloudSettingValue instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoCloudSettingValue instance
         */
        public static create(properties?: SsoCloud.ISsoCloudSettingValue): SsoCloud.SsoCloudSettingValue;

        /**
         * Encodes the specified SsoCloudSettingValue message. Does not implicitly {@link SsoCloud.SsoCloudSettingValue.verify|verify} messages.
         * @param message SsoCloudSettingValue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoCloudSettingValue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoCloudSettingValue message, length delimited. Does not implicitly {@link SsoCloud.SsoCloudSettingValue.verify|verify} messages.
         * @param message SsoCloudSettingValue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoCloudSettingValue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoCloudSettingValue message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoCloudSettingValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoCloudSettingValue;

        /**
         * Decodes a SsoCloudSettingValue message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoCloudSettingValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoCloudSettingValue;

        /**
         * Verifies a SsoCloudSettingValue message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoCloudSettingValue message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoCloudSettingValue
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoCloudSettingValue;

        /**
         * Creates a plain object from a SsoCloudSettingValue message. Also converts values to other types if specified.
         * @param message SsoCloudSettingValue
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoCloudSettingValue, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoCloudSettingValue to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoCloudSettingAction. */
    interface ISsoCloudSettingAction {

        /** SsoCloudSettingAction settingId */
        settingId?: (number|Long|null);

        /** SsoCloudSettingAction settingName */
        settingName?: (string|null);

        /** SsoCloudSettingAction operation */
        operation?: (SsoCloud.SsoCloudSettingOperationType|null);

        /** SsoCloudSettingAction value */
        value?: (string|null);
    }

    /** This performs an edit operation on a Configuration setting */
    class SsoCloudSettingAction implements ISsoCloudSettingAction {

        /**
         * Constructs a new SsoCloudSettingAction.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoCloudSettingAction);

        /** SsoCloudSettingAction settingId. */
        public settingId: (number|Long);

        /** SsoCloudSettingAction settingName. */
        public settingName: string;

        /** SsoCloudSettingAction operation. */
        public operation: SsoCloud.SsoCloudSettingOperationType;

        /** SsoCloudSettingAction value. */
        public value: string;

        /**
         * Creates a new SsoCloudSettingAction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoCloudSettingAction instance
         */
        public static create(properties?: SsoCloud.ISsoCloudSettingAction): SsoCloud.SsoCloudSettingAction;

        /**
         * Encodes the specified SsoCloudSettingAction message. Does not implicitly {@link SsoCloud.SsoCloudSettingAction.verify|verify} messages.
         * @param message SsoCloudSettingAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoCloudSettingAction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoCloudSettingAction message, length delimited. Does not implicitly {@link SsoCloud.SsoCloudSettingAction.verify|verify} messages.
         * @param message SsoCloudSettingAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoCloudSettingAction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoCloudSettingAction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoCloudSettingAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoCloudSettingAction;

        /**
         * Decodes a SsoCloudSettingAction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoCloudSettingAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoCloudSettingAction;

        /**
         * Verifies a SsoCloudSettingAction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoCloudSettingAction message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoCloudSettingAction
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoCloudSettingAction;

        /**
         * Creates a plain object from a SsoCloudSettingAction message. Also converts values to other types if specified.
         * @param message SsoCloudSettingAction
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoCloudSettingAction, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoCloudSettingAction to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoCloudConfigurationRequest. */
    interface ISsoCloudConfigurationRequest {

        /** SsoCloudConfigurationRequest ssoServiceProviderId */
        ssoServiceProviderId?: (number|Long|null);

        /** SsoCloudConfigurationRequest ssoSpConfigurationId */
        ssoSpConfigurationId?: (number|Long|null);

        /** SsoCloudConfigurationRequest name */
        name?: (string|null);

        /** SsoCloudConfigurationRequest ssoAuthProtocolType */
        ssoAuthProtocolType?: (SsoCloud.AuthProtocolType|null);

        /** SsoCloudConfigurationRequest ssoCloudSettingAction */
        ssoCloudSettingAction?: (SsoCloud.ISsoCloudSettingAction[]|null);
    }

    /** Requesting the value of or a change to an SSO Configuration */
    class SsoCloudConfigurationRequest implements ISsoCloudConfigurationRequest {

        /**
         * Constructs a new SsoCloudConfigurationRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoCloudConfigurationRequest);

        /** SsoCloudConfigurationRequest ssoServiceProviderId. */
        public ssoServiceProviderId: (number|Long);

        /** SsoCloudConfigurationRequest ssoSpConfigurationId. */
        public ssoSpConfigurationId: (number|Long);

        /** SsoCloudConfigurationRequest name. */
        public name: string;

        /** SsoCloudConfigurationRequest ssoAuthProtocolType. */
        public ssoAuthProtocolType: SsoCloud.AuthProtocolType;

        /** SsoCloudConfigurationRequest ssoCloudSettingAction. */
        public ssoCloudSettingAction: SsoCloud.ISsoCloudSettingAction[];

        /**
         * Creates a new SsoCloudConfigurationRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoCloudConfigurationRequest instance
         */
        public static create(properties?: SsoCloud.ISsoCloudConfigurationRequest): SsoCloud.SsoCloudConfigurationRequest;

        /**
         * Encodes the specified SsoCloudConfigurationRequest message. Does not implicitly {@link SsoCloud.SsoCloudConfigurationRequest.verify|verify} messages.
         * @param message SsoCloudConfigurationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoCloudConfigurationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoCloudConfigurationRequest message, length delimited. Does not implicitly {@link SsoCloud.SsoCloudConfigurationRequest.verify|verify} messages.
         * @param message SsoCloudConfigurationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoCloudConfigurationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoCloudConfigurationRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoCloudConfigurationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoCloudConfigurationRequest;

        /**
         * Decodes a SsoCloudConfigurationRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoCloudConfigurationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoCloudConfigurationRequest;

        /**
         * Verifies a SsoCloudConfigurationRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoCloudConfigurationRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoCloudConfigurationRequest
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoCloudConfigurationRequest;

        /**
         * Creates a plain object from a SsoCloudConfigurationRequest message. Also converts values to other types if specified.
         * @param message SsoCloudConfigurationRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoCloudConfigurationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoCloudConfigurationRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoCloudConfigurationResponse. */
    interface ISsoCloudConfigurationResponse {

        /** SsoCloudConfigurationResponse ssoServiceProviderId */
        ssoServiceProviderId?: (number|Long|null);

        /** SsoCloudConfigurationResponse ssoSpConfigurationId */
        ssoSpConfigurationId?: (number|Long|null);

        /** SsoCloudConfigurationResponse enterpriseId */
        enterpriseId?: (number|Long|null);

        /** SsoCloudConfigurationResponse name */
        name?: (string|null);

        /** SsoCloudConfigurationResponse protocol */
        protocol?: (string|null);

        /** SsoCloudConfigurationResponse lastModified */
        lastModified?: (string|null);

        /** SsoCloudConfigurationResponse ssoCloudSettingValue */
        ssoCloudSettingValue?: (SsoCloud.ISsoCloudSettingValue[]|null);
    }

    /** This is the response to an SsoConfigurationRequest */
    class SsoCloudConfigurationResponse implements ISsoCloudConfigurationResponse {

        /**
         * Constructs a new SsoCloudConfigurationResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoCloudConfigurationResponse);

        /** SsoCloudConfigurationResponse ssoServiceProviderId. */
        public ssoServiceProviderId: (number|Long);

        /** SsoCloudConfigurationResponse ssoSpConfigurationId. */
        public ssoSpConfigurationId: (number|Long);

        /** SsoCloudConfigurationResponse enterpriseId. */
        public enterpriseId: (number|Long);

        /** SsoCloudConfigurationResponse name. */
        public name: string;

        /** SsoCloudConfigurationResponse protocol. */
        public protocol: string;

        /** SsoCloudConfigurationResponse lastModified. */
        public lastModified: string;

        /** SsoCloudConfigurationResponse ssoCloudSettingValue. */
        public ssoCloudSettingValue: SsoCloud.ISsoCloudSettingValue[];

        /**
         * Creates a new SsoCloudConfigurationResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoCloudConfigurationResponse instance
         */
        public static create(properties?: SsoCloud.ISsoCloudConfigurationResponse): SsoCloud.SsoCloudConfigurationResponse;

        /**
         * Encodes the specified SsoCloudConfigurationResponse message. Does not implicitly {@link SsoCloud.SsoCloudConfigurationResponse.verify|verify} messages.
         * @param message SsoCloudConfigurationResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoCloudConfigurationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoCloudConfigurationResponse message, length delimited. Does not implicitly {@link SsoCloud.SsoCloudConfigurationResponse.verify|verify} messages.
         * @param message SsoCloudConfigurationResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoCloudConfigurationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoCloudConfigurationResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoCloudConfigurationResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoCloudConfigurationResponse;

        /**
         * Decodes a SsoCloudConfigurationResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoCloudConfigurationResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoCloudConfigurationResponse;

        /**
         * Verifies a SsoCloudConfigurationResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoCloudConfigurationResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoCloudConfigurationResponse
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoCloudConfigurationResponse;

        /**
         * Creates a plain object from a SsoCloudConfigurationResponse message. Also converts values to other types if specified.
         * @param message SsoCloudConfigurationResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoCloudConfigurationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoCloudConfigurationResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoIdpTypeRequest. */
    interface ISsoIdpTypeRequest {

        /** SsoIdpTypeRequest ssoIdpTypeId */
        ssoIdpTypeId?: (number|null);

        /** SsoIdpTypeRequest tag */
        tag?: (string|null);

        /** SsoIdpTypeRequest label */
        label?: (string|null);
    }

    /** This is a request to the IdpType API. */
    class SsoIdpTypeRequest implements ISsoIdpTypeRequest {

        /**
         * Constructs a new SsoIdpTypeRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoIdpTypeRequest);

        /** SsoIdpTypeRequest ssoIdpTypeId. */
        public ssoIdpTypeId: number;

        /** SsoIdpTypeRequest tag. */
        public tag: string;

        /** SsoIdpTypeRequest label. */
        public label: string;

        /**
         * Creates a new SsoIdpTypeRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoIdpTypeRequest instance
         */
        public static create(properties?: SsoCloud.ISsoIdpTypeRequest): SsoCloud.SsoIdpTypeRequest;

        /**
         * Encodes the specified SsoIdpTypeRequest message. Does not implicitly {@link SsoCloud.SsoIdpTypeRequest.verify|verify} messages.
         * @param message SsoIdpTypeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoIdpTypeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoIdpTypeRequest message, length delimited. Does not implicitly {@link SsoCloud.SsoIdpTypeRequest.verify|verify} messages.
         * @param message SsoIdpTypeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoIdpTypeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoIdpTypeRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoIdpTypeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoIdpTypeRequest;

        /**
         * Decodes a SsoIdpTypeRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoIdpTypeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoIdpTypeRequest;

        /**
         * Verifies a SsoIdpTypeRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoIdpTypeRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoIdpTypeRequest
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoIdpTypeRequest;

        /**
         * Creates a plain object from a SsoIdpTypeRequest message. Also converts values to other types if specified.
         * @param message SsoIdpTypeRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoIdpTypeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoIdpTypeRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoIdpTypeResponse. */
    interface ISsoIdpTypeResponse {

        /** SsoIdpTypeResponse ssoIdpTypeId */
        ssoIdpTypeId?: (number|null);

        /** SsoIdpTypeResponse tag */
        tag?: (number|null);

        /** SsoIdpTypeResponse label */
        label?: (number|null);
    }

    /** This is a response from the IdpType API calls. */
    class SsoIdpTypeResponse implements ISsoIdpTypeResponse {

        /**
         * Constructs a new SsoIdpTypeResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoIdpTypeResponse);

        /** SsoIdpTypeResponse ssoIdpTypeId. */
        public ssoIdpTypeId: number;

        /** SsoIdpTypeResponse tag. */
        public tag: number;

        /** SsoIdpTypeResponse label. */
        public label: number;

        /**
         * Creates a new SsoIdpTypeResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoIdpTypeResponse instance
         */
        public static create(properties?: SsoCloud.ISsoIdpTypeResponse): SsoCloud.SsoIdpTypeResponse;

        /**
         * Encodes the specified SsoIdpTypeResponse message. Does not implicitly {@link SsoCloud.SsoIdpTypeResponse.verify|verify} messages.
         * @param message SsoIdpTypeResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoIdpTypeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoIdpTypeResponse message, length delimited. Does not implicitly {@link SsoCloud.SsoIdpTypeResponse.verify|verify} messages.
         * @param message SsoIdpTypeResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoIdpTypeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoIdpTypeResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoIdpTypeResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoIdpTypeResponse;

        /**
         * Decodes a SsoIdpTypeResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoIdpTypeResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoIdpTypeResponse;

        /**
         * Verifies a SsoIdpTypeResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoIdpTypeResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoIdpTypeResponse
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoIdpTypeResponse;

        /**
         * Creates a plain object from a SsoIdpTypeResponse message. Also converts values to other types if specified.
         * @param message SsoIdpTypeResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoIdpTypeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoIdpTypeResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoCloudSAMLLogRequest. */
    interface ISsoCloudSAMLLogRequest {

        /** SsoCloudSAMLLogRequest ssoServiceProviderId */
        ssoServiceProviderId?: (number|Long|null);
    }

    /** This is the request for the SAML logs of a service provider.  Used for both saml_log_get and saml_log_clear */
    class SsoCloudSAMLLogRequest implements ISsoCloudSAMLLogRequest {

        /**
         * Constructs a new SsoCloudSAMLLogRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoCloudSAMLLogRequest);

        /** SsoCloudSAMLLogRequest ssoServiceProviderId. */
        public ssoServiceProviderId: (number|Long);

        /**
         * Creates a new SsoCloudSAMLLogRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoCloudSAMLLogRequest instance
         */
        public static create(properties?: SsoCloud.ISsoCloudSAMLLogRequest): SsoCloud.SsoCloudSAMLLogRequest;

        /**
         * Encodes the specified SsoCloudSAMLLogRequest message. Does not implicitly {@link SsoCloud.SsoCloudSAMLLogRequest.verify|verify} messages.
         * @param message SsoCloudSAMLLogRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoCloudSAMLLogRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoCloudSAMLLogRequest message, length delimited. Does not implicitly {@link SsoCloud.SsoCloudSAMLLogRequest.verify|verify} messages.
         * @param message SsoCloudSAMLLogRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoCloudSAMLLogRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoCloudSAMLLogRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoCloudSAMLLogRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoCloudSAMLLogRequest;

        /**
         * Decodes a SsoCloudSAMLLogRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoCloudSAMLLogRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoCloudSAMLLogRequest;

        /**
         * Verifies a SsoCloudSAMLLogRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoCloudSAMLLogRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoCloudSAMLLogRequest
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoCloudSAMLLogRequest;

        /**
         * Creates a plain object from a SsoCloudSAMLLogRequest message. Also converts values to other types if specified.
         * @param message SsoCloudSAMLLogRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoCloudSAMLLogRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoCloudSAMLLogRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoCloudSAMLLogEntry. */
    interface ISsoCloudSAMLLogEntry {

        /** SsoCloudSAMLLogEntry serverTime */
        serverTime?: (string|null);

        /** SsoCloudSAMLLogEntry direction */
        direction?: (string|null);

        /** SsoCloudSAMLLogEntry messageType */
        messageType?: (string|null);

        /** SsoCloudSAMLLogEntry messageIssued */
        messageIssued?: (string|null);

        /** SsoCloudSAMLLogEntry fromEntityId */
        fromEntityId?: (string|null);

        /** SsoCloudSAMLLogEntry samlStatus */
        samlStatus?: (string|null);

        /** SsoCloudSAMLLogEntry relayState */
        relayState?: (string|null);

        /** SsoCloudSAMLLogEntry samlContent */
        samlContent?: (string|null);

        /** SsoCloudSAMLLogEntry isSigned */
        isSigned?: (boolean|null);

        /** SsoCloudSAMLLogEntry isOK */
        isOK?: (boolean|null);
    }

    /** This represents one SAML message in the log. */
    class SsoCloudSAMLLogEntry implements ISsoCloudSAMLLogEntry {

        /**
         * Constructs a new SsoCloudSAMLLogEntry.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoCloudSAMLLogEntry);

        /** SsoCloudSAMLLogEntry serverTime. */
        public serverTime: string;

        /** SsoCloudSAMLLogEntry direction. */
        public direction: string;

        /** SsoCloudSAMLLogEntry messageType. */
        public messageType: string;

        /** SsoCloudSAMLLogEntry messageIssued. */
        public messageIssued: string;

        /** SsoCloudSAMLLogEntry fromEntityId. */
        public fromEntityId: string;

        /** SsoCloudSAMLLogEntry samlStatus. */
        public samlStatus: string;

        /** SsoCloudSAMLLogEntry relayState. */
        public relayState: string;

        /** SsoCloudSAMLLogEntry samlContent. */
        public samlContent: string;

        /** SsoCloudSAMLLogEntry isSigned. */
        public isSigned: boolean;

        /** SsoCloudSAMLLogEntry isOK. */
        public isOK: boolean;

        /**
         * Creates a new SsoCloudSAMLLogEntry instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoCloudSAMLLogEntry instance
         */
        public static create(properties?: SsoCloud.ISsoCloudSAMLLogEntry): SsoCloud.SsoCloudSAMLLogEntry;

        /**
         * Encodes the specified SsoCloudSAMLLogEntry message. Does not implicitly {@link SsoCloud.SsoCloudSAMLLogEntry.verify|verify} messages.
         * @param message SsoCloudSAMLLogEntry message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoCloudSAMLLogEntry, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoCloudSAMLLogEntry message, length delimited. Does not implicitly {@link SsoCloud.SsoCloudSAMLLogEntry.verify|verify} messages.
         * @param message SsoCloudSAMLLogEntry message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoCloudSAMLLogEntry, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoCloudSAMLLogEntry message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoCloudSAMLLogEntry
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoCloudSAMLLogEntry;

        /**
         * Decodes a SsoCloudSAMLLogEntry message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoCloudSAMLLogEntry
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoCloudSAMLLogEntry;

        /**
         * Verifies a SsoCloudSAMLLogEntry message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoCloudSAMLLogEntry message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoCloudSAMLLogEntry
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoCloudSAMLLogEntry;

        /**
         * Creates a plain object from a SsoCloudSAMLLogEntry message. Also converts values to other types if specified.
         * @param message SsoCloudSAMLLogEntry
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoCloudSAMLLogEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoCloudSAMLLogEntry to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoCloudSAMLLogResponse. */
    interface ISsoCloudSAMLLogResponse {

        /** SsoCloudSAMLLogResponse ssoServiceProviderId */
        ssoServiceProviderId?: (number|Long|null);

        /** SsoCloudSAMLLogResponse entry */
        entry?: (SsoCloud.ISsoCloudSAMLLogEntry[]|null);
    }

    /** This represents an array of SAML responses from the log. */
    class SsoCloudSAMLLogResponse implements ISsoCloudSAMLLogResponse {

        /**
         * Constructs a new SsoCloudSAMLLogResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoCloudSAMLLogResponse);

        /** SsoCloudSAMLLogResponse ssoServiceProviderId. */
        public ssoServiceProviderId: (number|Long);

        /** SsoCloudSAMLLogResponse entry. */
        public entry: SsoCloud.ISsoCloudSAMLLogEntry[];

        /**
         * Creates a new SsoCloudSAMLLogResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoCloudSAMLLogResponse instance
         */
        public static create(properties?: SsoCloud.ISsoCloudSAMLLogResponse): SsoCloud.SsoCloudSAMLLogResponse;

        /**
         * Encodes the specified SsoCloudSAMLLogResponse message. Does not implicitly {@link SsoCloud.SsoCloudSAMLLogResponse.verify|verify} messages.
         * @param message SsoCloudSAMLLogResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoCloudSAMLLogResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoCloudSAMLLogResponse message, length delimited. Does not implicitly {@link SsoCloud.SsoCloudSAMLLogResponse.verify|verify} messages.
         * @param message SsoCloudSAMLLogResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoCloudSAMLLogResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoCloudSAMLLogResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoCloudSAMLLogResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoCloudSAMLLogResponse;

        /**
         * Decodes a SsoCloudSAMLLogResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoCloudSAMLLogResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoCloudSAMLLogResponse;

        /**
         * Verifies a SsoCloudSAMLLogResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoCloudSAMLLogResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoCloudSAMLLogResponse
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoCloudSAMLLogResponse;

        /**
         * Creates a plain object from a SsoCloudSAMLLogResponse message. Also converts values to other types if specified.
         * @param message SsoCloudSAMLLogResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoCloudSAMLLogResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoCloudSAMLLogResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoCloudServiceProviderUpdateRequest. */
    interface ISsoCloudServiceProviderUpdateRequest {

        /** SsoCloudServiceProviderUpdateRequest ssoServiceProviderId */
        ssoServiceProviderId?: (number|Long|null);

        /** SsoCloudServiceProviderUpdateRequest ssoSpConfigurationId */
        ssoSpConfigurationId?: (number|Long|null);
    }

    /**
     * This is a request to set the SSO Configuration for an SSO Service Provider, by ID.
     * The response is an instance of SsoCloudConfigurationRequest.
     */
    class SsoCloudServiceProviderUpdateRequest implements ISsoCloudServiceProviderUpdateRequest {

        /**
         * Constructs a new SsoCloudServiceProviderUpdateRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoCloudServiceProviderUpdateRequest);

        /** SsoCloudServiceProviderUpdateRequest ssoServiceProviderId. */
        public ssoServiceProviderId: (number|Long);

        /** SsoCloudServiceProviderUpdateRequest ssoSpConfigurationId. */
        public ssoSpConfigurationId: (number|Long);

        /**
         * Creates a new SsoCloudServiceProviderUpdateRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoCloudServiceProviderUpdateRequest instance
         */
        public static create(properties?: SsoCloud.ISsoCloudServiceProviderUpdateRequest): SsoCloud.SsoCloudServiceProviderUpdateRequest;

        /**
         * Encodes the specified SsoCloudServiceProviderUpdateRequest message. Does not implicitly {@link SsoCloud.SsoCloudServiceProviderUpdateRequest.verify|verify} messages.
         * @param message SsoCloudServiceProviderUpdateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoCloudServiceProviderUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoCloudServiceProviderUpdateRequest message, length delimited. Does not implicitly {@link SsoCloud.SsoCloudServiceProviderUpdateRequest.verify|verify} messages.
         * @param message SsoCloudServiceProviderUpdateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoCloudServiceProviderUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoCloudServiceProviderUpdateRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoCloudServiceProviderUpdateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoCloudServiceProviderUpdateRequest;

        /**
         * Decodes a SsoCloudServiceProviderUpdateRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoCloudServiceProviderUpdateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoCloudServiceProviderUpdateRequest;

        /**
         * Verifies a SsoCloudServiceProviderUpdateRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoCloudServiceProviderUpdateRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoCloudServiceProviderUpdateRequest
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoCloudServiceProviderUpdateRequest;

        /**
         * Creates a plain object from a SsoCloudServiceProviderUpdateRequest message. Also converts values to other types if specified.
         * @param message SsoCloudServiceProviderUpdateRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoCloudServiceProviderUpdateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoCloudServiceProviderUpdateRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoCloudIdpMetadataRequest. */
    interface ISsoCloudIdpMetadataRequest {

        /** SsoCloudIdpMetadataRequest ssoSpConfigurationId */
        ssoSpConfigurationId?: (number|Long|null);

        /** SsoCloudIdpMetadataRequest filename */
        filename?: (string|null);

        /** SsoCloudIdpMetadataRequest content */
        content?: (Uint8Array|null);
    }

    /**
     * This request is to upload the IdP metadata file as its UTF-8 byte content.
     * The response is an SsoCloudConfigurationValidationResponse.
     */
    class SsoCloudIdpMetadataRequest implements ISsoCloudIdpMetadataRequest {

        /**
         * Constructs a new SsoCloudIdpMetadataRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoCloudIdpMetadataRequest);

        /** SsoCloudIdpMetadataRequest ssoSpConfigurationId. */
        public ssoSpConfigurationId: (number|Long);

        /** SsoCloudIdpMetadataRequest filename. */
        public filename: string;

        /** SsoCloudIdpMetadataRequest content. */
        public content: Uint8Array;

        /**
         * Creates a new SsoCloudIdpMetadataRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoCloudIdpMetadataRequest instance
         */
        public static create(properties?: SsoCloud.ISsoCloudIdpMetadataRequest): SsoCloud.SsoCloudIdpMetadataRequest;

        /**
         * Encodes the specified SsoCloudIdpMetadataRequest message. Does not implicitly {@link SsoCloud.SsoCloudIdpMetadataRequest.verify|verify} messages.
         * @param message SsoCloudIdpMetadataRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoCloudIdpMetadataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoCloudIdpMetadataRequest message, length delimited. Does not implicitly {@link SsoCloud.SsoCloudIdpMetadataRequest.verify|verify} messages.
         * @param message SsoCloudIdpMetadataRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoCloudIdpMetadataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoCloudIdpMetadataRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoCloudIdpMetadataRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoCloudIdpMetadataRequest;

        /**
         * Decodes a SsoCloudIdpMetadataRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoCloudIdpMetadataRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoCloudIdpMetadataRequest;

        /**
         * Verifies a SsoCloudIdpMetadataRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoCloudIdpMetadataRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoCloudIdpMetadataRequest
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoCloudIdpMetadataRequest;

        /**
         * Creates a plain object from a SsoCloudIdpMetadataRequest message. Also converts values to other types if specified.
         * @param message SsoCloudIdpMetadataRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoCloudIdpMetadataRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoCloudIdpMetadataRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoCloudConfigurationValidationRequest. */
    interface ISsoCloudConfigurationValidationRequest {

        /** SsoCloudConfigurationValidationRequest ssoSpConfigurationId */
        ssoSpConfigurationId?: ((number|Long)[]|null);
    }

    /**
     * Request validation of one or more SsoCloudConfigurations.
     * The response is SsoCloudConfigurationValidationResponse.
     */
    class SsoCloudConfigurationValidationRequest implements ISsoCloudConfigurationValidationRequest {

        /**
         * Constructs a new SsoCloudConfigurationValidationRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoCloudConfigurationValidationRequest);

        /** SsoCloudConfigurationValidationRequest ssoSpConfigurationId. */
        public ssoSpConfigurationId: (number|Long)[];

        /**
         * Creates a new SsoCloudConfigurationValidationRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoCloudConfigurationValidationRequest instance
         */
        public static create(properties?: SsoCloud.ISsoCloudConfigurationValidationRequest): SsoCloud.SsoCloudConfigurationValidationRequest;

        /**
         * Encodes the specified SsoCloudConfigurationValidationRequest message. Does not implicitly {@link SsoCloud.SsoCloudConfigurationValidationRequest.verify|verify} messages.
         * @param message SsoCloudConfigurationValidationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoCloudConfigurationValidationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoCloudConfigurationValidationRequest message, length delimited. Does not implicitly {@link SsoCloud.SsoCloudConfigurationValidationRequest.verify|verify} messages.
         * @param message SsoCloudConfigurationValidationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoCloudConfigurationValidationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoCloudConfigurationValidationRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoCloudConfigurationValidationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoCloudConfigurationValidationRequest;

        /**
         * Decodes a SsoCloudConfigurationValidationRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoCloudConfigurationValidationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoCloudConfigurationValidationRequest;

        /**
         * Verifies a SsoCloudConfigurationValidationRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoCloudConfigurationValidationRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoCloudConfigurationValidationRequest
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoCloudConfigurationValidationRequest;

        /**
         * Creates a plain object from a SsoCloudConfigurationValidationRequest message. Also converts values to other types if specified.
         * @param message SsoCloudConfigurationValidationRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoCloudConfigurationValidationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoCloudConfigurationValidationRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ValidationContent. */
    interface IValidationContent {

        /** ValidationContent ssoSpConfigurationId */
        ssoSpConfigurationId?: (number|Long|null);

        /** ValidationContent isSuccessful */
        isSuccessful?: (boolean|null);

        /** ValidationContent errorMessage */
        errorMessage?: (string[]|null);
    }

    /** This is part of SsoCloudConfigurationValidationResponse. */
    class ValidationContent implements IValidationContent {

        /**
         * Constructs a new ValidationContent.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.IValidationContent);

        /** ValidationContent ssoSpConfigurationId. */
        public ssoSpConfigurationId: (number|Long);

        /** ValidationContent isSuccessful. */
        public isSuccessful: boolean;

        /** ValidationContent errorMessage. */
        public errorMessage: string[];

        /**
         * Creates a new ValidationContent instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ValidationContent instance
         */
        public static create(properties?: SsoCloud.IValidationContent): SsoCloud.ValidationContent;

        /**
         * Encodes the specified ValidationContent message. Does not implicitly {@link SsoCloud.ValidationContent.verify|verify} messages.
         * @param message ValidationContent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.IValidationContent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ValidationContent message, length delimited. Does not implicitly {@link SsoCloud.ValidationContent.verify|verify} messages.
         * @param message ValidationContent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.IValidationContent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ValidationContent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ValidationContent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.ValidationContent;

        /**
         * Decodes a ValidationContent message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ValidationContent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.ValidationContent;

        /**
         * Verifies a ValidationContent message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ValidationContent message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ValidationContent
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.ValidationContent;

        /**
         * Creates a plain object from a ValidationContent message. Also converts values to other types if specified.
         * @param message ValidationContent
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.ValidationContent, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ValidationContent to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoCloudConfigurationValidationResponse. */
    interface ISsoCloudConfigurationValidationResponse {

        /** SsoCloudConfigurationValidationResponse validationContent */
        validationContent?: (SsoCloud.IValidationContent[]|null);
    }

    /** This response is sent for a configuration validation request and for a Metadata upload request. */
    class SsoCloudConfigurationValidationResponse implements ISsoCloudConfigurationValidationResponse {

        /**
         * Constructs a new SsoCloudConfigurationValidationResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoCloudConfigurationValidationResponse);

        /** SsoCloudConfigurationValidationResponse validationContent. */
        public validationContent: SsoCloud.IValidationContent[];

        /**
         * Creates a new SsoCloudConfigurationValidationResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoCloudConfigurationValidationResponse instance
         */
        public static create(properties?: SsoCloud.ISsoCloudConfigurationValidationResponse): SsoCloud.SsoCloudConfigurationValidationResponse;

        /**
         * Encodes the specified SsoCloudConfigurationValidationResponse message. Does not implicitly {@link SsoCloud.SsoCloudConfigurationValidationResponse.verify|verify} messages.
         * @param message SsoCloudConfigurationValidationResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoCloudConfigurationValidationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoCloudConfigurationValidationResponse message, length delimited. Does not implicitly {@link SsoCloud.SsoCloudConfigurationValidationResponse.verify|verify} messages.
         * @param message SsoCloudConfigurationValidationResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoCloudConfigurationValidationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoCloudConfigurationValidationResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoCloudConfigurationValidationResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoCloudConfigurationValidationResponse;

        /**
         * Decodes a SsoCloudConfigurationValidationResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoCloudConfigurationValidationResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoCloudConfigurationValidationResponse;

        /**
         * Verifies a SsoCloudConfigurationValidationResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoCloudConfigurationValidationResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoCloudConfigurationValidationResponse
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoCloudConfigurationValidationResponse;

        /**
         * Creates a plain object from a SsoCloudConfigurationValidationResponse message. Also converts values to other types if specified.
         * @param message SsoCloudConfigurationValidationResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoCloudConfigurationValidationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoCloudConfigurationValidationResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoCloudServiceProviderConfigurationListRequest. */
    interface ISsoCloudServiceProviderConfigurationListRequest {

        /** SsoCloudServiceProviderConfigurationListRequest ssoServiceProviderId */
        ssoServiceProviderId?: (number|Long|null);
    }

    /** This request is sent to retrieve the list of configurations defined in an enterprise. */
    class SsoCloudServiceProviderConfigurationListRequest implements ISsoCloudServiceProviderConfigurationListRequest {

        /**
         * Constructs a new SsoCloudServiceProviderConfigurationListRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoCloudServiceProviderConfigurationListRequest);

        /** SsoCloudServiceProviderConfigurationListRequest ssoServiceProviderId. */
        public ssoServiceProviderId: (number|Long);

        /**
         * Creates a new SsoCloudServiceProviderConfigurationListRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoCloudServiceProviderConfigurationListRequest instance
         */
        public static create(properties?: SsoCloud.ISsoCloudServiceProviderConfigurationListRequest): SsoCloud.SsoCloudServiceProviderConfigurationListRequest;

        /**
         * Encodes the specified SsoCloudServiceProviderConfigurationListRequest message. Does not implicitly {@link SsoCloud.SsoCloudServiceProviderConfigurationListRequest.verify|verify} messages.
         * @param message SsoCloudServiceProviderConfigurationListRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoCloudServiceProviderConfigurationListRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoCloudServiceProviderConfigurationListRequest message, length delimited. Does not implicitly {@link SsoCloud.SsoCloudServiceProviderConfigurationListRequest.verify|verify} messages.
         * @param message SsoCloudServiceProviderConfigurationListRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoCloudServiceProviderConfigurationListRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoCloudServiceProviderConfigurationListRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoCloudServiceProviderConfigurationListRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoCloudServiceProviderConfigurationListRequest;

        /**
         * Decodes a SsoCloudServiceProviderConfigurationListRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoCloudServiceProviderConfigurationListRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoCloudServiceProviderConfigurationListRequest;

        /**
         * Verifies a SsoCloudServiceProviderConfigurationListRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoCloudServiceProviderConfigurationListRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoCloudServiceProviderConfigurationListRequest
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoCloudServiceProviderConfigurationListRequest;

        /**
         * Creates a plain object from a SsoCloudServiceProviderConfigurationListRequest message. Also converts values to other types if specified.
         * @param message SsoCloudServiceProviderConfigurationListRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoCloudServiceProviderConfigurationListRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoCloudServiceProviderConfigurationListRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConfigurationListItem. */
    interface IConfigurationListItem {

        /** ConfigurationListItem ssoSpConfigurationId */
        ssoSpConfigurationId?: (number|Long|null);

        /** ConfigurationListItem name */
        name?: (string|null);

        /** ConfigurationListItem isSelected */
        isSelected?: (boolean|null);

        /** ConfigurationListItem ssoServiceProviderId */
        ssoServiceProviderId?: ((number|Long)[]|null);
    }

    /**
     * This represents one configuration in the list.
     * If isSelected is true this configuration is currently being used by the sso service provider(s) listed.
     */
    class ConfigurationListItem implements IConfigurationListItem {

        /**
         * Constructs a new ConfigurationListItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.IConfigurationListItem);

        /** ConfigurationListItem ssoSpConfigurationId. */
        public ssoSpConfigurationId: (number|Long);

        /** ConfigurationListItem name. */
        public name: string;

        /** ConfigurationListItem isSelected. */
        public isSelected: boolean;

        /** ConfigurationListItem ssoServiceProviderId. */
        public ssoServiceProviderId: (number|Long)[];

        /**
         * Creates a new ConfigurationListItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConfigurationListItem instance
         */
        public static create(properties?: SsoCloud.IConfigurationListItem): SsoCloud.ConfigurationListItem;

        /**
         * Encodes the specified ConfigurationListItem message. Does not implicitly {@link SsoCloud.ConfigurationListItem.verify|verify} messages.
         * @param message ConfigurationListItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.IConfigurationListItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConfigurationListItem message, length delimited. Does not implicitly {@link SsoCloud.ConfigurationListItem.verify|verify} messages.
         * @param message ConfigurationListItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.IConfigurationListItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConfigurationListItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConfigurationListItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.ConfigurationListItem;

        /**
         * Decodes a ConfigurationListItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConfigurationListItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.ConfigurationListItem;

        /**
         * Verifies a ConfigurationListItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConfigurationListItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConfigurationListItem
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.ConfigurationListItem;

        /**
         * Creates a plain object from a ConfigurationListItem message. Also converts values to other types if specified.
         * @param message ConfigurationListItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.ConfigurationListItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConfigurationListItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoCloudServiceProviderConfigurationListResponse. */
    interface ISsoCloudServiceProviderConfigurationListResponse {

        /** SsoCloudServiceProviderConfigurationListResponse configurationItem */
        configurationItem?: (SsoCloud.IConfigurationListItem[]|null);
    }

    /** This represents a list of Configuration entries. */
    class SsoCloudServiceProviderConfigurationListResponse implements ISsoCloudServiceProviderConfigurationListResponse {

        /**
         * Constructs a new SsoCloudServiceProviderConfigurationListResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoCloudServiceProviderConfigurationListResponse);

        /** SsoCloudServiceProviderConfigurationListResponse configurationItem. */
        public configurationItem: SsoCloud.IConfigurationListItem[];

        /**
         * Creates a new SsoCloudServiceProviderConfigurationListResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoCloudServiceProviderConfigurationListResponse instance
         */
        public static create(properties?: SsoCloud.ISsoCloudServiceProviderConfigurationListResponse): SsoCloud.SsoCloudServiceProviderConfigurationListResponse;

        /**
         * Encodes the specified SsoCloudServiceProviderConfigurationListResponse message. Does not implicitly {@link SsoCloud.SsoCloudServiceProviderConfigurationListResponse.verify|verify} messages.
         * @param message SsoCloudServiceProviderConfigurationListResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoCloudServiceProviderConfigurationListResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoCloudServiceProviderConfigurationListResponse message, length delimited. Does not implicitly {@link SsoCloud.SsoCloudServiceProviderConfigurationListResponse.verify|verify} messages.
         * @param message SsoCloudServiceProviderConfigurationListResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoCloudServiceProviderConfigurationListResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoCloudServiceProviderConfigurationListResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoCloudServiceProviderConfigurationListResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoCloudServiceProviderConfigurationListResponse;

        /**
         * Decodes a SsoCloudServiceProviderConfigurationListResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoCloudServiceProviderConfigurationListResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoCloudServiceProviderConfigurationListResponse;

        /**
         * Verifies a SsoCloudServiceProviderConfigurationListResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoCloudServiceProviderConfigurationListResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoCloudServiceProviderConfigurationListResponse
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoCloudServiceProviderConfigurationListResponse;

        /**
         * Creates a plain object from a SsoCloudServiceProviderConfigurationListResponse message. Also converts values to other types if specified.
         * @param message SsoCloudServiceProviderConfigurationListResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoCloudServiceProviderConfigurationListResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoCloudServiceProviderConfigurationListResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoCloudRequest. */
    interface ISsoCloudRequest {

        /** SsoCloudRequest messageSessionUid */
        messageSessionUid?: (Uint8Array|null);

        /** SsoCloudRequest clientVersion */
        clientVersion?: (string|null);

        /** SsoCloudRequest embedded */
        embedded?: (boolean|null);

        /** SsoCloudRequest json */
        json?: (boolean|null);

        /** SsoCloudRequest dest */
        dest?: (string|null);

        /** SsoCloudRequest idpSessionId */
        idpSessionId?: (string|null);

        /** SsoCloudRequest forceLogin */
        forceLogin?: (boolean|null);

        /** SsoCloudRequest username */
        username?: (string|null);

        /** SsoCloudRequest detached */
        detached?: (boolean|null);
    }

    /**
     * For security, this structure is used to make a Cloud SSO login or logout request rather than sending the parameters in the URL or in a form.
     * A typical call is: https://www.keepersecurity.com/api/rest/sso/saml/login/123456789?payload=encodedEncryptedAPIRequestContainingAnSsoCloudRequest
     */
    class SsoCloudRequest implements ISsoCloudRequest {

        /**
         * Constructs a new SsoCloudRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoCloudRequest);

        /** SsoCloudRequest messageSessionUid. */
        public messageSessionUid: Uint8Array;

        /** SsoCloudRequest clientVersion. */
        public clientVersion: string;

        /** SsoCloudRequest embedded. */
        public embedded: boolean;

        /** SsoCloudRequest json. */
        public json: boolean;

        /** SsoCloudRequest dest. */
        public dest: string;

        /** SsoCloudRequest idpSessionId. */
        public idpSessionId: string;

        /** SsoCloudRequest forceLogin. */
        public forceLogin: boolean;

        /** SsoCloudRequest username. */
        public username: string;

        /** SsoCloudRequest detached. */
        public detached: boolean;

        /**
         * Creates a new SsoCloudRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoCloudRequest instance
         */
        public static create(properties?: SsoCloud.ISsoCloudRequest): SsoCloud.SsoCloudRequest;

        /**
         * Encodes the specified SsoCloudRequest message. Does not implicitly {@link SsoCloud.SsoCloudRequest.verify|verify} messages.
         * @param message SsoCloudRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoCloudRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoCloudRequest message, length delimited. Does not implicitly {@link SsoCloud.SsoCloudRequest.verify|verify} messages.
         * @param message SsoCloudRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoCloudRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoCloudRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoCloudRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoCloudRequest;

        /**
         * Decodes a SsoCloudRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoCloudRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoCloudRequest;

        /**
         * Verifies a SsoCloudRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoCloudRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoCloudRequest
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoCloudRequest;

        /**
         * Creates a plain object from a SsoCloudRequest message. Also converts values to other types if specified.
         * @param message SsoCloudRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoCloudRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoCloudRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoCloudResponse. */
    interface ISsoCloudResponse {

        /** SsoCloudResponse command */
        command?: (string|null);

        /** SsoCloudResponse messageSessionUid */
        messageSessionUid?: (Uint8Array|null);

        /** SsoCloudResponse email */
        email?: (string|null);

        /** SsoCloudResponse encryptedLoginToken */
        encryptedLoginToken?: (Uint8Array|null);

        /** SsoCloudResponse providerName */
        providerName?: (string|null);

        /** SsoCloudResponse idpSessionId */
        idpSessionId?: (string|null);

        /** SsoCloudResponse encryptedSessionToken */
        encryptedSessionToken?: (Uint8Array|null);

        /** SsoCloudResponse errorToken */
        errorToken?: (string|null);
    }

    /**
     * For security, this structure is used to return values from a Cloud SSO login or logout.
     * It is encrypted with the key sent along with the SsoCloudRequest.
     */
    class SsoCloudResponse implements ISsoCloudResponse {

        /**
         * Constructs a new SsoCloudResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoCloudResponse);

        /** SsoCloudResponse command. */
        public command: string;

        /** SsoCloudResponse messageSessionUid. */
        public messageSessionUid: Uint8Array;

        /** SsoCloudResponse email. */
        public email: string;

        /** SsoCloudResponse encryptedLoginToken. */
        public encryptedLoginToken: Uint8Array;

        /** SsoCloudResponse providerName. */
        public providerName: string;

        /** SsoCloudResponse idpSessionId. */
        public idpSessionId: string;

        /** SsoCloudResponse encryptedSessionToken. */
        public encryptedSessionToken: Uint8Array;

        /** SsoCloudResponse errorToken. */
        public errorToken: string;

        /**
         * Creates a new SsoCloudResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoCloudResponse instance
         */
        public static create(properties?: SsoCloud.ISsoCloudResponse): SsoCloud.SsoCloudResponse;

        /**
         * Encodes the specified SsoCloudResponse message. Does not implicitly {@link SsoCloud.SsoCloudResponse.verify|verify} messages.
         * @param message SsoCloudResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoCloudResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoCloudResponse message, length delimited. Does not implicitly {@link SsoCloud.SsoCloudResponse.verify|verify} messages.
         * @param message SsoCloudResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoCloudResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoCloudResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoCloudResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoCloudResponse;

        /**
         * Decodes a SsoCloudResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoCloudResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoCloudResponse;

        /**
         * Verifies a SsoCloudResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoCloudResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoCloudResponse
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoCloudResponse;

        /**
         * Creates a plain object from a SsoCloudResponse message. Also converts values to other types if specified.
         * @param message SsoCloudResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoCloudResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoCloudResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoCloudLogRequest. */
    interface ISsoCloudLogRequest {

        /** SsoCloudLogRequest ssoServiceProviderId */
        ssoServiceProviderId?: (number|Long|null);

        /** SsoCloudLogRequest serviceName */
        serviceName?: (string|null);

        /** SsoCloudLogRequest serviceId */
        serviceId?: (number|null);
    }

    /** This allows the user to retrieve or clear SSO logs related to a service provider. */
    class SsoCloudLogRequest implements ISsoCloudLogRequest {

        /**
         * Constructs a new SsoCloudLogRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoCloudLogRequest);

        /** SsoCloudLogRequest ssoServiceProviderId. */
        public ssoServiceProviderId: (number|Long);

        /** SsoCloudLogRequest serviceName. */
        public serviceName: string;

        /** SsoCloudLogRequest serviceId. */
        public serviceId: number;

        /**
         * Creates a new SsoCloudLogRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoCloudLogRequest instance
         */
        public static create(properties?: SsoCloud.ISsoCloudLogRequest): SsoCloud.SsoCloudLogRequest;

        /**
         * Encodes the specified SsoCloudLogRequest message. Does not implicitly {@link SsoCloud.SsoCloudLogRequest.verify|verify} messages.
         * @param message SsoCloudLogRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoCloudLogRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoCloudLogRequest message, length delimited. Does not implicitly {@link SsoCloud.SsoCloudLogRequest.verify|verify} messages.
         * @param message SsoCloudLogRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoCloudLogRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoCloudLogRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoCloudLogRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoCloudLogRequest;

        /**
         * Decodes a SsoCloudLogRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoCloudLogRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoCloudLogRequest;

        /**
         * Verifies a SsoCloudLogRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoCloudLogRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoCloudLogRequest
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoCloudLogRequest;

        /**
         * Creates a plain object from a SsoCloudLogRequest message. Also converts values to other types if specified.
         * @param message SsoCloudLogRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoCloudLogRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoCloudLogRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SamlRelayState. */
    interface ISamlRelayState {

        /** SamlRelayState messageSessionUid */
        messageSessionUid?: (Uint8Array|null);

        /** SamlRelayState username */
        username?: (string|null);

        /** SamlRelayState embedded */
        embedded?: (boolean|null);

        /** SamlRelayState json */
        json?: (boolean|null);

        /** SamlRelayState destId */
        destId?: (number|null);

        /** SamlRelayState keyId */
        keyId?: (number|null);

        /** SamlRelayState supportedLanguage */
        supportedLanguage?: (Authentication.SupportedLanguage|null);

        /** SamlRelayState checksum */
        checksum?: (number|Long|null);

        /** SamlRelayState isGeneratedUid */
        isGeneratedUid?: (boolean|null);

        /** SamlRelayState deviceId */
        deviceId?: (number|Long|null);

        /** SamlRelayState detached */
        detached?: (boolean|null);
    }

    /** This is used internally by Cloud SSO.  Clients do not use it. */
    class SamlRelayState implements ISamlRelayState {

        /**
         * Constructs a new SamlRelayState.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISamlRelayState);

        /** SamlRelayState messageSessionUid. */
        public messageSessionUid: Uint8Array;

        /** SamlRelayState username. */
        public username: string;

        /** SamlRelayState embedded. */
        public embedded: boolean;

        /** SamlRelayState json. */
        public json: boolean;

        /** SamlRelayState destId. */
        public destId: number;

        /** SamlRelayState keyId. */
        public keyId: number;

        /** SamlRelayState supportedLanguage. */
        public supportedLanguage: Authentication.SupportedLanguage;

        /** SamlRelayState checksum. */
        public checksum: (number|Long);

        /** SamlRelayState isGeneratedUid. */
        public isGeneratedUid: boolean;

        /** SamlRelayState deviceId. */
        public deviceId: (number|Long);

        /** SamlRelayState detached. */
        public detached: boolean;

        /**
         * Creates a new SamlRelayState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SamlRelayState instance
         */
        public static create(properties?: SsoCloud.ISamlRelayState): SsoCloud.SamlRelayState;

        /**
         * Encodes the specified SamlRelayState message. Does not implicitly {@link SsoCloud.SamlRelayState.verify|verify} messages.
         * @param message SamlRelayState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISamlRelayState, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SamlRelayState message, length delimited. Does not implicitly {@link SsoCloud.SamlRelayState.verify|verify} messages.
         * @param message SamlRelayState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISamlRelayState, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SamlRelayState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SamlRelayState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SamlRelayState;

        /**
         * Decodes a SamlRelayState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SamlRelayState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SamlRelayState;

        /**
         * Verifies a SamlRelayState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SamlRelayState message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SamlRelayState
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SamlRelayState;

        /**
         * Creates a plain object from a SamlRelayState message. Also converts values to other types if specified.
         * @param message SamlRelayState
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SamlRelayState, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SamlRelayState to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoCloudMigrationStatusRequest. */
    interface ISsoCloudMigrationStatusRequest {

        /** SsoCloudMigrationStatusRequest nodeId */
        nodeId?: (number|Long|null);

        /** SsoCloudMigrationStatusRequest fullStatus */
        fullStatus?: (boolean|null);

        /** SsoCloudMigrationStatusRequest includeMigratedUsers */
        includeMigratedUsers?: (boolean|null);

        /** SsoCloudMigrationStatusRequest limit */
        limit?: (number|null);
    }

    /**
     * This is used when migrating from SSO Connect to SSO Connect Cloud.
     * This retrieves the current status of the migration.
     *
     * If fullStatus == false but limit == 0, a default limit (probably 25) will be used.
     *
     * Example 1: (nodeId=123, fullStatus=true,  includeMigratedUsers=true,  limit=any).  ALL users, migrated and unmigrated, will be returned.
     * Example 2: (nodeId=123, fullStatus=true,  includeMigratedUsers=false, limit=any).  ALL unmigrated users will be returned.
     * Example 3: (nodeId=123, fullStatus=false, includeMigratedUsers=true,  limit=-1).   No users will be returned
     * Example 4: (nodeId=123, fullStatus=false, includeMigratedUsers=true,  limit=0).    The first 25 users of each type, migrated and unmigrated, will be returned.
     * Example 5: (nodeId=123, fullStatus=false, includeMigratedUsers=false, limit=0).    The first 25 unmigrated users will be returned.
     * Example 6: (nodeId=123, fullStatus=false, includeMigratedUsers=false, limit=15).   The first 15 unmigrated users will be returned.
     * Example 7: (nodeId=123, fullStatus=false, includeMigratedUsers=false, limit=-1).   Just stats will be returned, no users will be returned.
     *
     */
    class SsoCloudMigrationStatusRequest implements ISsoCloudMigrationStatusRequest {

        /**
         * Constructs a new SsoCloudMigrationStatusRequest.
         * @see SsoCloudMigrationStatusResponse
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoCloudMigrationStatusRequest);

        /** SsoCloudMigrationStatusRequest nodeId. */
        public nodeId: (number|Long);

        /** SsoCloudMigrationStatusRequest fullStatus. */
        public fullStatus: boolean;

        /** SsoCloudMigrationStatusRequest includeMigratedUsers. */
        public includeMigratedUsers: boolean;

        /** SsoCloudMigrationStatusRequest limit. */
        public limit: number;

        /**
         * Creates a new SsoCloudMigrationStatusRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoCloudMigrationStatusRequest instance
         */
        public static create(properties?: SsoCloud.ISsoCloudMigrationStatusRequest): SsoCloud.SsoCloudMigrationStatusRequest;

        /**
         * Encodes the specified SsoCloudMigrationStatusRequest message. Does not implicitly {@link SsoCloud.SsoCloudMigrationStatusRequest.verify|verify} messages.
         * @param message SsoCloudMigrationStatusRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoCloudMigrationStatusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoCloudMigrationStatusRequest message, length delimited. Does not implicitly {@link SsoCloud.SsoCloudMigrationStatusRequest.verify|verify} messages.
         * @param message SsoCloudMigrationStatusRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoCloudMigrationStatusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoCloudMigrationStatusRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoCloudMigrationStatusRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoCloudMigrationStatusRequest;

        /**
         * Decodes a SsoCloudMigrationStatusRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoCloudMigrationStatusRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoCloudMigrationStatusRequest;

        /**
         * Verifies a SsoCloudMigrationStatusRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoCloudMigrationStatusRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoCloudMigrationStatusRequest
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoCloudMigrationStatusRequest;

        /**
         * Creates a plain object from a SsoCloudMigrationStatusRequest message. Also converts values to other types if specified.
         * @param message SsoCloudMigrationStatusRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoCloudMigrationStatusRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoCloudMigrationStatusRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoCloudMigrationStatusResponse. */
    interface ISsoCloudMigrationStatusResponse {

        /** SsoCloudMigrationStatusResponse success */
        success?: (boolean|null);

        /** SsoCloudMigrationStatusResponse message */
        message?: (string|null);

        /** SsoCloudMigrationStatusResponse nodeId */
        nodeId?: (number|Long|null);

        /** SsoCloudMigrationStatusResponse ssoConnectId */
        ssoConnectId?: (number|Long|null);

        /** SsoCloudMigrationStatusResponse ssoConnectName */
        ssoConnectName?: (string|null);

        /** SsoCloudMigrationStatusResponse ssoConnectCloudId */
        ssoConnectCloudId?: (number|Long|null);

        /** SsoCloudMigrationStatusResponse ssoConnectCloudName */
        ssoConnectCloudName?: (string|null);

        /** SsoCloudMigrationStatusResponse totalUsersCount */
        totalUsersCount?: (number|null);

        /** SsoCloudMigrationStatusResponse usersMigratedCount */
        usersMigratedCount?: (number|null);

        /** SsoCloudMigrationStatusResponse migratedUsers */
        migratedUsers?: (SsoCloud.ISsoCloudMigrationUserInfo[]|null);

        /** SsoCloudMigrationStatusResponse unmigratedUsers */
        unmigratedUsers?: (SsoCloud.ISsoCloudMigrationUserInfo[]|null);
    }

    /**
     * Returns the status of an SSO Connect migration in progress.
     * If there is an error, success will be false and message will contain an error message.
     * User records will be sorted by last name.
     *
     */
    class SsoCloudMigrationStatusResponse implements ISsoCloudMigrationStatusResponse {

        /**
         * Constructs a new SsoCloudMigrationStatusResponse.
         * @see SsoCloudMigrationStatusRequest
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoCloudMigrationStatusResponse);

        /** SsoCloudMigrationStatusResponse success. */
        public success: boolean;

        /** SsoCloudMigrationStatusResponse message. */
        public message: string;

        /** SsoCloudMigrationStatusResponse nodeId. */
        public nodeId: (number|Long);

        /** SsoCloudMigrationStatusResponse ssoConnectId. */
        public ssoConnectId: (number|Long);

        /** SsoCloudMigrationStatusResponse ssoConnectName. */
        public ssoConnectName: string;

        /** SsoCloudMigrationStatusResponse ssoConnectCloudId. */
        public ssoConnectCloudId: (number|Long);

        /** SsoCloudMigrationStatusResponse ssoConnectCloudName. */
        public ssoConnectCloudName: string;

        /** SsoCloudMigrationStatusResponse totalUsersCount. */
        public totalUsersCount: number;

        /** SsoCloudMigrationStatusResponse usersMigratedCount. */
        public usersMigratedCount: number;

        /** SsoCloudMigrationStatusResponse migratedUsers. */
        public migratedUsers: SsoCloud.ISsoCloudMigrationUserInfo[];

        /** SsoCloudMigrationStatusResponse unmigratedUsers. */
        public unmigratedUsers: SsoCloud.ISsoCloudMigrationUserInfo[];

        /**
         * Creates a new SsoCloudMigrationStatusResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoCloudMigrationStatusResponse instance
         */
        public static create(properties?: SsoCloud.ISsoCloudMigrationStatusResponse): SsoCloud.SsoCloudMigrationStatusResponse;

        /**
         * Encodes the specified SsoCloudMigrationStatusResponse message. Does not implicitly {@link SsoCloud.SsoCloudMigrationStatusResponse.verify|verify} messages.
         * @param message SsoCloudMigrationStatusResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoCloudMigrationStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoCloudMigrationStatusResponse message, length delimited. Does not implicitly {@link SsoCloud.SsoCloudMigrationStatusResponse.verify|verify} messages.
         * @param message SsoCloudMigrationStatusResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoCloudMigrationStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoCloudMigrationStatusResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoCloudMigrationStatusResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoCloudMigrationStatusResponse;

        /**
         * Decodes a SsoCloudMigrationStatusResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoCloudMigrationStatusResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoCloudMigrationStatusResponse;

        /**
         * Verifies a SsoCloudMigrationStatusResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoCloudMigrationStatusResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoCloudMigrationStatusResponse
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoCloudMigrationStatusResponse;

        /**
         * Creates a plain object from a SsoCloudMigrationStatusResponse message. Also converts values to other types if specified.
         * @param message SsoCloudMigrationStatusResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoCloudMigrationStatusResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoCloudMigrationStatusResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SsoCloudMigrationUserInfo. */
    interface ISsoCloudMigrationUserInfo {

        /** SsoCloudMigrationUserInfo userId */
        userId?: (number|null);

        /** SsoCloudMigrationUserInfo email */
        email?: (string|null);

        /** SsoCloudMigrationUserInfo fullName */
        fullName?: (string|null);

        /** SsoCloudMigrationUserInfo isMigrated */
        isMigrated?: (boolean|null);
    }

    /** @since MH: 2022-01-11 */
    class SsoCloudMigrationUserInfo implements ISsoCloudMigrationUserInfo {

        /**
         * Constructs a new SsoCloudMigrationUserInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: SsoCloud.ISsoCloudMigrationUserInfo);

        /** SsoCloudMigrationUserInfo userId. */
        public userId: number;

        /** SsoCloudMigrationUserInfo email. */
        public email: string;

        /** SsoCloudMigrationUserInfo fullName. */
        public fullName: string;

        /** SsoCloudMigrationUserInfo isMigrated. */
        public isMigrated: boolean;

        /**
         * Creates a new SsoCloudMigrationUserInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SsoCloudMigrationUserInfo instance
         */
        public static create(properties?: SsoCloud.ISsoCloudMigrationUserInfo): SsoCloud.SsoCloudMigrationUserInfo;

        /**
         * Encodes the specified SsoCloudMigrationUserInfo message. Does not implicitly {@link SsoCloud.SsoCloudMigrationUserInfo.verify|verify} messages.
         * @param message SsoCloudMigrationUserInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SsoCloud.ISsoCloudMigrationUserInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SsoCloudMigrationUserInfo message, length delimited. Does not implicitly {@link SsoCloud.SsoCloudMigrationUserInfo.verify|verify} messages.
         * @param message SsoCloudMigrationUserInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SsoCloud.ISsoCloudMigrationUserInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SsoCloudMigrationUserInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SsoCloudMigrationUserInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SsoCloud.SsoCloudMigrationUserInfo;

        /**
         * Decodes a SsoCloudMigrationUserInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SsoCloudMigrationUserInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SsoCloud.SsoCloudMigrationUserInfo;

        /**
         * Verifies a SsoCloudMigrationUserInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SsoCloudMigrationUserInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SsoCloudMigrationUserInfo
         */
        public static fromObject(object: { [k: string]: any }): SsoCloud.SsoCloudMigrationUserInfo;

        /**
         * Creates a plain object from a SsoCloudMigrationUserInfo message. Also converts values to other types if specified.
         * @param message SsoCloudMigrationUserInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SsoCloud.SsoCloudMigrationUserInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SsoCloudMigrationUserInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace BreachWatch. */
export namespace BreachWatch {

    /** BreachWatchInfoType enum. */
    enum BreachWatchInfoType {
        RECORD = 0,
        ALTERNATE_PASSWORD = 1
    }

    /** Properties of a BreachWatchRecordRequest. */
    interface IBreachWatchRecordRequest {

        /** BreachWatchRecordRequest recordUid */
        recordUid?: (Uint8Array|null);

        /** BreachWatchRecordRequest encryptedData */
        encryptedData?: (Uint8Array|null);

        /** BreachWatchRecordRequest breachWatchInfoType */
        breachWatchInfoType?: (BreachWatch.BreachWatchInfoType|null);

        /** BreachWatchRecordRequest updateUserWhoScanned */
        updateUserWhoScanned?: (boolean|null);
    }

    /** Represents a BreachWatchRecordRequest. */
    class BreachWatchRecordRequest implements IBreachWatchRecordRequest {

        /**
         * Constructs a new BreachWatchRecordRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IBreachWatchRecordRequest);

        /** BreachWatchRecordRequest recordUid. */
        public recordUid: Uint8Array;

        /** BreachWatchRecordRequest encryptedData. */
        public encryptedData: Uint8Array;

        /** BreachWatchRecordRequest breachWatchInfoType. */
        public breachWatchInfoType: BreachWatch.BreachWatchInfoType;

        /** BreachWatchRecordRequest updateUserWhoScanned. */
        public updateUserWhoScanned: boolean;

        /**
         * Creates a new BreachWatchRecordRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BreachWatchRecordRequest instance
         */
        public static create(properties?: BreachWatch.IBreachWatchRecordRequest): BreachWatch.BreachWatchRecordRequest;

        /**
         * Encodes the specified BreachWatchRecordRequest message. Does not implicitly {@link BreachWatch.BreachWatchRecordRequest.verify|verify} messages.
         * @param message BreachWatchRecordRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IBreachWatchRecordRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BreachWatchRecordRequest message, length delimited. Does not implicitly {@link BreachWatch.BreachWatchRecordRequest.verify|verify} messages.
         * @param message BreachWatchRecordRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IBreachWatchRecordRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BreachWatchRecordRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BreachWatchRecordRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.BreachWatchRecordRequest;

        /**
         * Decodes a BreachWatchRecordRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BreachWatchRecordRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.BreachWatchRecordRequest;

        /**
         * Verifies a BreachWatchRecordRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BreachWatchRecordRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BreachWatchRecordRequest
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.BreachWatchRecordRequest;

        /**
         * Creates a plain object from a BreachWatchRecordRequest message. Also converts values to other types if specified.
         * @param message BreachWatchRecordRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.BreachWatchRecordRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BreachWatchRecordRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BreachWatchUpdateRequest. */
    interface IBreachWatchUpdateRequest {

        /** BreachWatchUpdateRequest breachWatchRecordRequest */
        breachWatchRecordRequest?: (BreachWatch.IBreachWatchRecordRequest[]|null);

        /** BreachWatchUpdateRequest encryptedData */
        encryptedData?: (Uint8Array|null);
    }

    /** Represents a BreachWatchUpdateRequest. */
    class BreachWatchUpdateRequest implements IBreachWatchUpdateRequest {

        /**
         * Constructs a new BreachWatchUpdateRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IBreachWatchUpdateRequest);

        /** BreachWatchUpdateRequest breachWatchRecordRequest. */
        public breachWatchRecordRequest: BreachWatch.IBreachWatchRecordRequest[];

        /** BreachWatchUpdateRequest encryptedData. */
        public encryptedData: Uint8Array;

        /**
         * Creates a new BreachWatchUpdateRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BreachWatchUpdateRequest instance
         */
        public static create(properties?: BreachWatch.IBreachWatchUpdateRequest): BreachWatch.BreachWatchUpdateRequest;

        /**
         * Encodes the specified BreachWatchUpdateRequest message. Does not implicitly {@link BreachWatch.BreachWatchUpdateRequest.verify|verify} messages.
         * @param message BreachWatchUpdateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IBreachWatchUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BreachWatchUpdateRequest message, length delimited. Does not implicitly {@link BreachWatch.BreachWatchUpdateRequest.verify|verify} messages.
         * @param message BreachWatchUpdateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IBreachWatchUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BreachWatchUpdateRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BreachWatchUpdateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.BreachWatchUpdateRequest;

        /**
         * Decodes a BreachWatchUpdateRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BreachWatchUpdateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.BreachWatchUpdateRequest;

        /**
         * Verifies a BreachWatchUpdateRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BreachWatchUpdateRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BreachWatchUpdateRequest
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.BreachWatchUpdateRequest;

        /**
         * Creates a plain object from a BreachWatchUpdateRequest message. Also converts values to other types if specified.
         * @param message BreachWatchUpdateRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.BreachWatchUpdateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BreachWatchUpdateRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BreachWatchRecordStatus. */
    interface IBreachWatchRecordStatus {

        /** BreachWatchRecordStatus recordUid */
        recordUid?: (Uint8Array|null);

        /** BreachWatchRecordStatus status */
        status?: (string|null);

        /** BreachWatchRecordStatus reason */
        reason?: (string|null);
    }

    /** Represents a BreachWatchRecordStatus. */
    class BreachWatchRecordStatus implements IBreachWatchRecordStatus {

        /**
         * Constructs a new BreachWatchRecordStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IBreachWatchRecordStatus);

        /** BreachWatchRecordStatus recordUid. */
        public recordUid: Uint8Array;

        /** BreachWatchRecordStatus status. */
        public status: string;

        /** BreachWatchRecordStatus reason. */
        public reason: string;

        /**
         * Creates a new BreachWatchRecordStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BreachWatchRecordStatus instance
         */
        public static create(properties?: BreachWatch.IBreachWatchRecordStatus): BreachWatch.BreachWatchRecordStatus;

        /**
         * Encodes the specified BreachWatchRecordStatus message. Does not implicitly {@link BreachWatch.BreachWatchRecordStatus.verify|verify} messages.
         * @param message BreachWatchRecordStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IBreachWatchRecordStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BreachWatchRecordStatus message, length delimited. Does not implicitly {@link BreachWatch.BreachWatchRecordStatus.verify|verify} messages.
         * @param message BreachWatchRecordStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IBreachWatchRecordStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BreachWatchRecordStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BreachWatchRecordStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.BreachWatchRecordStatus;

        /**
         * Decodes a BreachWatchRecordStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BreachWatchRecordStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.BreachWatchRecordStatus;

        /**
         * Verifies a BreachWatchRecordStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BreachWatchRecordStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BreachWatchRecordStatus
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.BreachWatchRecordStatus;

        /**
         * Creates a plain object from a BreachWatchRecordStatus message. Also converts values to other types if specified.
         * @param message BreachWatchRecordStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.BreachWatchRecordStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BreachWatchRecordStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BreachWatchUpdateResponse. */
    interface IBreachWatchUpdateResponse {

        /** BreachWatchUpdateResponse breachWatchRecordStatus */
        breachWatchRecordStatus?: (BreachWatch.IBreachWatchRecordStatus[]|null);
    }

    /** Represents a BreachWatchUpdateResponse. */
    class BreachWatchUpdateResponse implements IBreachWatchUpdateResponse {

        /**
         * Constructs a new BreachWatchUpdateResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IBreachWatchUpdateResponse);

        /** BreachWatchUpdateResponse breachWatchRecordStatus. */
        public breachWatchRecordStatus: BreachWatch.IBreachWatchRecordStatus[];

        /**
         * Creates a new BreachWatchUpdateResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BreachWatchUpdateResponse instance
         */
        public static create(properties?: BreachWatch.IBreachWatchUpdateResponse): BreachWatch.BreachWatchUpdateResponse;

        /**
         * Encodes the specified BreachWatchUpdateResponse message. Does not implicitly {@link BreachWatch.BreachWatchUpdateResponse.verify|verify} messages.
         * @param message BreachWatchUpdateResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IBreachWatchUpdateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BreachWatchUpdateResponse message, length delimited. Does not implicitly {@link BreachWatch.BreachWatchUpdateResponse.verify|verify} messages.
         * @param message BreachWatchUpdateResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IBreachWatchUpdateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BreachWatchUpdateResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BreachWatchUpdateResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.BreachWatchUpdateResponse;

        /**
         * Decodes a BreachWatchUpdateResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BreachWatchUpdateResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.BreachWatchUpdateResponse;

        /**
         * Verifies a BreachWatchUpdateResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BreachWatchUpdateResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BreachWatchUpdateResponse
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.BreachWatchUpdateResponse;

        /**
         * Creates a plain object from a BreachWatchUpdateResponse message. Also converts values to other types if specified.
         * @param message BreachWatchUpdateResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.BreachWatchUpdateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BreachWatchUpdateResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BreachWatchTokenRequest. */
    interface IBreachWatchTokenRequest {

        /** BreachWatchTokenRequest breachWatchToken */
        breachWatchToken?: (Uint8Array|null);
    }

    /** Represents a BreachWatchTokenRequest. */
    class BreachWatchTokenRequest implements IBreachWatchTokenRequest {

        /**
         * Constructs a new BreachWatchTokenRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IBreachWatchTokenRequest);

        /** BreachWatchTokenRequest breachWatchToken. */
        public breachWatchToken: Uint8Array;

        /**
         * Creates a new BreachWatchTokenRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BreachWatchTokenRequest instance
         */
        public static create(properties?: BreachWatch.IBreachWatchTokenRequest): BreachWatch.BreachWatchTokenRequest;

        /**
         * Encodes the specified BreachWatchTokenRequest message. Does not implicitly {@link BreachWatch.BreachWatchTokenRequest.verify|verify} messages.
         * @param message BreachWatchTokenRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IBreachWatchTokenRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BreachWatchTokenRequest message, length delimited. Does not implicitly {@link BreachWatch.BreachWatchTokenRequest.verify|verify} messages.
         * @param message BreachWatchTokenRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IBreachWatchTokenRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BreachWatchTokenRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BreachWatchTokenRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.BreachWatchTokenRequest;

        /**
         * Decodes a BreachWatchTokenRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BreachWatchTokenRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.BreachWatchTokenRequest;

        /**
         * Verifies a BreachWatchTokenRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BreachWatchTokenRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BreachWatchTokenRequest
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.BreachWatchTokenRequest;

        /**
         * Creates a plain object from a BreachWatchTokenRequest message. Also converts values to other types if specified.
         * @param message BreachWatchTokenRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.BreachWatchTokenRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BreachWatchTokenRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BreachWatchTokenResponse. */
    interface IBreachWatchTokenResponse {

        /** BreachWatchTokenResponse breachWatchToken */
        breachWatchToken?: (Uint8Array|null);

        /** BreachWatchTokenResponse clientEncrypted */
        clientEncrypted?: (boolean|null);
    }

    /** Represents a BreachWatchTokenResponse. */
    class BreachWatchTokenResponse implements IBreachWatchTokenResponse {

        /**
         * Constructs a new BreachWatchTokenResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IBreachWatchTokenResponse);

        /** BreachWatchTokenResponse breachWatchToken. */
        public breachWatchToken: Uint8Array;

        /** BreachWatchTokenResponse clientEncrypted. */
        public clientEncrypted: boolean;

        /**
         * Creates a new BreachWatchTokenResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BreachWatchTokenResponse instance
         */
        public static create(properties?: BreachWatch.IBreachWatchTokenResponse): BreachWatch.BreachWatchTokenResponse;

        /**
         * Encodes the specified BreachWatchTokenResponse message. Does not implicitly {@link BreachWatch.BreachWatchTokenResponse.verify|verify} messages.
         * @param message BreachWatchTokenResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IBreachWatchTokenResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BreachWatchTokenResponse message, length delimited. Does not implicitly {@link BreachWatch.BreachWatchTokenResponse.verify|verify} messages.
         * @param message BreachWatchTokenResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IBreachWatchTokenResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BreachWatchTokenResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BreachWatchTokenResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.BreachWatchTokenResponse;

        /**
         * Decodes a BreachWatchTokenResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BreachWatchTokenResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.BreachWatchTokenResponse;

        /**
         * Verifies a BreachWatchTokenResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BreachWatchTokenResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BreachWatchTokenResponse
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.BreachWatchTokenResponse;

        /**
         * Creates a plain object from a BreachWatchTokenResponse message. Also converts values to other types if specified.
         * @param message BreachWatchTokenResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.BreachWatchTokenResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BreachWatchTokenResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AnonymizedTokenResponse. */
    interface IAnonymizedTokenResponse {

        /** AnonymizedTokenResponse domainToken */
        domainToken?: (Uint8Array|null);

        /** AnonymizedTokenResponse emailToken */
        emailToken?: (Uint8Array|null);

        /** AnonymizedTokenResponse passwordToken */
        passwordToken?: (Uint8Array|null);
    }

    /** Represents an AnonymizedTokenResponse. */
    class AnonymizedTokenResponse implements IAnonymizedTokenResponse {

        /**
         * Constructs a new AnonymizedTokenResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IAnonymizedTokenResponse);

        /** AnonymizedTokenResponse domainToken. */
        public domainToken: Uint8Array;

        /** AnonymizedTokenResponse emailToken. */
        public emailToken: Uint8Array;

        /** AnonymizedTokenResponse passwordToken. */
        public passwordToken: Uint8Array;

        /**
         * Creates a new AnonymizedTokenResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AnonymizedTokenResponse instance
         */
        public static create(properties?: BreachWatch.IAnonymizedTokenResponse): BreachWatch.AnonymizedTokenResponse;

        /**
         * Encodes the specified AnonymizedTokenResponse message. Does not implicitly {@link BreachWatch.AnonymizedTokenResponse.verify|verify} messages.
         * @param message AnonymizedTokenResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IAnonymizedTokenResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AnonymizedTokenResponse message, length delimited. Does not implicitly {@link BreachWatch.AnonymizedTokenResponse.verify|verify} messages.
         * @param message AnonymizedTokenResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IAnonymizedTokenResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AnonymizedTokenResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AnonymizedTokenResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.AnonymizedTokenResponse;

        /**
         * Decodes an AnonymizedTokenResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AnonymizedTokenResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.AnonymizedTokenResponse;

        /**
         * Verifies an AnonymizedTokenResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AnonymizedTokenResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AnonymizedTokenResponse
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.AnonymizedTokenResponse;

        /**
         * Creates a plain object from an AnonymizedTokenResponse message. Also converts values to other types if specified.
         * @param message AnonymizedTokenResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.AnonymizedTokenResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AnonymizedTokenResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HashCheck. */
    interface IHashCheck {

        /** HashCheck hash1 */
        hash1?: (Uint8Array|null);

        /** HashCheck euid */
        euid?: (Uint8Array|null);
    }

    /** Represents a HashCheck. */
    class HashCheck implements IHashCheck {

        /**
         * Constructs a new HashCheck.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IHashCheck);

        /** HashCheck hash1. */
        public hash1: Uint8Array;

        /** HashCheck euid. */
        public euid: Uint8Array;

        /**
         * Creates a new HashCheck instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HashCheck instance
         */
        public static create(properties?: BreachWatch.IHashCheck): BreachWatch.HashCheck;

        /**
         * Encodes the specified HashCheck message. Does not implicitly {@link BreachWatch.HashCheck.verify|verify} messages.
         * @param message HashCheck message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IHashCheck, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HashCheck message, length delimited. Does not implicitly {@link BreachWatch.HashCheck.verify|verify} messages.
         * @param message HashCheck message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IHashCheck, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HashCheck message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HashCheck
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.HashCheck;

        /**
         * Decodes a HashCheck message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HashCheck
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.HashCheck;

        /**
         * Verifies a HashCheck message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HashCheck message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HashCheck
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.HashCheck;

        /**
         * Creates a plain object from a HashCheck message. Also converts values to other types if specified.
         * @param message HashCheck
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.HashCheck, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HashCheck to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BreachWatchStatusRequest. */
    interface IBreachWatchStatusRequest {

        /** BreachWatchStatusRequest anonymizedToken */
        anonymizedToken?: (Uint8Array|null);

        /** BreachWatchStatusRequest hashCheck */
        hashCheck?: (BreachWatch.IHashCheck[]|null);

        /** BreachWatchStatusRequest removedEuid */
        removedEuid?: (Uint8Array[]|null);
    }

    /** Represents a BreachWatchStatusRequest. */
    class BreachWatchStatusRequest implements IBreachWatchStatusRequest {

        /**
         * Constructs a new BreachWatchStatusRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IBreachWatchStatusRequest);

        /** BreachWatchStatusRequest anonymizedToken. */
        public anonymizedToken: Uint8Array;

        /** BreachWatchStatusRequest hashCheck. */
        public hashCheck: BreachWatch.IHashCheck[];

        /** BreachWatchStatusRequest removedEuid. */
        public removedEuid: Uint8Array[];

        /**
         * Creates a new BreachWatchStatusRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BreachWatchStatusRequest instance
         */
        public static create(properties?: BreachWatch.IBreachWatchStatusRequest): BreachWatch.BreachWatchStatusRequest;

        /**
         * Encodes the specified BreachWatchStatusRequest message. Does not implicitly {@link BreachWatch.BreachWatchStatusRequest.verify|verify} messages.
         * @param message BreachWatchStatusRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IBreachWatchStatusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BreachWatchStatusRequest message, length delimited. Does not implicitly {@link BreachWatch.BreachWatchStatusRequest.verify|verify} messages.
         * @param message BreachWatchStatusRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IBreachWatchStatusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BreachWatchStatusRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BreachWatchStatusRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.BreachWatchStatusRequest;

        /**
         * Decodes a BreachWatchStatusRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BreachWatchStatusRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.BreachWatchStatusRequest;

        /**
         * Verifies a BreachWatchStatusRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BreachWatchStatusRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BreachWatchStatusRequest
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.BreachWatchStatusRequest;

        /**
         * Creates a plain object from a BreachWatchStatusRequest message. Also converts values to other types if specified.
         * @param message BreachWatchStatusRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.BreachWatchStatusRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BreachWatchStatusRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HashStatus. */
    interface IHashStatus {

        /** HashStatus hash1 */
        hash1?: (Uint8Array|null);

        /** HashStatus euid */
        euid?: (Uint8Array|null);

        /** HashStatus breachDetected */
        breachDetected?: (boolean|null);
    }

    /** Represents a HashStatus. */
    class HashStatus implements IHashStatus {

        /**
         * Constructs a new HashStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IHashStatus);

        /** HashStatus hash1. */
        public hash1: Uint8Array;

        /** HashStatus euid. */
        public euid: Uint8Array;

        /** HashStatus breachDetected. */
        public breachDetected: boolean;

        /**
         * Creates a new HashStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HashStatus instance
         */
        public static create(properties?: BreachWatch.IHashStatus): BreachWatch.HashStatus;

        /**
         * Encodes the specified HashStatus message. Does not implicitly {@link BreachWatch.HashStatus.verify|verify} messages.
         * @param message HashStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IHashStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HashStatus message, length delimited. Does not implicitly {@link BreachWatch.HashStatus.verify|verify} messages.
         * @param message HashStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IHashStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HashStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HashStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.HashStatus;

        /**
         * Decodes a HashStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HashStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.HashStatus;

        /**
         * Verifies a HashStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HashStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HashStatus
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.HashStatus;

        /**
         * Creates a plain object from a HashStatus message. Also converts values to other types if specified.
         * @param message HashStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.HashStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HashStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BreachWatchStatusResponse. */
    interface IBreachWatchStatusResponse {

        /** BreachWatchStatusResponse hashStatus */
        hashStatus?: (BreachWatch.IHashStatus[]|null);
    }

    /** Represents a BreachWatchStatusResponse. */
    class BreachWatchStatusResponse implements IBreachWatchStatusResponse {

        /**
         * Constructs a new BreachWatchStatusResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IBreachWatchStatusResponse);

        /** BreachWatchStatusResponse hashStatus. */
        public hashStatus: BreachWatch.IHashStatus[];

        /**
         * Creates a new BreachWatchStatusResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BreachWatchStatusResponse instance
         */
        public static create(properties?: BreachWatch.IBreachWatchStatusResponse): BreachWatch.BreachWatchStatusResponse;

        /**
         * Encodes the specified BreachWatchStatusResponse message. Does not implicitly {@link BreachWatch.BreachWatchStatusResponse.verify|verify} messages.
         * @param message BreachWatchStatusResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IBreachWatchStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BreachWatchStatusResponse message, length delimited. Does not implicitly {@link BreachWatch.BreachWatchStatusResponse.verify|verify} messages.
         * @param message BreachWatchStatusResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IBreachWatchStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BreachWatchStatusResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BreachWatchStatusResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.BreachWatchStatusResponse;

        /**
         * Decodes a BreachWatchStatusResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BreachWatchStatusResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.BreachWatchStatusResponse;

        /**
         * Verifies a BreachWatchStatusResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BreachWatchStatusResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BreachWatchStatusResponse
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.BreachWatchStatusResponse;

        /**
         * Creates a plain object from a BreachWatchStatusResponse message. Also converts values to other types if specified.
         * @param message BreachWatchStatusResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.BreachWatchStatusResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BreachWatchStatusResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterprisePublicKeyResponse. */
    interface IEnterprisePublicKeyResponse {

        /** EnterprisePublicKeyResponse enterprisePublicKey */
        enterprisePublicKey?: (Uint8Array|null);

        /** EnterprisePublicKeyResponse enterpriseECCPublicKey */
        enterpriseECCPublicKey?: (Uint8Array|null);
    }

    /** Represents an EnterprisePublicKeyResponse. */
    class EnterprisePublicKeyResponse implements IEnterprisePublicKeyResponse {

        /**
         * Constructs a new EnterprisePublicKeyResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IEnterprisePublicKeyResponse);

        /** EnterprisePublicKeyResponse enterprisePublicKey. */
        public enterprisePublicKey: Uint8Array;

        /** EnterprisePublicKeyResponse enterpriseECCPublicKey. */
        public enterpriseECCPublicKey: Uint8Array;

        /**
         * Creates a new EnterprisePublicKeyResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterprisePublicKeyResponse instance
         */
        public static create(properties?: BreachWatch.IEnterprisePublicKeyResponse): BreachWatch.EnterprisePublicKeyResponse;

        /**
         * Encodes the specified EnterprisePublicKeyResponse message. Does not implicitly {@link BreachWatch.EnterprisePublicKeyResponse.verify|verify} messages.
         * @param message EnterprisePublicKeyResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IEnterprisePublicKeyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterprisePublicKeyResponse message, length delimited. Does not implicitly {@link BreachWatch.EnterprisePublicKeyResponse.verify|verify} messages.
         * @param message EnterprisePublicKeyResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IEnterprisePublicKeyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterprisePublicKeyResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterprisePublicKeyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.EnterprisePublicKeyResponse;

        /**
         * Decodes an EnterprisePublicKeyResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterprisePublicKeyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.EnterprisePublicKeyResponse;

        /**
         * Verifies an EnterprisePublicKeyResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterprisePublicKeyResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterprisePublicKeyResponse
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.EnterprisePublicKeyResponse;

        /**
         * Creates a plain object from an EnterprisePublicKeyResponse message. Also converts values to other types if specified.
         * @param message EnterprisePublicKeyResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.EnterprisePublicKeyResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterprisePublicKeyResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FreeScanRequest. */
    interface IFreeScanRequest {

        /** FreeScanRequest hashedEmail */
        hashedEmail?: (Uint8Array|null);
    }

    /** Represents a FreeScanRequest. */
    class FreeScanRequest implements IFreeScanRequest {

        /**
         * Constructs a new FreeScanRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IFreeScanRequest);

        /** FreeScanRequest hashedEmail. */
        public hashedEmail: Uint8Array;

        /**
         * Creates a new FreeScanRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FreeScanRequest instance
         */
        public static create(properties?: BreachWatch.IFreeScanRequest): BreachWatch.FreeScanRequest;

        /**
         * Encodes the specified FreeScanRequest message. Does not implicitly {@link BreachWatch.FreeScanRequest.verify|verify} messages.
         * @param message FreeScanRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IFreeScanRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FreeScanRequest message, length delimited. Does not implicitly {@link BreachWatch.FreeScanRequest.verify|verify} messages.
         * @param message FreeScanRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IFreeScanRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FreeScanRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FreeScanRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.FreeScanRequest;

        /**
         * Decodes a FreeScanRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FreeScanRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.FreeScanRequest;

        /**
         * Verifies a FreeScanRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FreeScanRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FreeScanRequest
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.FreeScanRequest;

        /**
         * Creates a plain object from a FreeScanRequest message. Also converts values to other types if specified.
         * @param message FreeScanRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.FreeScanRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FreeScanRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FreeScanResponse. */
    interface IFreeScanResponse {

        /** FreeScanResponse emailBreaches */
        emailBreaches?: (number|null);

        /** FreeScanResponse passwordBreaches */
        passwordBreaches?: (number|null);
    }

    /** Represents a FreeScanResponse. */
    class FreeScanResponse implements IFreeScanResponse {

        /**
         * Constructs a new FreeScanResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IFreeScanResponse);

        /** FreeScanResponse emailBreaches. */
        public emailBreaches: number;

        /** FreeScanResponse passwordBreaches. */
        public passwordBreaches: number;

        /**
         * Creates a new FreeScanResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FreeScanResponse instance
         */
        public static create(properties?: BreachWatch.IFreeScanResponse): BreachWatch.FreeScanResponse;

        /**
         * Encodes the specified FreeScanResponse message. Does not implicitly {@link BreachWatch.FreeScanResponse.verify|verify} messages.
         * @param message FreeScanResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IFreeScanResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FreeScanResponse message, length delimited. Does not implicitly {@link BreachWatch.FreeScanResponse.verify|verify} messages.
         * @param message FreeScanResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IFreeScanResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FreeScanResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FreeScanResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.FreeScanResponse;

        /**
         * Decodes a FreeScanResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FreeScanResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.FreeScanResponse;

        /**
         * Verifies a FreeScanResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FreeScanResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FreeScanResponse
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.FreeScanResponse;

        /**
         * Creates a plain object from a FreeScanResponse message. Also converts values to other types if specified.
         * @param message FreeScanResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.FreeScanResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FreeScanResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PaidUserRequest. */
    interface IPaidUserRequest {

        /** PaidUserRequest email */
        email?: (string|null);
    }

    /** Represents a PaidUserRequest. */
    class PaidUserRequest implements IPaidUserRequest {

        /**
         * Constructs a new PaidUserRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IPaidUserRequest);

        /** PaidUserRequest email. */
        public email: string;

        /**
         * Creates a new PaidUserRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PaidUserRequest instance
         */
        public static create(properties?: BreachWatch.IPaidUserRequest): BreachWatch.PaidUserRequest;

        /**
         * Encodes the specified PaidUserRequest message. Does not implicitly {@link BreachWatch.PaidUserRequest.verify|verify} messages.
         * @param message PaidUserRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IPaidUserRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PaidUserRequest message, length delimited. Does not implicitly {@link BreachWatch.PaidUserRequest.verify|verify} messages.
         * @param message PaidUserRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IPaidUserRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PaidUserRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PaidUserRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.PaidUserRequest;

        /**
         * Decodes a PaidUserRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PaidUserRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.PaidUserRequest;

        /**
         * Verifies a PaidUserRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PaidUserRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PaidUserRequest
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.PaidUserRequest;

        /**
         * Creates a plain object from a PaidUserRequest message. Also converts values to other types if specified.
         * @param message PaidUserRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.PaidUserRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PaidUserRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PaidUserResponse. */
    interface IPaidUserResponse {

        /** PaidUserResponse paidUser */
        paidUser?: (boolean|null);
    }

    /** Represents a PaidUserResponse. */
    class PaidUserResponse implements IPaidUserResponse {

        /**
         * Constructs a new PaidUserResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IPaidUserResponse);

        /** PaidUserResponse paidUser. */
        public paidUser: boolean;

        /**
         * Creates a new PaidUserResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PaidUserResponse instance
         */
        public static create(properties?: BreachWatch.IPaidUserResponse): BreachWatch.PaidUserResponse;

        /**
         * Encodes the specified PaidUserResponse message. Does not implicitly {@link BreachWatch.PaidUserResponse.verify|verify} messages.
         * @param message PaidUserResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IPaidUserResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PaidUserResponse message, length delimited. Does not implicitly {@link BreachWatch.PaidUserResponse.verify|verify} messages.
         * @param message PaidUserResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IPaidUserResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PaidUserResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PaidUserResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.PaidUserResponse;

        /**
         * Decodes a PaidUserResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PaidUserResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.PaidUserResponse;

        /**
         * Verifies a PaidUserResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PaidUserResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PaidUserResponse
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.PaidUserResponse;

        /**
         * Creates a plain object from a PaidUserResponse message. Also converts values to other types if specified.
         * @param message PaidUserResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.PaidUserResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PaidUserResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DetailedScanRequest. */
    interface IDetailedScanRequest {

        /** DetailedScanRequest email */
        email?: (string|null);
    }

    /** Represents a DetailedScanRequest. */
    class DetailedScanRequest implements IDetailedScanRequest {

        /**
         * Constructs a new DetailedScanRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IDetailedScanRequest);

        /** DetailedScanRequest email. */
        public email: string;

        /**
         * Creates a new DetailedScanRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DetailedScanRequest instance
         */
        public static create(properties?: BreachWatch.IDetailedScanRequest): BreachWatch.DetailedScanRequest;

        /**
         * Encodes the specified DetailedScanRequest message. Does not implicitly {@link BreachWatch.DetailedScanRequest.verify|verify} messages.
         * @param message DetailedScanRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IDetailedScanRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DetailedScanRequest message, length delimited. Does not implicitly {@link BreachWatch.DetailedScanRequest.verify|verify} messages.
         * @param message DetailedScanRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IDetailedScanRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DetailedScanRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DetailedScanRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.DetailedScanRequest;

        /**
         * Decodes a DetailedScanRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DetailedScanRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.DetailedScanRequest;

        /**
         * Verifies a DetailedScanRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DetailedScanRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DetailedScanRequest
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.DetailedScanRequest;

        /**
         * Creates a plain object from a DetailedScanRequest message. Also converts values to other types if specified.
         * @param message DetailedScanRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.DetailedScanRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DetailedScanRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UseOneTimeTokenRequest. */
    interface IUseOneTimeTokenRequest {

        /** UseOneTimeTokenRequest token */
        token?: (Uint8Array|null);
    }

    /** Represents a UseOneTimeTokenRequest. */
    class UseOneTimeTokenRequest implements IUseOneTimeTokenRequest {

        /**
         * Constructs a new UseOneTimeTokenRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IUseOneTimeTokenRequest);

        /** UseOneTimeTokenRequest token. */
        public token: Uint8Array;

        /**
         * Creates a new UseOneTimeTokenRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UseOneTimeTokenRequest instance
         */
        public static create(properties?: BreachWatch.IUseOneTimeTokenRequest): BreachWatch.UseOneTimeTokenRequest;

        /**
         * Encodes the specified UseOneTimeTokenRequest message. Does not implicitly {@link BreachWatch.UseOneTimeTokenRequest.verify|verify} messages.
         * @param message UseOneTimeTokenRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IUseOneTimeTokenRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UseOneTimeTokenRequest message, length delimited. Does not implicitly {@link BreachWatch.UseOneTimeTokenRequest.verify|verify} messages.
         * @param message UseOneTimeTokenRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IUseOneTimeTokenRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UseOneTimeTokenRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UseOneTimeTokenRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.UseOneTimeTokenRequest;

        /**
         * Decodes a UseOneTimeTokenRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UseOneTimeTokenRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.UseOneTimeTokenRequest;

        /**
         * Verifies a UseOneTimeTokenRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UseOneTimeTokenRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UseOneTimeTokenRequest
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.UseOneTimeTokenRequest;

        /**
         * Creates a plain object from a UseOneTimeTokenRequest message. Also converts values to other types if specified.
         * @param message UseOneTimeTokenRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.UseOneTimeTokenRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UseOneTimeTokenRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BreachEvent. */
    interface IBreachEvent {

        /** BreachEvent site */
        site?: (string|null);

        /** BreachEvent email */
        email?: (string|null);

        /** BreachEvent passwordInBreach */
        passwordInBreach?: (boolean|null);

        /** BreachEvent date */
        date?: (string|null);

        /** BreachEvent description */
        description?: (string|null);
    }

    /** Represents a BreachEvent. */
    class BreachEvent implements IBreachEvent {

        /**
         * Constructs a new BreachEvent.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IBreachEvent);

        /** BreachEvent site. */
        public site: string;

        /** BreachEvent email. */
        public email: string;

        /** BreachEvent passwordInBreach. */
        public passwordInBreach: boolean;

        /** BreachEvent date. */
        public date: string;

        /** BreachEvent description. */
        public description: string;

        /**
         * Creates a new BreachEvent instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BreachEvent instance
         */
        public static create(properties?: BreachWatch.IBreachEvent): BreachWatch.BreachEvent;

        /**
         * Encodes the specified BreachEvent message. Does not implicitly {@link BreachWatch.BreachEvent.verify|verify} messages.
         * @param message BreachEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IBreachEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BreachEvent message, length delimited. Does not implicitly {@link BreachWatch.BreachEvent.verify|verify} messages.
         * @param message BreachEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IBreachEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BreachEvent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BreachEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.BreachEvent;

        /**
         * Decodes a BreachEvent message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BreachEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.BreachEvent;

        /**
         * Verifies a BreachEvent message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BreachEvent message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BreachEvent
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.BreachEvent;

        /**
         * Creates a plain object from a BreachEvent message. Also converts values to other types if specified.
         * @param message BreachEvent
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.BreachEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BreachEvent to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UseOneTimeTokenResponse. */
    interface IUseOneTimeTokenResponse {

        /** UseOneTimeTokenResponse emailBreaches */
        emailBreaches?: (number|null);

        /** UseOneTimeTokenResponse passwordBreaches */
        passwordBreaches?: (number|null);

        /** UseOneTimeTokenResponse breachEvents */
        breachEvents?: (BreachWatch.IBreachEvent[]|null);

        /** UseOneTimeTokenResponse email */
        email?: (string|null);
    }

    /** Represents a UseOneTimeTokenResponse. */
    class UseOneTimeTokenResponse implements IUseOneTimeTokenResponse {

        /**
         * Constructs a new UseOneTimeTokenResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IUseOneTimeTokenResponse);

        /** UseOneTimeTokenResponse emailBreaches. */
        public emailBreaches: number;

        /** UseOneTimeTokenResponse passwordBreaches. */
        public passwordBreaches: number;

        /** UseOneTimeTokenResponse breachEvents. */
        public breachEvents: BreachWatch.IBreachEvent[];

        /** UseOneTimeTokenResponse email. */
        public email: string;

        /**
         * Creates a new UseOneTimeTokenResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UseOneTimeTokenResponse instance
         */
        public static create(properties?: BreachWatch.IUseOneTimeTokenResponse): BreachWatch.UseOneTimeTokenResponse;

        /**
         * Encodes the specified UseOneTimeTokenResponse message. Does not implicitly {@link BreachWatch.UseOneTimeTokenResponse.verify|verify} messages.
         * @param message UseOneTimeTokenResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IUseOneTimeTokenResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UseOneTimeTokenResponse message, length delimited. Does not implicitly {@link BreachWatch.UseOneTimeTokenResponse.verify|verify} messages.
         * @param message UseOneTimeTokenResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IUseOneTimeTokenResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UseOneTimeTokenResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UseOneTimeTokenResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.UseOneTimeTokenResponse;

        /**
         * Decodes a UseOneTimeTokenResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UseOneTimeTokenResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.UseOneTimeTokenResponse;

        /**
         * Verifies a UseOneTimeTokenResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UseOneTimeTokenResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UseOneTimeTokenResponse
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.UseOneTimeTokenResponse;

        /**
         * Creates a plain object from a UseOneTimeTokenResponse message. Also converts values to other types if specified.
         * @param message UseOneTimeTokenResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.UseOneTimeTokenResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UseOneTimeTokenResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OneTimeUseToken. */
    interface IOneTimeUseToken {

        /** OneTimeUseToken email */
        email?: (string|null);

        /** OneTimeUseToken pad */
        pad?: (string|null);
    }

    /** Represents an OneTimeUseToken. */
    class OneTimeUseToken implements IOneTimeUseToken {

        /**
         * Constructs a new OneTimeUseToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IOneTimeUseToken);

        /** OneTimeUseToken email. */
        public email: string;

        /** OneTimeUseToken pad. */
        public pad: string;

        /**
         * Creates a new OneTimeUseToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OneTimeUseToken instance
         */
        public static create(properties?: BreachWatch.IOneTimeUseToken): BreachWatch.OneTimeUseToken;

        /**
         * Encodes the specified OneTimeUseToken message. Does not implicitly {@link BreachWatch.OneTimeUseToken.verify|verify} messages.
         * @param message OneTimeUseToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IOneTimeUseToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OneTimeUseToken message, length delimited. Does not implicitly {@link BreachWatch.OneTimeUseToken.verify|verify} messages.
         * @param message OneTimeUseToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IOneTimeUseToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OneTimeUseToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OneTimeUseToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.OneTimeUseToken;

        /**
         * Decodes an OneTimeUseToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OneTimeUseToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.OneTimeUseToken;

        /**
         * Verifies an OneTimeUseToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OneTimeUseToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OneTimeUseToken
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.OneTimeUseToken;

        /**
         * Creates a plain object from an OneTimeUseToken message. Also converts values to other types if specified.
         * @param message OneTimeUseToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.OneTimeUseToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OneTimeUseToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FreePasswordScanRequest. */
    interface IFreePasswordScanRequest {

        /** FreePasswordScanRequest hashedPassword */
        hashedPassword?: (Uint8Array|null);
    }

    /** Represents a FreePasswordScanRequest. */
    class FreePasswordScanRequest implements IFreePasswordScanRequest {

        /**
         * Constructs a new FreePasswordScanRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IFreePasswordScanRequest);

        /** FreePasswordScanRequest hashedPassword. */
        public hashedPassword: Uint8Array;

        /**
         * Creates a new FreePasswordScanRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FreePasswordScanRequest instance
         */
        public static create(properties?: BreachWatch.IFreePasswordScanRequest): BreachWatch.FreePasswordScanRequest;

        /**
         * Encodes the specified FreePasswordScanRequest message. Does not implicitly {@link BreachWatch.FreePasswordScanRequest.verify|verify} messages.
         * @param message FreePasswordScanRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IFreePasswordScanRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FreePasswordScanRequest message, length delimited. Does not implicitly {@link BreachWatch.FreePasswordScanRequest.verify|verify} messages.
         * @param message FreePasswordScanRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IFreePasswordScanRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FreePasswordScanRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FreePasswordScanRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.FreePasswordScanRequest;

        /**
         * Decodes a FreePasswordScanRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FreePasswordScanRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.FreePasswordScanRequest;

        /**
         * Verifies a FreePasswordScanRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FreePasswordScanRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FreePasswordScanRequest
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.FreePasswordScanRequest;

        /**
         * Creates a plain object from a FreePasswordScanRequest message. Also converts values to other types if specified.
         * @param message FreePasswordScanRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.FreePasswordScanRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FreePasswordScanRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FreePasswordScanResponse. */
    interface IFreePasswordScanResponse {

        /** FreePasswordScanResponse passwordBreaches */
        passwordBreaches?: (number|Long|null);
    }

    /** Represents a FreePasswordScanResponse. */
    class FreePasswordScanResponse implements IFreePasswordScanResponse {

        /**
         * Constructs a new FreePasswordScanResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: BreachWatch.IFreePasswordScanResponse);

        /** FreePasswordScanResponse passwordBreaches. */
        public passwordBreaches: (number|Long);

        /**
         * Creates a new FreePasswordScanResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FreePasswordScanResponse instance
         */
        public static create(properties?: BreachWatch.IFreePasswordScanResponse): BreachWatch.FreePasswordScanResponse;

        /**
         * Encodes the specified FreePasswordScanResponse message. Does not implicitly {@link BreachWatch.FreePasswordScanResponse.verify|verify} messages.
         * @param message FreePasswordScanResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BreachWatch.IFreePasswordScanResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FreePasswordScanResponse message, length delimited. Does not implicitly {@link BreachWatch.FreePasswordScanResponse.verify|verify} messages.
         * @param message FreePasswordScanResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BreachWatch.IFreePasswordScanResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FreePasswordScanResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FreePasswordScanResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BreachWatch.FreePasswordScanResponse;

        /**
         * Decodes a FreePasswordScanResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FreePasswordScanResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BreachWatch.FreePasswordScanResponse;

        /**
         * Verifies a FreePasswordScanResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FreePasswordScanResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FreePasswordScanResponse
         */
        public static fromObject(object: { [k: string]: any }): BreachWatch.FreePasswordScanResponse;

        /**
         * Creates a plain object from a FreePasswordScanResponse message. Also converts values to other types if specified.
         * @param message FreePasswordScanResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BreachWatch.FreePasswordScanResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FreePasswordScanResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Tokens. */
export namespace Tokens {

    /** Properties of a BreachWatchUpdateRequest. */
    interface IBreachWatchUpdateRequest {

        /** BreachWatchUpdateRequest breachWatchRecordRequest */
        breachWatchRecordRequest?: (Tokens.IBreachWatchRecordRequest[]|null);

        /** BreachWatchUpdateRequest encryptedData */
        encryptedData?: (Uint8Array|null);
    }

    /** Represents a BreachWatchUpdateRequest. */
    class BreachWatchUpdateRequest implements IBreachWatchUpdateRequest {

        /**
         * Constructs a new BreachWatchUpdateRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IBreachWatchUpdateRequest);

        /** BreachWatchUpdateRequest breachWatchRecordRequest. */
        public breachWatchRecordRequest: Tokens.IBreachWatchRecordRequest[];

        /** BreachWatchUpdateRequest encryptedData. */
        public encryptedData: Uint8Array;

        /**
         * Creates a new BreachWatchUpdateRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BreachWatchUpdateRequest instance
         */
        public static create(properties?: Tokens.IBreachWatchUpdateRequest): Tokens.BreachWatchUpdateRequest;

        /**
         * Encodes the specified BreachWatchUpdateRequest message. Does not implicitly {@link Tokens.BreachWatchUpdateRequest.verify|verify} messages.
         * @param message BreachWatchUpdateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IBreachWatchUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BreachWatchUpdateRequest message, length delimited. Does not implicitly {@link Tokens.BreachWatchUpdateRequest.verify|verify} messages.
         * @param message BreachWatchUpdateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IBreachWatchUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BreachWatchUpdateRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BreachWatchUpdateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.BreachWatchUpdateRequest;

        /**
         * Decodes a BreachWatchUpdateRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BreachWatchUpdateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.BreachWatchUpdateRequest;

        /**
         * Verifies a BreachWatchUpdateRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BreachWatchUpdateRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BreachWatchUpdateRequest
         */
        public static fromObject(object: { [k: string]: any }): Tokens.BreachWatchUpdateRequest;

        /**
         * Creates a plain object from a BreachWatchUpdateRequest message. Also converts values to other types if specified.
         * @param message BreachWatchUpdateRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.BreachWatchUpdateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BreachWatchUpdateRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BreachWatchRecordRequest. */
    interface IBreachWatchRecordRequest {

        /** BreachWatchRecordRequest recordUid */
        recordUid?: (Uint8Array|null);

        /** BreachWatchRecordRequest encryptedData */
        encryptedData?: (Uint8Array|null);

        /** BreachWatchRecordRequest breachWatchInfoType */
        breachWatchInfoType?: (Tokens.BreachWatchInfoType|null);

        /** BreachWatchRecordRequest updateUserWhoScanned */
        updateUserWhoScanned?: (boolean|null);
    }

    /** Represents a BreachWatchRecordRequest. */
    class BreachWatchRecordRequest implements IBreachWatchRecordRequest {

        /**
         * Constructs a new BreachWatchRecordRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IBreachWatchRecordRequest);

        /** BreachWatchRecordRequest recordUid. */
        public recordUid: Uint8Array;

        /** BreachWatchRecordRequest encryptedData. */
        public encryptedData: Uint8Array;

        /** BreachWatchRecordRequest breachWatchInfoType. */
        public breachWatchInfoType: Tokens.BreachWatchInfoType;

        /** BreachWatchRecordRequest updateUserWhoScanned. */
        public updateUserWhoScanned: boolean;

        /**
         * Creates a new BreachWatchRecordRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BreachWatchRecordRequest instance
         */
        public static create(properties?: Tokens.IBreachWatchRecordRequest): Tokens.BreachWatchRecordRequest;

        /**
         * Encodes the specified BreachWatchRecordRequest message. Does not implicitly {@link Tokens.BreachWatchRecordRequest.verify|verify} messages.
         * @param message BreachWatchRecordRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IBreachWatchRecordRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BreachWatchRecordRequest message, length delimited. Does not implicitly {@link Tokens.BreachWatchRecordRequest.verify|verify} messages.
         * @param message BreachWatchRecordRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IBreachWatchRecordRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BreachWatchRecordRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BreachWatchRecordRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.BreachWatchRecordRequest;

        /**
         * Decodes a BreachWatchRecordRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BreachWatchRecordRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.BreachWatchRecordRequest;

        /**
         * Verifies a BreachWatchRecordRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BreachWatchRecordRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BreachWatchRecordRequest
         */
        public static fromObject(object: { [k: string]: any }): Tokens.BreachWatchRecordRequest;

        /**
         * Creates a plain object from a BreachWatchRecordRequest message. Also converts values to other types if specified.
         * @param message BreachWatchRecordRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.BreachWatchRecordRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BreachWatchRecordRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** BreachWatchInfoType enum. */
    enum BreachWatchInfoType {
        RECORD = 0,
        ALTERNATE_PASSWORD = 1
    }

    /** Properties of a BreachWatchData. */
    interface IBreachWatchData {

        /** BreachWatchData passwords */
        passwords?: (Tokens.IBWPassword[]|null);

        /** BreachWatchData emails */
        emails?: (Tokens.IBWPassword[]|null);

        /** BreachWatchData domains */
        domains?: (Tokens.IBWPassword[]|null);
    }

    /** Represents a BreachWatchData. */
    class BreachWatchData implements IBreachWatchData {

        /**
         * Constructs a new BreachWatchData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IBreachWatchData);

        /** BreachWatchData passwords. */
        public passwords: Tokens.IBWPassword[];

        /** BreachWatchData emails. */
        public emails: Tokens.IBWPassword[];

        /** BreachWatchData domains. */
        public domains: Tokens.IBWPassword[];

        /**
         * Creates a new BreachWatchData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BreachWatchData instance
         */
        public static create(properties?: Tokens.IBreachWatchData): Tokens.BreachWatchData;

        /**
         * Encodes the specified BreachWatchData message. Does not implicitly {@link Tokens.BreachWatchData.verify|verify} messages.
         * @param message BreachWatchData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IBreachWatchData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BreachWatchData message, length delimited. Does not implicitly {@link Tokens.BreachWatchData.verify|verify} messages.
         * @param message BreachWatchData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IBreachWatchData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BreachWatchData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BreachWatchData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.BreachWatchData;

        /**
         * Decodes a BreachWatchData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BreachWatchData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.BreachWatchData;

        /**
         * Verifies a BreachWatchData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BreachWatchData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BreachWatchData
         */
        public static fromObject(object: { [k: string]: any }): Tokens.BreachWatchData;

        /**
         * Creates a plain object from a BreachWatchData message. Also converts values to other types if specified.
         * @param message BreachWatchData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.BreachWatchData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BreachWatchData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BWPassword. */
    interface IBWPassword {

        /** BWPassword value */
        value?: (string|null);

        /** BWPassword resolved */
        resolved?: (number|Long|null);

        /** BWPassword status */
        status?: (Tokens.BWStatus|null);

        /** BWPassword euid */
        euid?: (Uint8Array|null);
    }

    /** Represents a BWPassword. */
    class BWPassword implements IBWPassword {

        /**
         * Constructs a new BWPassword.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IBWPassword);

        /** BWPassword value. */
        public value: string;

        /** BWPassword resolved. */
        public resolved: (number|Long);

        /** BWPassword status. */
        public status: Tokens.BWStatus;

        /** BWPassword euid. */
        public euid: Uint8Array;

        /**
         * Creates a new BWPassword instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BWPassword instance
         */
        public static create(properties?: Tokens.IBWPassword): Tokens.BWPassword;

        /**
         * Encodes the specified BWPassword message. Does not implicitly {@link Tokens.BWPassword.verify|verify} messages.
         * @param message BWPassword message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IBWPassword, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BWPassword message, length delimited. Does not implicitly {@link Tokens.BWPassword.verify|verify} messages.
         * @param message BWPassword message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IBWPassword, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BWPassword message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BWPassword
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.BWPassword;

        /**
         * Decodes a BWPassword message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BWPassword
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.BWPassword;

        /**
         * Verifies a BWPassword message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BWPassword message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BWPassword
         */
        public static fromObject(object: { [k: string]: any }): Tokens.BWPassword;

        /**
         * Creates a plain object from a BWPassword message. Also converts values to other types if specified.
         * @param message BWPassword
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.BWPassword, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BWPassword to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** BWStatus enum. */
    enum BWStatus {
        GOOD = 0,
        CHANGED = 1,
        WEAK = 2,
        BREACHED = 3,
        IGNORE = 4
    }

    /** Properties of a DeviceToken. */
    interface IDeviceToken {

        /** DeviceToken deviceId */
        deviceId?: (number|Long|null);

        /** DeviceToken region */
        region?: (number|null);
    }

    /** Represents a DeviceToken. */
    class DeviceToken implements IDeviceToken {

        /**
         * Constructs a new DeviceToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IDeviceToken);

        /** DeviceToken deviceId. */
        public deviceId: (number|Long);

        /** DeviceToken region. */
        public region: number;

        /**
         * Creates a new DeviceToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeviceToken instance
         */
        public static create(properties?: Tokens.IDeviceToken): Tokens.DeviceToken;

        /**
         * Encodes the specified DeviceToken message. Does not implicitly {@link Tokens.DeviceToken.verify|verify} messages.
         * @param message DeviceToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IDeviceToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeviceToken message, length delimited. Does not implicitly {@link Tokens.DeviceToken.verify|verify} messages.
         * @param message DeviceToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IDeviceToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeviceToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeviceToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.DeviceToken;

        /**
         * Decodes a DeviceToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeviceToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.DeviceToken;

        /**
         * Verifies a DeviceToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeviceToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeviceToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.DeviceToken;

        /**
         * Creates a plain object from a DeviceToken message. Also converts values to other types if specified.
         * @param message DeviceToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.DeviceToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeviceToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SSOLoginToken. */
    interface ISSOLoginToken {

        /** SSOLoginToken ssoServiceProviderId */
        ssoServiceProviderId?: (number|Long|null);

        /** SSOLoginToken username */
        username?: (string|null);

        /** SSOLoginToken alias */
        alias?: (string|null);

        /** SSOLoginToken displayname */
        displayname?: (string|null);
    }

    /** Represents a SSOLoginToken. */
    class SSOLoginToken implements ISSOLoginToken {

        /**
         * Constructs a new SSOLoginToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ISSOLoginToken);

        /** SSOLoginToken ssoServiceProviderId. */
        public ssoServiceProviderId: (number|Long);

        /** SSOLoginToken username. */
        public username: string;

        /** SSOLoginToken alias. */
        public alias: string;

        /** SSOLoginToken displayname. */
        public displayname: string;

        /**
         * Creates a new SSOLoginToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SSOLoginToken instance
         */
        public static create(properties?: Tokens.ISSOLoginToken): Tokens.SSOLoginToken;

        /**
         * Encodes the specified SSOLoginToken message. Does not implicitly {@link Tokens.SSOLoginToken.verify|verify} messages.
         * @param message SSOLoginToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ISSOLoginToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SSOLoginToken message, length delimited. Does not implicitly {@link Tokens.SSOLoginToken.verify|verify} messages.
         * @param message SSOLoginToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ISSOLoginToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SSOLoginToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SSOLoginToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.SSOLoginToken;

        /**
         * Decodes a SSOLoginToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SSOLoginToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.SSOLoginToken;

        /**
         * Verifies a SSOLoginToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SSOLoginToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SSOLoginToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.SSOLoginToken;

        /**
         * Creates a plain object from a SSOLoginToken message. Also converts values to other types if specified.
         * @param message SSOLoginToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.SSOLoginToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SSOLoginToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LoginToken. */
    interface ILoginToken {

        /** LoginToken loginSessionId */
        loginSessionId?: (number|Long|null);

        /** LoginToken deviceId */
        deviceId?: (number|Long|null);

        /** LoginToken accountUid */
        accountUid?: (Uint8Array|null);

        /** LoginToken messageSessionUid */
        messageSessionUid?: (Uint8Array|null);

        /** LoginToken loginState */
        loginState?: (Authentication.LoginState|null);

        /** LoginToken loginMethod */
        loginMethod?: (Authentication.LoginMethod|null);

        /** LoginToken creation */
        creation?: (number|Long|null);

        /** LoginToken userId */
        userId?: (number|null);

        /** LoginToken enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** LoginToken clientVersionId */
        clientVersionId?: (number|null);

        /** LoginToken supportedLanguage */
        supportedLanguage?: (Authentication.SupportedLanguage|null);

        /** LoginToken ssoLoginToken */
        ssoLoginToken?: (Tokens.ISSOLoginToken|null);

        /** LoginToken username */
        username?: (string|null);

        /** LoginToken relogin */
        relogin?: (boolean|null);

        /** LoginToken loginType */
        loginType?: (Authentication.LoginType|null);
    }

    /** Represents a LoginToken. */
    class LoginToken implements ILoginToken {

        /**
         * Constructs a new LoginToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ILoginToken);

        /** LoginToken loginSessionId. */
        public loginSessionId: (number|Long);

        /** LoginToken deviceId. */
        public deviceId: (number|Long);

        /** LoginToken accountUid. */
        public accountUid: Uint8Array;

        /** LoginToken messageSessionUid. */
        public messageSessionUid: Uint8Array;

        /** LoginToken loginState. */
        public loginState: Authentication.LoginState;

        /** LoginToken loginMethod. */
        public loginMethod: Authentication.LoginMethod;

        /** LoginToken creation. */
        public creation: (number|Long);

        /** LoginToken userId. */
        public userId: number;

        /** LoginToken enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** LoginToken clientVersionId. */
        public clientVersionId: number;

        /** LoginToken supportedLanguage. */
        public supportedLanguage: Authentication.SupportedLanguage;

        /** LoginToken ssoLoginToken. */
        public ssoLoginToken?: (Tokens.ISSOLoginToken|null);

        /** LoginToken username. */
        public username: string;

        /** LoginToken relogin. */
        public relogin: boolean;

        /** LoginToken loginType. */
        public loginType: Authentication.LoginType;

        /**
         * Creates a new LoginToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LoginToken instance
         */
        public static create(properties?: Tokens.ILoginToken): Tokens.LoginToken;

        /**
         * Encodes the specified LoginToken message. Does not implicitly {@link Tokens.LoginToken.verify|verify} messages.
         * @param message LoginToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ILoginToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LoginToken message, length delimited. Does not implicitly {@link Tokens.LoginToken.verify|verify} messages.
         * @param message LoginToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ILoginToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LoginToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LoginToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.LoginToken;

        /**
         * Decodes a LoginToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LoginToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.LoginToken;

        /**
         * Verifies a LoginToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LoginToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LoginToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.LoginToken;

        /**
         * Creates a plain object from a LoginToken message. Also converts values to other types if specified.
         * @param message LoginToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.LoginToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LoginToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeviceApprovalToken. */
    interface IDeviceApprovalToken {

        /** DeviceApprovalToken creation */
        creation?: (number|Long|null);

        /** DeviceApprovalToken expiration */
        expiration?: (number|Long|null);

        /** DeviceApprovalToken deviceToken */
        deviceToken?: (Tokens.IDeviceToken|null);

        /** DeviceApprovalToken supportedLanguage */
        supportedLanguage?: (Authentication.SupportedLanguage|null);
    }

    /** Represents a DeviceApprovalToken. */
    class DeviceApprovalToken implements IDeviceApprovalToken {

        /**
         * Constructs a new DeviceApprovalToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IDeviceApprovalToken);

        /** DeviceApprovalToken creation. */
        public creation: (number|Long);

        /** DeviceApprovalToken expiration. */
        public expiration: (number|Long);

        /** DeviceApprovalToken deviceToken. */
        public deviceToken?: (Tokens.IDeviceToken|null);

        /** DeviceApprovalToken supportedLanguage. */
        public supportedLanguage: Authentication.SupportedLanguage;

        /**
         * Creates a new DeviceApprovalToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeviceApprovalToken instance
         */
        public static create(properties?: Tokens.IDeviceApprovalToken): Tokens.DeviceApprovalToken;

        /**
         * Encodes the specified DeviceApprovalToken message. Does not implicitly {@link Tokens.DeviceApprovalToken.verify|verify} messages.
         * @param message DeviceApprovalToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IDeviceApprovalToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeviceApprovalToken message, length delimited. Does not implicitly {@link Tokens.DeviceApprovalToken.verify|verify} messages.
         * @param message DeviceApprovalToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IDeviceApprovalToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeviceApprovalToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeviceApprovalToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.DeviceApprovalToken;

        /**
         * Decodes a DeviceApprovalToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeviceApprovalToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.DeviceApprovalToken;

        /**
         * Verifies a DeviceApprovalToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeviceApprovalToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeviceApprovalToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.DeviceApprovalToken;

        /**
         * Creates a plain object from a DeviceApprovalToken message. Also converts values to other types if specified.
         * @param message DeviceApprovalToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.DeviceApprovalToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeviceApprovalToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TwoFactorToken. */
    interface ITwoFactorToken {

        /** TwoFactorToken creation */
        creation?: (number|Long|null);

        /** TwoFactorToken expiration */
        expiration?: (number|Long|null);

        /** TwoFactorToken deviceToken */
        deviceToken?: (Tokens.IDeviceToken|null);

        /** TwoFactorToken deviceIp */
        deviceIp?: (string|null);
    }

    /** Represents a TwoFactorToken. */
    class TwoFactorToken implements ITwoFactorToken {

        /**
         * Constructs a new TwoFactorToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ITwoFactorToken);

        /** TwoFactorToken creation. */
        public creation: (number|Long);

        /** TwoFactorToken expiration. */
        public expiration: (number|Long);

        /** TwoFactorToken deviceToken. */
        public deviceToken?: (Tokens.IDeviceToken|null);

        /** TwoFactorToken deviceIp. */
        public deviceIp: string;

        /**
         * Creates a new TwoFactorToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TwoFactorToken instance
         */
        public static create(properties?: Tokens.ITwoFactorToken): Tokens.TwoFactorToken;

        /**
         * Encodes the specified TwoFactorToken message. Does not implicitly {@link Tokens.TwoFactorToken.verify|verify} messages.
         * @param message TwoFactorToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ITwoFactorToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TwoFactorToken message, length delimited. Does not implicitly {@link Tokens.TwoFactorToken.verify|verify} messages.
         * @param message TwoFactorToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ITwoFactorToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TwoFactorToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TwoFactorToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.TwoFactorToken;

        /**
         * Decodes a TwoFactorToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TwoFactorToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.TwoFactorToken;

        /**
         * Verifies a TwoFactorToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TwoFactorToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TwoFactorToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.TwoFactorToken;

        /**
         * Creates a plain object from a TwoFactorToken message. Also converts values to other types if specified.
         * @param message TwoFactorToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.TwoFactorToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TwoFactorToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BreachWatchToken. */
    interface IBreachWatchToken {

        /** BreachWatchToken userId */
        userId?: (number|null);

        /** BreachWatchToken domainUid */
        domainUid?: (Uint8Array|null);

        /** BreachWatchToken emailUid */
        emailUid?: (Uint8Array|null);

        /** BreachWatchToken passwordUid */
        passwordUid?: (Uint8Array|null);
    }

    /** Represents a BreachWatchToken. */
    class BreachWatchToken implements IBreachWatchToken {

        /**
         * Constructs a new BreachWatchToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IBreachWatchToken);

        /** BreachWatchToken userId. */
        public userId: number;

        /** BreachWatchToken domainUid. */
        public domainUid: Uint8Array;

        /** BreachWatchToken emailUid. */
        public emailUid: Uint8Array;

        /** BreachWatchToken passwordUid. */
        public passwordUid: Uint8Array;

        /**
         * Creates a new BreachWatchToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BreachWatchToken instance
         */
        public static create(properties?: Tokens.IBreachWatchToken): Tokens.BreachWatchToken;

        /**
         * Encodes the specified BreachWatchToken message. Does not implicitly {@link Tokens.BreachWatchToken.verify|verify} messages.
         * @param message BreachWatchToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IBreachWatchToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BreachWatchToken message, length delimited. Does not implicitly {@link Tokens.BreachWatchToken.verify|verify} messages.
         * @param message BreachWatchToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IBreachWatchToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BreachWatchToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BreachWatchToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.BreachWatchToken;

        /**
         * Decodes a BreachWatchToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BreachWatchToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.BreachWatchToken;

        /**
         * Verifies a BreachWatchToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BreachWatchToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BreachWatchToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.BreachWatchToken;

        /**
         * Creates a plain object from a BreachWatchToken message. Also converts values to other types if specified.
         * @param message BreachWatchToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.BreachWatchToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BreachWatchToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** AnonymizedTokenType enum. */
    enum AnonymizedTokenType {
        DAT = 0,
        EAT = 1,
        PAT = 2
    }

    /** Properties of an AnonymizedToken. */
    interface IAnonymizedToken {

        /** AnonymizedToken created */
        created?: (number|Long|null);

        /** AnonymizedToken expiration */
        expiration?: (number|Long|null);

        /** AnonymizedToken uid */
        uid?: (Uint8Array|null);

        /** AnonymizedToken anonymizedTokenType */
        anonymizedTokenType?: (Tokens.AnonymizedTokenType|null);
    }

    /** Represents an AnonymizedToken. */
    class AnonymizedToken implements IAnonymizedToken {

        /**
         * Constructs a new AnonymizedToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IAnonymizedToken);

        /** AnonymizedToken created. */
        public created: (number|Long);

        /** AnonymizedToken expiration. */
        public expiration: (number|Long);

        /** AnonymizedToken uid. */
        public uid: Uint8Array;

        /** AnonymizedToken anonymizedTokenType. */
        public anonymizedTokenType: Tokens.AnonymizedTokenType;

        /**
         * Creates a new AnonymizedToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AnonymizedToken instance
         */
        public static create(properties?: Tokens.IAnonymizedToken): Tokens.AnonymizedToken;

        /**
         * Encodes the specified AnonymizedToken message. Does not implicitly {@link Tokens.AnonymizedToken.verify|verify} messages.
         * @param message AnonymizedToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IAnonymizedToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AnonymizedToken message, length delimited. Does not implicitly {@link Tokens.AnonymizedToken.verify|verify} messages.
         * @param message AnonymizedToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IAnonymizedToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AnonymizedToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AnonymizedToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.AnonymizedToken;

        /**
         * Decodes an AnonymizedToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AnonymizedToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.AnonymizedToken;

        /**
         * Verifies an AnonymizedToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AnonymizedToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AnonymizedToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.AnonymizedToken;

        /**
         * Creates a plain object from an AnonymizedToken message. Also converts values to other types if specified.
         * @param message AnonymizedToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.AnonymizedToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AnonymizedToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LicenseToken. */
    interface ILicenseToken {

        /** LicenseToken expiration */
        expiration?: (number|Long|null);

        /** LicenseToken licenseStatus */
        licenseStatus?: (Authentication.LicenseStatus|null);
    }

    /** Represents a LicenseToken. */
    class LicenseToken implements ILicenseToken {

        /**
         * Constructs a new LicenseToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ILicenseToken);

        /** LicenseToken expiration. */
        public expiration: (number|Long);

        /** LicenseToken licenseStatus. */
        public licenseStatus: Authentication.LicenseStatus;

        /**
         * Creates a new LicenseToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LicenseToken instance
         */
        public static create(properties?: Tokens.ILicenseToken): Tokens.LicenseToken;

        /**
         * Encodes the specified LicenseToken message. Does not implicitly {@link Tokens.LicenseToken.verify|verify} messages.
         * @param message LicenseToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ILicenseToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LicenseToken message, length delimited. Does not implicitly {@link Tokens.LicenseToken.verify|verify} messages.
         * @param message LicenseToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ILicenseToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LicenseToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LicenseToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.LicenseToken;

        /**
         * Decodes a LicenseToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LicenseToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.LicenseToken;

        /**
         * Verifies a LicenseToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LicenseToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LicenseToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.LicenseToken;

        /**
         * Creates a plain object from a LicenseToken message. Also converts values to other types if specified.
         * @param message LicenseToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.LicenseToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LicenseToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** AccessType enum. */
    enum AccessType {
        VAULT_RW = 0,
        VAULT_RO = 1,
        ADMIN = 2
    }

    /** Properties of a SessionToken. */
    interface ISessionToken {

        /** SessionToken created */
        created?: (number|Long|null);

        /** SessionToken expiration */
        expiration?: (number|Long|null);

        /** SessionToken du1 */
        du1?: (string|null);

        /** SessionToken messageSessionUid */
        messageSessionUid?: (Uint8Array|null);

        /** SessionToken du8 */
        du8?: (Tokens.IDeviceToken|null);

        /** SessionToken fromUserId */
        fromUserId?: (number|null);

        /** SessionToken forUserId */
        forUserId?: (number|null);

        /** SessionToken enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** SessionToken du2 */
        du2?: (Tokens.ILicenseToken|null);

        /** SessionToken du3 */
        du3?: (Tokens.ILicenseToken|null);

        /** SessionToken du4 */
        du4?: (Tokens.ILicenseToken|null);

        /** SessionToken du5 */
        du5?: (Tokens.ILicenseToken|null);

        /** SessionToken du6 */
        du6?: (Authentication.AccountType|null);

        /** SessionToken clientVersionId */
        clientVersionId?: (number|null);

        /** SessionToken sessionTokenType */
        sessionTokenType?: (Authentication.SessionTokenType|null);

        /** SessionToken mcEnterpriseId */
        mcEnterpriseId?: (number|null);

        /** SessionToken du7 */
        du7?: (boolean|null);

        /** SessionToken deviceId */
        deviceId?: (number|Long|null);

        /** SessionToken loginSessionId */
        loginSessionId?: (number|Long|null);
    }

    /** Represents a SessionToken. */
    class SessionToken implements ISessionToken {

        /**
         * Constructs a new SessionToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ISessionToken);

        /** SessionToken created. */
        public created: (number|Long);

        /** SessionToken expiration. */
        public expiration: (number|Long);

        /** SessionToken du1. */
        public du1: string;

        /** SessionToken messageSessionUid. */
        public messageSessionUid: Uint8Array;

        /** SessionToken du8. */
        public du8?: (Tokens.IDeviceToken|null);

        /** SessionToken fromUserId. */
        public fromUserId: number;

        /** SessionToken forUserId. */
        public forUserId: number;

        /** SessionToken enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** SessionToken du2. */
        public du2?: (Tokens.ILicenseToken|null);

        /** SessionToken du3. */
        public du3?: (Tokens.ILicenseToken|null);

        /** SessionToken du4. */
        public du4?: (Tokens.ILicenseToken|null);

        /** SessionToken du5. */
        public du5?: (Tokens.ILicenseToken|null);

        /** SessionToken du6. */
        public du6: Authentication.AccountType;

        /** SessionToken clientVersionId. */
        public clientVersionId: number;

        /** SessionToken sessionTokenType. */
        public sessionTokenType: Authentication.SessionTokenType;

        /** SessionToken mcEnterpriseId. */
        public mcEnterpriseId: number;

        /** SessionToken du7. */
        public du7: boolean;

        /** SessionToken deviceId. */
        public deviceId: (number|Long);

        /** SessionToken loginSessionId. */
        public loginSessionId: (number|Long);

        /**
         * Creates a new SessionToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SessionToken instance
         */
        public static create(properties?: Tokens.ISessionToken): Tokens.SessionToken;

        /**
         * Encodes the specified SessionToken message. Does not implicitly {@link Tokens.SessionToken.verify|verify} messages.
         * @param message SessionToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ISessionToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SessionToken message, length delimited. Does not implicitly {@link Tokens.SessionToken.verify|verify} messages.
         * @param message SessionToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ISessionToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SessionToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SessionToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.SessionToken;

        /**
         * Decodes a SessionToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SessionToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.SessionToken;

        /**
         * Verifies a SessionToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SessionToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SessionToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.SessionToken;

        /**
         * Creates a plain object from a SessionToken message. Also converts values to other types if specified.
         * @param message SessionToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.SessionToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SessionToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserLicenseStatus. */
    interface IUserLicenseStatus {

        /** UserLicenseStatus licenseType */
        licenseType?: (Authentication.LicenseType|null);

        /** UserLicenseStatus expiration */
        expiration?: (number|Long|null);
    }

    /** Represents a UserLicenseStatus. */
    class UserLicenseStatus implements IUserLicenseStatus {

        /**
         * Constructs a new UserLicenseStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IUserLicenseStatus);

        /** UserLicenseStatus licenseType. */
        public licenseType: Authentication.LicenseType;

        /** UserLicenseStatus expiration. */
        public expiration: (number|Long);

        /**
         * Creates a new UserLicenseStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserLicenseStatus instance
         */
        public static create(properties?: Tokens.IUserLicenseStatus): Tokens.UserLicenseStatus;

        /**
         * Encodes the specified UserLicenseStatus message. Does not implicitly {@link Tokens.UserLicenseStatus.verify|verify} messages.
         * @param message UserLicenseStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IUserLicenseStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserLicenseStatus message, length delimited. Does not implicitly {@link Tokens.UserLicenseStatus.verify|verify} messages.
         * @param message UserLicenseStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IUserLicenseStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserLicenseStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserLicenseStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.UserLicenseStatus;

        /**
         * Decodes a UserLicenseStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserLicenseStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.UserLicenseStatus;

        /**
         * Verifies a UserLicenseStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserLicenseStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserLicenseStatus
         */
        public static fromObject(object: { [k: string]: any }): Tokens.UserLicenseStatus;

        /**
         * Creates a plain object from a UserLicenseStatus message. Also converts values to other types if specified.
         * @param message UserLicenseStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.UserLicenseStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserLicenseStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CheckOutTokenResponse. */
    interface ICheckOutTokenResponse {

        /** CheckOutTokenResponse checkOutToken */
        checkOutToken?: (string|null);
    }

    /** Represents a CheckOutTokenResponse. */
    class CheckOutTokenResponse implements ICheckOutTokenResponse {

        /**
         * Constructs a new CheckOutTokenResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ICheckOutTokenResponse);

        /** CheckOutTokenResponse checkOutToken. */
        public checkOutToken: string;

        /**
         * Creates a new CheckOutTokenResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CheckOutTokenResponse instance
         */
        public static create(properties?: Tokens.ICheckOutTokenResponse): Tokens.CheckOutTokenResponse;

        /**
         * Encodes the specified CheckOutTokenResponse message. Does not implicitly {@link Tokens.CheckOutTokenResponse.verify|verify} messages.
         * @param message CheckOutTokenResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ICheckOutTokenResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CheckOutTokenResponse message, length delimited. Does not implicitly {@link Tokens.CheckOutTokenResponse.verify|verify} messages.
         * @param message CheckOutTokenResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ICheckOutTokenResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CheckOutTokenResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CheckOutTokenResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.CheckOutTokenResponse;

        /**
         * Decodes a CheckOutTokenResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CheckOutTokenResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.CheckOutTokenResponse;

        /**
         * Verifies a CheckOutTokenResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CheckOutTokenResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CheckOutTokenResponse
         */
        public static fromObject(object: { [k: string]: any }): Tokens.CheckOutTokenResponse;

        /**
         * Creates a plain object from a CheckOutTokenResponse message. Also converts values to other types if specified.
         * @param message CheckOutTokenResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.CheckOutTokenResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CheckOutTokenResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ImporterToken. */
    interface IImporterToken {

        /** ImporterToken importId */
        importId?: (number|null);

        /** ImporterToken userId */
        userId?: (number|null);

        /** ImporterToken region */
        region?: (string|null);
    }

    /** Represents an ImporterToken. */
    class ImporterToken implements IImporterToken {

        /**
         * Constructs a new ImporterToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IImporterToken);

        /** ImporterToken importId. */
        public importId: number;

        /** ImporterToken userId. */
        public userId: number;

        /** ImporterToken region. */
        public region: string;

        /**
         * Creates a new ImporterToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ImporterToken instance
         */
        public static create(properties?: Tokens.IImporterToken): Tokens.ImporterToken;

        /**
         * Encodes the specified ImporterToken message. Does not implicitly {@link Tokens.ImporterToken.verify|verify} messages.
         * @param message ImporterToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IImporterToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ImporterToken message, length delimited. Does not implicitly {@link Tokens.ImporterToken.verify|verify} messages.
         * @param message ImporterToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IImporterToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ImporterToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ImporterToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.ImporterToken;

        /**
         * Decodes an ImporterToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ImporterToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.ImporterToken;

        /**
         * Verifies an ImporterToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ImporterToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ImporterToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.ImporterToken;

        /**
         * Creates a plain object from an ImporterToken message. Also converts values to other types if specified.
         * @param message ImporterToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.ImporterToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ImporterToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ApiDecryptedRequest. */
    interface IApiDecryptedRequest {

        /** ApiDecryptedRequest decryptedTransmissionKey */
        decryptedTransmissionKey?: (Uint8Array|null);

        /** ApiDecryptedRequest apiRequestPayload */
        apiRequestPayload?: (Authentication.IApiRequestPayload|null);

        /** ApiDecryptedRequest supportedLanguage */
        supportedLanguage?: (Authentication.SupportedLanguage|null);

        /** ApiDecryptedRequest recaptcha */
        recaptcha?: (string|null);

        /** ApiDecryptedRequest userAgent */
        userAgent?: (string|null);

        /** ApiDecryptedRequest subEnvironment */
        subEnvironment?: (string|null);
    }

    /** Represents an ApiDecryptedRequest. */
    class ApiDecryptedRequest implements IApiDecryptedRequest {

        /**
         * Constructs a new ApiDecryptedRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IApiDecryptedRequest);

        /** ApiDecryptedRequest decryptedTransmissionKey. */
        public decryptedTransmissionKey: Uint8Array;

        /** ApiDecryptedRequest apiRequestPayload. */
        public apiRequestPayload?: (Authentication.IApiRequestPayload|null);

        /** ApiDecryptedRequest supportedLanguage. */
        public supportedLanguage: Authentication.SupportedLanguage;

        /** ApiDecryptedRequest recaptcha. */
        public recaptcha: string;

        /** ApiDecryptedRequest userAgent. */
        public userAgent: string;

        /** ApiDecryptedRequest subEnvironment. */
        public subEnvironment: string;

        /**
         * Creates a new ApiDecryptedRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApiDecryptedRequest instance
         */
        public static create(properties?: Tokens.IApiDecryptedRequest): Tokens.ApiDecryptedRequest;

        /**
         * Encodes the specified ApiDecryptedRequest message. Does not implicitly {@link Tokens.ApiDecryptedRequest.verify|verify} messages.
         * @param message ApiDecryptedRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IApiDecryptedRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ApiDecryptedRequest message, length delimited. Does not implicitly {@link Tokens.ApiDecryptedRequest.verify|verify} messages.
         * @param message ApiDecryptedRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IApiDecryptedRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ApiDecryptedRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApiDecryptedRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.ApiDecryptedRequest;

        /**
         * Decodes an ApiDecryptedRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApiDecryptedRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.ApiDecryptedRequest;

        /**
         * Verifies an ApiDecryptedRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ApiDecryptedRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ApiDecryptedRequest
         */
        public static fromObject(object: { [k: string]: any }): Tokens.ApiDecryptedRequest;

        /**
         * Creates a plain object from an ApiDecryptedRequest message. Also converts values to other types if specified.
         * @param message ApiDecryptedRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.ApiDecryptedRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ApiDecryptedRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChangeEmailToken. */
    interface IChangeEmailToken {

        /** ChangeEmailToken userId */
        userId?: (number|null);

        /** ChangeEmailToken newEmail */
        newEmail?: (string|null);

        /** ChangeEmailToken supportedLanguage */
        supportedLanguage?: (Authentication.SupportedLanguage|null);

        /** ChangeEmailToken enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** ChangeEmailToken creation */
        creation?: (number|Long|null);

        /** ChangeEmailToken clientVersionId */
        clientVersionId?: (number|null);
    }

    /** Represents a ChangeEmailToken. */
    class ChangeEmailToken implements IChangeEmailToken {

        /**
         * Constructs a new ChangeEmailToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IChangeEmailToken);

        /** ChangeEmailToken userId. */
        public userId: number;

        /** ChangeEmailToken newEmail. */
        public newEmail: string;

        /** ChangeEmailToken supportedLanguage. */
        public supportedLanguage: Authentication.SupportedLanguage;

        /** ChangeEmailToken enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** ChangeEmailToken creation. */
        public creation: (number|Long);

        /** ChangeEmailToken clientVersionId. */
        public clientVersionId: number;

        /**
         * Creates a new ChangeEmailToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeEmailToken instance
         */
        public static create(properties?: Tokens.IChangeEmailToken): Tokens.ChangeEmailToken;

        /**
         * Encodes the specified ChangeEmailToken message. Does not implicitly {@link Tokens.ChangeEmailToken.verify|verify} messages.
         * @param message ChangeEmailToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IChangeEmailToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChangeEmailToken message, length delimited. Does not implicitly {@link Tokens.ChangeEmailToken.verify|verify} messages.
         * @param message ChangeEmailToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IChangeEmailToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChangeEmailToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeEmailToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.ChangeEmailToken;

        /**
         * Decodes a ChangeEmailToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeEmailToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.ChangeEmailToken;

        /**
         * Verifies a ChangeEmailToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeEmailToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeEmailToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.ChangeEmailToken;

        /**
         * Creates a plain object from a ChangeEmailToken message. Also converts values to other types if specified.
         * @param message ChangeEmailToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.ChangeEmailToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeEmailToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EmailVerificationToken. */
    interface IEmailVerificationToken {

        /** EmailVerificationToken userId */
        userId?: (number|null);

        /** EmailVerificationToken email */
        email?: (string|null);

        /** EmailVerificationToken du1 */
        du1?: (string|null);

        /** EmailVerificationToken enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** EmailVerificationToken du2 */
        du2?: (number|Long|null);
    }

    /** Represents an EmailVerificationToken. */
    class EmailVerificationToken implements IEmailVerificationToken {

        /**
         * Constructs a new EmailVerificationToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IEmailVerificationToken);

        /** EmailVerificationToken userId. */
        public userId: number;

        /** EmailVerificationToken email. */
        public email: string;

        /** EmailVerificationToken du1. */
        public du1: string;

        /** EmailVerificationToken enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** EmailVerificationToken du2. */
        public du2: (number|Long);

        /**
         * Creates a new EmailVerificationToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EmailVerificationToken instance
         */
        public static create(properties?: Tokens.IEmailVerificationToken): Tokens.EmailVerificationToken;

        /**
         * Encodes the specified EmailVerificationToken message. Does not implicitly {@link Tokens.EmailVerificationToken.verify|verify} messages.
         * @param message EmailVerificationToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IEmailVerificationToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EmailVerificationToken message, length delimited. Does not implicitly {@link Tokens.EmailVerificationToken.verify|verify} messages.
         * @param message EmailVerificationToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IEmailVerificationToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EmailVerificationToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EmailVerificationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.EmailVerificationToken;

        /**
         * Decodes an EmailVerificationToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EmailVerificationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.EmailVerificationToken;

        /**
         * Verifies an EmailVerificationToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EmailVerificationToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EmailVerificationToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.EmailVerificationToken;

        /**
         * Creates a plain object from an EmailVerificationToken message. Also converts values to other types if specified.
         * @param message EmailVerificationToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.EmailVerificationToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EmailVerificationToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IpAddressVerificationToken. */
    interface IIpAddressVerificationToken {

        /** IpAddressVerificationToken userId */
        userId?: (number|null);

        /** IpAddressVerificationToken email */
        email?: (string|null);

        /** IpAddressVerificationToken ssoServiceProviderId */
        ssoServiceProviderId?: (number|Long|null);

        /** IpAddressVerificationToken ipAddress */
        ipAddress?: (string|null);

        /** IpAddressVerificationToken du1 */
        du1?: (string|null);

        /** IpAddressVerificationToken du2 */
        du2?: (number|Long|null);

        /** IpAddressVerificationToken enterpriseId */
        enterpriseId?: (number|null);

        /** IpAddressVerificationToken deviceId */
        deviceId?: (number|Long|null);
    }

    /** Represents an IpAddressVerificationToken. */
    class IpAddressVerificationToken implements IIpAddressVerificationToken {

        /**
         * Constructs a new IpAddressVerificationToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IIpAddressVerificationToken);

        /** IpAddressVerificationToken userId. */
        public userId: number;

        /** IpAddressVerificationToken email. */
        public email: string;

        /** IpAddressVerificationToken ssoServiceProviderId. */
        public ssoServiceProviderId: (number|Long);

        /** IpAddressVerificationToken ipAddress. */
        public ipAddress: string;

        /** IpAddressVerificationToken du1. */
        public du1: string;

        /** IpAddressVerificationToken du2. */
        public du2: (number|Long);

        /** IpAddressVerificationToken enterpriseId. */
        public enterpriseId: number;

        /** IpAddressVerificationToken deviceId. */
        public deviceId: (number|Long);

        /**
         * Creates a new IpAddressVerificationToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IpAddressVerificationToken instance
         */
        public static create(properties?: Tokens.IIpAddressVerificationToken): Tokens.IpAddressVerificationToken;

        /**
         * Encodes the specified IpAddressVerificationToken message. Does not implicitly {@link Tokens.IpAddressVerificationToken.verify|verify} messages.
         * @param message IpAddressVerificationToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IIpAddressVerificationToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IpAddressVerificationToken message, length delimited. Does not implicitly {@link Tokens.IpAddressVerificationToken.verify|verify} messages.
         * @param message IpAddressVerificationToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IIpAddressVerificationToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IpAddressVerificationToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IpAddressVerificationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.IpAddressVerificationToken;

        /**
         * Decodes an IpAddressVerificationToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IpAddressVerificationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.IpAddressVerificationToken;

        /**
         * Verifies an IpAddressVerificationToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IpAddressVerificationToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IpAddressVerificationToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.IpAddressVerificationToken;

        /**
         * Creates a plain object from an IpAddressVerificationToken message. Also converts values to other types if specified.
         * @param message IpAddressVerificationToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.IpAddressVerificationToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IpAddressVerificationToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterprisePersonalAccountToken. */
    interface IEnterprisePersonalAccountToken {

        /** EnterprisePersonalAccountToken enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** EnterprisePersonalAccountToken email */
        email?: (string|null);

        /** EnterprisePersonalAccountToken supportedLanguage */
        supportedLanguage?: (Authentication.SupportedLanguage|null);

        /** EnterprisePersonalAccountToken duration */
        duration?: (number|Long|null);

        /** EnterprisePersonalAccountToken referralName */
        referralName?: (string|null);

        /** EnterprisePersonalAccountToken creation */
        creation?: (number|Long|null);
    }

    /** Represents an EnterprisePersonalAccountToken. */
    class EnterprisePersonalAccountToken implements IEnterprisePersonalAccountToken {

        /**
         * Constructs a new EnterprisePersonalAccountToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IEnterprisePersonalAccountToken);

        /** EnterprisePersonalAccountToken enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** EnterprisePersonalAccountToken email. */
        public email: string;

        /** EnterprisePersonalAccountToken supportedLanguage. */
        public supportedLanguage: Authentication.SupportedLanguage;

        /** EnterprisePersonalAccountToken duration. */
        public duration: (number|Long);

        /** EnterprisePersonalAccountToken referralName. */
        public referralName: string;

        /** EnterprisePersonalAccountToken creation. */
        public creation: (number|Long);

        /**
         * Creates a new EnterprisePersonalAccountToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterprisePersonalAccountToken instance
         */
        public static create(properties?: Tokens.IEnterprisePersonalAccountToken): Tokens.EnterprisePersonalAccountToken;

        /**
         * Encodes the specified EnterprisePersonalAccountToken message. Does not implicitly {@link Tokens.EnterprisePersonalAccountToken.verify|verify} messages.
         * @param message EnterprisePersonalAccountToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IEnterprisePersonalAccountToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterprisePersonalAccountToken message, length delimited. Does not implicitly {@link Tokens.EnterprisePersonalAccountToken.verify|verify} messages.
         * @param message EnterprisePersonalAccountToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IEnterprisePersonalAccountToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterprisePersonalAccountToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterprisePersonalAccountToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.EnterprisePersonalAccountToken;

        /**
         * Decodes an EnterprisePersonalAccountToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterprisePersonalAccountToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.EnterprisePersonalAccountToken;

        /**
         * Verifies an EnterprisePersonalAccountToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterprisePersonalAccountToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterprisePersonalAccountToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.EnterprisePersonalAccountToken;

        /**
         * Creates a plain object from an EnterprisePersonalAccountToken message. Also converts values to other types if specified.
         * @param message EnterprisePersonalAccountToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.EnterprisePersonalAccountToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterprisePersonalAccountToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UsernameVerificationToken. */
    interface IUsernameVerificationToken {

        /** UsernameVerificationToken username */
        username?: (string|null);

        /** UsernameVerificationToken accountUid */
        accountUid?: (Uint8Array|null);

        /** UsernameVerificationToken supportedLanguage */
        supportedLanguage?: (Authentication.SupportedLanguage|null);

        /** UsernameVerificationToken creation */
        creation?: (number|Long|null);

        /** UsernameVerificationToken clientVersionId */
        clientVersionId?: (number|null);

        /** UsernameVerificationToken alternateUsername */
        alternateUsername?: (string|null);

        /** UsernameVerificationToken toUsername */
        toUsername?: (string|null);
    }

    /** Represents a UsernameVerificationToken. */
    class UsernameVerificationToken implements IUsernameVerificationToken {

        /**
         * Constructs a new UsernameVerificationToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IUsernameVerificationToken);

        /** UsernameVerificationToken username. */
        public username: string;

        /** UsernameVerificationToken accountUid. */
        public accountUid: Uint8Array;

        /** UsernameVerificationToken supportedLanguage. */
        public supportedLanguage: Authentication.SupportedLanguage;

        /** UsernameVerificationToken creation. */
        public creation: (number|Long);

        /** UsernameVerificationToken clientVersionId. */
        public clientVersionId: number;

        /** UsernameVerificationToken alternateUsername. */
        public alternateUsername: string;

        /** UsernameVerificationToken toUsername. */
        public toUsername: string;

        /**
         * Creates a new UsernameVerificationToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UsernameVerificationToken instance
         */
        public static create(properties?: Tokens.IUsernameVerificationToken): Tokens.UsernameVerificationToken;

        /**
         * Encodes the specified UsernameVerificationToken message. Does not implicitly {@link Tokens.UsernameVerificationToken.verify|verify} messages.
         * @param message UsernameVerificationToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IUsernameVerificationToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UsernameVerificationToken message, length delimited. Does not implicitly {@link Tokens.UsernameVerificationToken.verify|verify} messages.
         * @param message UsernameVerificationToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IUsernameVerificationToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UsernameVerificationToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UsernameVerificationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.UsernameVerificationToken;

        /**
         * Decodes a UsernameVerificationToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UsernameVerificationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.UsernameVerificationToken;

        /**
         * Verifies a UsernameVerificationToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UsernameVerificationToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UsernameVerificationToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.UsernameVerificationToken;

        /**
         * Creates a plain object from a UsernameVerificationToken message. Also converts values to other types if specified.
         * @param message UsernameVerificationToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.UsernameVerificationToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UsernameVerificationToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeviceVerificationToken. */
    interface IDeviceVerificationToken {

        /** DeviceVerificationToken deviceId */
        deviceId?: (number|Long|null);

        /** DeviceVerificationToken username */
        username?: (string|null);

        /** DeviceVerificationToken accountUid */
        accountUid?: (Uint8Array|null);

        /** DeviceVerificationToken clientVersion */
        clientVersion?: (string|null);

        /** DeviceVerificationToken supportedLanguage */
        supportedLanguage?: (Authentication.SupportedLanguage|null);

        /** DeviceVerificationToken creation */
        creation?: (number|Long|null);

        /** DeviceVerificationToken messageSessionUid */
        messageSessionUid?: (Uint8Array|null);

        /** DeviceVerificationToken ipAddress */
        ipAddress?: (string|null);
    }

    /** Represents a DeviceVerificationToken. */
    class DeviceVerificationToken implements IDeviceVerificationToken {

        /**
         * Constructs a new DeviceVerificationToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IDeviceVerificationToken);

        /** DeviceVerificationToken deviceId. */
        public deviceId: (number|Long);

        /** DeviceVerificationToken username. */
        public username: string;

        /** DeviceVerificationToken accountUid. */
        public accountUid: Uint8Array;

        /** DeviceVerificationToken clientVersion. */
        public clientVersion: string;

        /** DeviceVerificationToken supportedLanguage. */
        public supportedLanguage: Authentication.SupportedLanguage;

        /** DeviceVerificationToken creation. */
        public creation: (number|Long);

        /** DeviceVerificationToken messageSessionUid. */
        public messageSessionUid: Uint8Array;

        /** DeviceVerificationToken ipAddress. */
        public ipAddress: string;

        /**
         * Creates a new DeviceVerificationToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeviceVerificationToken instance
         */
        public static create(properties?: Tokens.IDeviceVerificationToken): Tokens.DeviceVerificationToken;

        /**
         * Encodes the specified DeviceVerificationToken message. Does not implicitly {@link Tokens.DeviceVerificationToken.verify|verify} messages.
         * @param message DeviceVerificationToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IDeviceVerificationToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeviceVerificationToken message, length delimited. Does not implicitly {@link Tokens.DeviceVerificationToken.verify|verify} messages.
         * @param message DeviceVerificationToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IDeviceVerificationToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeviceVerificationToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeviceVerificationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.DeviceVerificationToken;

        /**
         * Decodes a DeviceVerificationToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeviceVerificationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.DeviceVerificationToken;

        /**
         * Verifies a DeviceVerificationToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeviceVerificationToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeviceVerificationToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.DeviceVerificationToken;

        /**
         * Creates a plain object from a DeviceVerificationToken message. Also converts values to other types if specified.
         * @param message DeviceVerificationToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.DeviceVerificationToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeviceVerificationToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CreateUserToken. */
    interface ICreateUserToken {

        /** CreateUserToken createUserRequestId */
        createUserRequestId?: (number|null);

        /** CreateUserToken verificationCode */
        verificationCode?: (string|null);

        /** CreateUserToken requestTimeStamp */
        requestTimeStamp?: (number|Long|null);

        /** CreateUserToken supportedLanguage */
        supportedLanguage?: (Authentication.SupportedLanguage|null);

        /** CreateUserToken remoteAddress */
        remoteAddress?: (string|null);

        /** CreateUserToken messageSessionUid */
        messageSessionUid?: (Uint8Array|null);

        /** CreateUserToken deviceId */
        deviceId?: (number|Long|null);
    }

    /** Represents a CreateUserToken. */
    class CreateUserToken implements ICreateUserToken {

        /**
         * Constructs a new CreateUserToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ICreateUserToken);

        /** CreateUserToken createUserRequestId. */
        public createUserRequestId: number;

        /** CreateUserToken verificationCode. */
        public verificationCode: string;

        /** CreateUserToken requestTimeStamp. */
        public requestTimeStamp: (number|Long);

        /** CreateUserToken supportedLanguage. */
        public supportedLanguage: Authentication.SupportedLanguage;

        /** CreateUserToken remoteAddress. */
        public remoteAddress: string;

        /** CreateUserToken messageSessionUid. */
        public messageSessionUid: Uint8Array;

        /** CreateUserToken deviceId. */
        public deviceId: (number|Long);

        /**
         * Creates a new CreateUserToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CreateUserToken instance
         */
        public static create(properties?: Tokens.ICreateUserToken): Tokens.CreateUserToken;

        /**
         * Encodes the specified CreateUserToken message. Does not implicitly {@link Tokens.CreateUserToken.verify|verify} messages.
         * @param message CreateUserToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ICreateUserToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CreateUserToken message, length delimited. Does not implicitly {@link Tokens.CreateUserToken.verify|verify} messages.
         * @param message CreateUserToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ICreateUserToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CreateUserToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CreateUserToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.CreateUserToken;

        /**
         * Decodes a CreateUserToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CreateUserToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.CreateUserToken;

        /**
         * Verifies a CreateUserToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CreateUserToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CreateUserToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.CreateUserToken;

        /**
         * Creates a plain object from a CreateUserToken message. Also converts values to other types if specified.
         * @param message CreateUserToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.CreateUserToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CreateUserToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeleteUserToken. */
    interface IDeleteUserToken {

        /** DeleteUserToken userIdForDelete */
        userIdForDelete?: (number|null);

        /** DeleteUserToken username */
        username?: (string|null);

        /** DeleteUserToken reason */
        reason?: (string|null);

        /** DeleteUserToken requestTimeStamp */
        requestTimeStamp?: (number|Long|null);

        /** DeleteUserToken supportedLanguage */
        supportedLanguage?: (Authentication.SupportedLanguage|null);
    }

    /** Represents a DeleteUserToken. */
    class DeleteUserToken implements IDeleteUserToken {

        /**
         * Constructs a new DeleteUserToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IDeleteUserToken);

        /** DeleteUserToken userIdForDelete. */
        public userIdForDelete: number;

        /** DeleteUserToken username. */
        public username: string;

        /** DeleteUserToken reason. */
        public reason: string;

        /** DeleteUserToken requestTimeStamp. */
        public requestTimeStamp: (number|Long);

        /** DeleteUserToken supportedLanguage. */
        public supportedLanguage: Authentication.SupportedLanguage;

        /**
         * Creates a new DeleteUserToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeleteUserToken instance
         */
        public static create(properties?: Tokens.IDeleteUserToken): Tokens.DeleteUserToken;

        /**
         * Encodes the specified DeleteUserToken message. Does not implicitly {@link Tokens.DeleteUserToken.verify|verify} messages.
         * @param message DeleteUserToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IDeleteUserToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeleteUserToken message, length delimited. Does not implicitly {@link Tokens.DeleteUserToken.verify|verify} messages.
         * @param message DeleteUserToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IDeleteUserToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeleteUserToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeleteUserToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.DeleteUserToken;

        /**
         * Decodes a DeleteUserToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeleteUserToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.DeleteUserToken;

        /**
         * Verifies a DeleteUserToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeleteUserToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeleteUserToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.DeleteUserToken;

        /**
         * Creates a plain object from a DeleteUserToken message. Also converts values to other types if specified.
         * @param message DeleteUserToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.DeleteUserToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeleteUserToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** ProcessTokenType enum. */
    enum ProcessTokenType {
        CHANGE_EMAIL = 0,
        EMAIL_VERIFICATION = 1,
        IP_ADDRESS_VERIFICATION = 2,
        USERNAME_VERIFICATION = 3,
        DEVICE_VERIFICATION = 4,
        CREATE_ACCOUNT_VERIFICATION = 5,
        REDEEM_PERSONAL_LICENSE = 6,
        DELETE_ACCOUNT_VERIFICATION = 7
    }

    /** Properties of a ProcessToken. */
    interface IProcessToken {

        /** ProcessToken processTokenType */
        processTokenType?: (Tokens.ProcessTokenType|null);

        /** ProcessToken payload */
        payload?: (Uint8Array|null);

        /** ProcessToken creation */
        creation?: (number|Long|null);

        /** ProcessToken supportedLanguage */
        supportedLanguage?: (Authentication.SupportedLanguage|null);

        /** ProcessToken subEnvironment */
        subEnvironment?: (string|null);
    }

    /** Represents a ProcessToken. */
    class ProcessToken implements IProcessToken {

        /**
         * Constructs a new ProcessToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IProcessToken);

        /** ProcessToken processTokenType. */
        public processTokenType: Tokens.ProcessTokenType;

        /** ProcessToken payload. */
        public payload: Uint8Array;

        /** ProcessToken creation. */
        public creation: (number|Long);

        /** ProcessToken supportedLanguage. */
        public supportedLanguage: Authentication.SupportedLanguage;

        /** ProcessToken subEnvironment. */
        public subEnvironment: string;

        /**
         * Creates a new ProcessToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ProcessToken instance
         */
        public static create(properties?: Tokens.IProcessToken): Tokens.ProcessToken;

        /**
         * Encodes the specified ProcessToken message. Does not implicitly {@link Tokens.ProcessToken.verify|verify} messages.
         * @param message ProcessToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IProcessToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ProcessToken message, length delimited. Does not implicitly {@link Tokens.ProcessToken.verify|verify} messages.
         * @param message ProcessToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IProcessToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ProcessToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ProcessToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.ProcessToken;

        /**
         * Decodes a ProcessToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ProcessToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.ProcessToken;

        /**
         * Verifies a ProcessToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ProcessToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ProcessToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.ProcessToken;

        /**
         * Creates a plain object from a ProcessToken message. Also converts values to other types if specified.
         * @param message ProcessToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.ProcessToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ProcessToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** PageTokenType enum. */
    enum PageTokenType {
        FULL = 0,
        PARTIAL = 1
    }

    /** Properties of an EnterpriseDataContinuationToken. */
    interface IEnterpriseDataContinuationToken {

        /** EnterpriseDataContinuationToken startType */
        startType?: (Tokens.PageTokenType|null);

        /** EnterpriseDataContinuationToken processedUpToTransactionId */
        processedUpToTransactionId?: (number|Long|null);

        /** EnterpriseDataContinuationToken position */
        position?: (Tokens.IPosition|null);

        /** EnterpriseDataContinuationToken lastProcessedTime */
        lastProcessedTime?: (string|null);
    }

    /** Represents an EnterpriseDataContinuationToken. */
    class EnterpriseDataContinuationToken implements IEnterpriseDataContinuationToken {

        /**
         * Constructs a new EnterpriseDataContinuationToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IEnterpriseDataContinuationToken);

        /** EnterpriseDataContinuationToken startType. */
        public startType: Tokens.PageTokenType;

        /** EnterpriseDataContinuationToken processedUpToTransactionId. */
        public processedUpToTransactionId: (number|Long);

        /** EnterpriseDataContinuationToken position. */
        public position?: (Tokens.IPosition|null);

        /** EnterpriseDataContinuationToken lastProcessedTime. */
        public lastProcessedTime: string;

        /**
         * Creates a new EnterpriseDataContinuationToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseDataContinuationToken instance
         */
        public static create(properties?: Tokens.IEnterpriseDataContinuationToken): Tokens.EnterpriseDataContinuationToken;

        /**
         * Encodes the specified EnterpriseDataContinuationToken message. Does not implicitly {@link Tokens.EnterpriseDataContinuationToken.verify|verify} messages.
         * @param message EnterpriseDataContinuationToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IEnterpriseDataContinuationToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseDataContinuationToken message, length delimited. Does not implicitly {@link Tokens.EnterpriseDataContinuationToken.verify|verify} messages.
         * @param message EnterpriseDataContinuationToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IEnterpriseDataContinuationToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseDataContinuationToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseDataContinuationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.EnterpriseDataContinuationToken;

        /**
         * Decodes an EnterpriseDataContinuationToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseDataContinuationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.EnterpriseDataContinuationToken;

        /**
         * Verifies an EnterpriseDataContinuationToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseDataContinuationToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseDataContinuationToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.EnterpriseDataContinuationToken;

        /**
         * Creates a plain object from an EnterpriseDataContinuationToken message. Also converts values to other types if specified.
         * @param message EnterpriseDataContinuationToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.EnterpriseDataContinuationToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseDataContinuationToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** VaultDataEntity enum. */
    enum VaultDataEntity {
        UNKNOWN = 0,
        USER_FOLDER = 1,
        USER_FOLDER_REMOVED = 2,
        TEAM1 = 3,
        TEAM2 = 4,
        TEAM3 = 5,
        TEAM4 = 6,
        TEAM_REMOVED = 7,
        SHARED_FOLDER = 8,
        SHARED_FOLDER_REMOVED = 9,
        SHARED_FOLDER_USER = 10,
        SHARED_FOLDER_USER_REMOVED = 11,
        SHARED_FOLDER_TEAM = 12,
        SHARED_FOLDER_TEAM_REMOVED = 13,
        SHARED_FOLDER_RECORD = 14,
        SHARED_FOLDER_RECORD_REMOVED = 15,
        SHARED_FOLDER_FOLDER = 16,
        SHARED_FOLDER_FOLDER_RECORD1 = 17,
        SHARED_FOLDER_FOLDER_REMOVED = 18,
        SHARED_FOLDER_FOLDER_RECORD_REMOVED = 19,
        USER_FOLDER_SHARED_FOLDER1 = 20,
        USER_FOLDER_SHARED_FOLDER2 = 21,
        USER_FOLDER_SHARED_FOLDER_REMOVED1 = 22,
        USER_FOLDER_SHARED_FOLDER_REMOVED2 = 23,
        RECORD_META_DATA1 = 24,
        RECORD_META_DATA2 = 25,
        RECORD_LINK = 26,
        RECORD_LINK_REMOVED = 27,
        RECORD1 = 28,
        RECORD2 = 29,
        RECORD_REMOVED = 30,
        NOT_SHARED_DATA = 31,
        SHARING_CHANGE = 32,
        USER_FOLDER_RECORD1 = 33,
        USER_FOLDER_RECORD2_DEPRECATED = 34,
        USER_FOLDER_RECORD_REMOVED = 35,
        BREACH_WATCH_RECORD1 = 36,
        BREACH_WATCH_RECORD2 = 37,
        BREACH_WATCH_RECORD3 = 38,
        BREACH_WATCH_SECURITY = 39,
        USER_AUTH = 40,
        SHARE_INVITATION = 41,
        REUSED_PASSWORD = 42,
        PROFILE = 43,
        PROFILE_PIC = 44,
        PENDING_TEAM_MEMBER = 45,
        KSM_APP_SHARE = 46,
        KSM_APP_CLIENT = 47,
        RECORD_ROTATION = 48,
        USER1 = 49,
        USER2 = 50,
        USER3 = 51,
        USER4 = 52,
        USER5 = 53,
        USER_REMOVED = 54
    }

    /** Properties of a Position. */
    interface IPosition {

        /** Position entity */
        entity?: (Enterprise.EnterpriseDataEntity|null);

        /** Position nodeId */
        nodeId?: (number|Long|null);

        /** Position location */
        location?: (Uint8Array|null);
    }

    /** Represents a Position. */
    class Position implements IPosition {

        /**
         * Constructs a new Position.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IPosition);

        /** Position entity. */
        public entity: Enterprise.EnterpriseDataEntity;

        /** Position nodeId. */
        public nodeId: (number|Long);

        /** Position location. */
        public location: Uint8Array;

        /**
         * Creates a new Position instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Position instance
         */
        public static create(properties?: Tokens.IPosition): Tokens.Position;

        /**
         * Encodes the specified Position message. Does not implicitly {@link Tokens.Position.verify|verify} messages.
         * @param message Position message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IPosition, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Position message, length delimited. Does not implicitly {@link Tokens.Position.verify|verify} messages.
         * @param message Position message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IPosition, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Position message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Position
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.Position;

        /**
         * Decodes a Position message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Position
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.Position;

        /**
         * Verifies a Position message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Position message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Position
         */
        public static fromObject(object: { [k: string]: any }): Tokens.Position;

        /**
         * Creates a plain object from a Position message. Also converts values to other types if specified.
         * @param message Position
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.Position, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Position to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LocationL. */
    interface ILocationL {

        /** LocationL id */
        id?: (number|Long|null);
    }

    /** Represents a LocationL. */
    class LocationL implements ILocationL {

        /**
         * Constructs a new LocationL.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ILocationL);

        /** LocationL id. */
        public id: (number|Long);

        /**
         * Creates a new LocationL instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LocationL instance
         */
        public static create(properties?: Tokens.ILocationL): Tokens.LocationL;

        /**
         * Encodes the specified LocationL message. Does not implicitly {@link Tokens.LocationL.verify|verify} messages.
         * @param message LocationL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ILocationL, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LocationL message, length delimited. Does not implicitly {@link Tokens.LocationL.verify|verify} messages.
         * @param message LocationL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ILocationL, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LocationL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LocationL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.LocationL;

        /**
         * Decodes a LocationL message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LocationL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.LocationL;

        /**
         * Verifies a LocationL message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LocationL message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LocationL
         */
        public static fromObject(object: { [k: string]: any }): Tokens.LocationL;

        /**
         * Creates a plain object from a LocationL message. Also converts values to other types if specified.
         * @param message LocationL
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.LocationL, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LocationL to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LocationLL. */
    interface ILocationLL {

        /** LocationLL id1 */
        id1?: (number|Long|null);

        /** LocationLL id2 */
        id2?: (number|Long|null);
    }

    /** Represents a LocationLL. */
    class LocationLL implements ILocationLL {

        /**
         * Constructs a new LocationLL.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ILocationLL);

        /** LocationLL id1. */
        public id1: (number|Long);

        /** LocationLL id2. */
        public id2: (number|Long);

        /**
         * Creates a new LocationLL instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LocationLL instance
         */
        public static create(properties?: Tokens.ILocationLL): Tokens.LocationLL;

        /**
         * Encodes the specified LocationLL message. Does not implicitly {@link Tokens.LocationLL.verify|verify} messages.
         * @param message LocationLL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ILocationLL, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LocationLL message, length delimited. Does not implicitly {@link Tokens.LocationLL.verify|verify} messages.
         * @param message LocationLL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ILocationLL, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LocationLL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LocationLL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.LocationLL;

        /**
         * Decodes a LocationLL message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LocationLL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.LocationLL;

        /**
         * Verifies a LocationLL message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LocationLL message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LocationLL
         */
        public static fromObject(object: { [k: string]: any }): Tokens.LocationLL;

        /**
         * Creates a plain object from a LocationLL message. Also converts values to other types if specified.
         * @param message LocationLL
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.LocationLL, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LocationLL to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LocationLI. */
    interface ILocationLI {

        /** LocationLI id1 */
        id1?: (number|Long|null);

        /** LocationLI id2 */
        id2?: (number|null);
    }

    /** Represents a LocationLI. */
    class LocationLI implements ILocationLI {

        /**
         * Constructs a new LocationLI.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ILocationLI);

        /** LocationLI id1. */
        public id1: (number|Long);

        /** LocationLI id2. */
        public id2: number;

        /**
         * Creates a new LocationLI instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LocationLI instance
         */
        public static create(properties?: Tokens.ILocationLI): Tokens.LocationLI;

        /**
         * Encodes the specified LocationLI message. Does not implicitly {@link Tokens.LocationLI.verify|verify} messages.
         * @param message LocationLI message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ILocationLI, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LocationLI message, length delimited. Does not implicitly {@link Tokens.LocationLI.verify|verify} messages.
         * @param message LocationLI message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ILocationLI, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LocationLI message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LocationLI
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.LocationLI;

        /**
         * Decodes a LocationLI message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LocationLI
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.LocationLI;

        /**
         * Verifies a LocationLI message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LocationLI message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LocationLI
         */
        public static fromObject(object: { [k: string]: any }): Tokens.LocationLI;

        /**
         * Creates a plain object from a LocationLI message. Also converts values to other types if specified.
         * @param message LocationLI
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.LocationLI, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LocationLI to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LocationII. */
    interface ILocationII {

        /** LocationII id1 */
        id1?: (number|null);

        /** LocationII id2 */
        id2?: (number|null);
    }

    /** Represents a LocationII. */
    class LocationII implements ILocationII {

        /**
         * Constructs a new LocationII.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ILocationII);

        /** LocationII id1. */
        public id1: number;

        /** LocationII id2. */
        public id2: number;

        /**
         * Creates a new LocationII instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LocationII instance
         */
        public static create(properties?: Tokens.ILocationII): Tokens.LocationII;

        /**
         * Encodes the specified LocationII message. Does not implicitly {@link Tokens.LocationII.verify|verify} messages.
         * @param message LocationII message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ILocationII, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LocationII message, length delimited. Does not implicitly {@link Tokens.LocationII.verify|verify} messages.
         * @param message LocationII message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ILocationII, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LocationII message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LocationII
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.LocationII;

        /**
         * Decodes a LocationII message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LocationII
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.LocationII;

        /**
         * Verifies a LocationII message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LocationII message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LocationII
         */
        public static fromObject(object: { [k: string]: any }): Tokens.LocationII;

        /**
         * Creates a plain object from a LocationII message. Also converts values to other types if specified.
         * @param message LocationII
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.LocationII, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LocationII to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LocationB. */
    interface ILocationB {

        /** LocationB uid */
        uid?: (Uint8Array|null);
    }

    /** Represents a LocationB. */
    class LocationB implements ILocationB {

        /**
         * Constructs a new LocationB.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ILocationB);

        /** LocationB uid. */
        public uid: Uint8Array;

        /**
         * Creates a new LocationB instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LocationB instance
         */
        public static create(properties?: Tokens.ILocationB): Tokens.LocationB;

        /**
         * Encodes the specified LocationB message. Does not implicitly {@link Tokens.LocationB.verify|verify} messages.
         * @param message LocationB message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ILocationB, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LocationB message, length delimited. Does not implicitly {@link Tokens.LocationB.verify|verify} messages.
         * @param message LocationB message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ILocationB, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LocationB message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LocationB
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.LocationB;

        /**
         * Decodes a LocationB message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LocationB
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.LocationB;

        /**
         * Verifies a LocationB message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LocationB message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LocationB
         */
        public static fromObject(object: { [k: string]: any }): Tokens.LocationB;

        /**
         * Creates a plain object from a LocationB message. Also converts values to other types if specified.
         * @param message LocationB
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.LocationB, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LocationB to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LocationLB. */
    interface ILocationLB {

        /** LocationLB id */
        id?: (number|Long|null);

        /** LocationLB uid */
        uid?: (Uint8Array|null);
    }

    /** Represents a LocationLB. */
    class LocationLB implements ILocationLB {

        /**
         * Constructs a new LocationLB.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ILocationLB);

        /** LocationLB id. */
        public id: (number|Long);

        /** LocationLB uid. */
        public uid: Uint8Array;

        /**
         * Creates a new LocationLB instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LocationLB instance
         */
        public static create(properties?: Tokens.ILocationLB): Tokens.LocationLB;

        /**
         * Encodes the specified LocationLB message. Does not implicitly {@link Tokens.LocationLB.verify|verify} messages.
         * @param message LocationLB message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ILocationLB, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LocationLB message, length delimited. Does not implicitly {@link Tokens.LocationLB.verify|verify} messages.
         * @param message LocationLB message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ILocationLB, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LocationLB message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LocationLB
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.LocationLB;

        /**
         * Decodes a LocationLB message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LocationLB
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.LocationLB;

        /**
         * Verifies a LocationLB message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LocationLB message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LocationLB
         */
        public static fromObject(object: { [k: string]: any }): Tokens.LocationLB;

        /**
         * Creates a plain object from a LocationLB message. Also converts values to other types if specified.
         * @param message LocationLB
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.LocationLB, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LocationLB to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LocationBI. */
    interface ILocationBI {

        /** LocationBI uid */
        uid?: (Uint8Array|null);

        /** LocationBI id */
        id?: (number|null);
    }

    /** Represents a LocationBI. */
    class LocationBI implements ILocationBI {

        /**
         * Constructs a new LocationBI.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ILocationBI);

        /** LocationBI uid. */
        public uid: Uint8Array;

        /** LocationBI id. */
        public id: number;

        /**
         * Creates a new LocationBI instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LocationBI instance
         */
        public static create(properties?: Tokens.ILocationBI): Tokens.LocationBI;

        /**
         * Encodes the specified LocationBI message. Does not implicitly {@link Tokens.LocationBI.verify|verify} messages.
         * @param message LocationBI message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ILocationBI, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LocationBI message, length delimited. Does not implicitly {@link Tokens.LocationBI.verify|verify} messages.
         * @param message LocationBI message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ILocationBI, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LocationBI message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LocationBI
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.LocationBI;

        /**
         * Decodes a LocationBI message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LocationBI
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.LocationBI;

        /**
         * Verifies a LocationBI message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LocationBI message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LocationBI
         */
        public static fromObject(object: { [k: string]: any }): Tokens.LocationBI;

        /**
         * Creates a plain object from a LocationBI message. Also converts values to other types if specified.
         * @param message LocationBI
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.LocationBI, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LocationBI to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LocationLS. */
    interface ILocationLS {

        /** LocationLS id1 */
        id1?: (number|Long|null);

        /** LocationLS str */
        str?: (string|null);
    }

    /** Represents a LocationLS. */
    class LocationLS implements ILocationLS {

        /**
         * Constructs a new LocationLS.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ILocationLS);

        /** LocationLS id1. */
        public id1: (number|Long);

        /** LocationLS str. */
        public str: string;

        /**
         * Creates a new LocationLS instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LocationLS instance
         */
        public static create(properties?: Tokens.ILocationLS): Tokens.LocationLS;

        /**
         * Encodes the specified LocationLS message. Does not implicitly {@link Tokens.LocationLS.verify|verify} messages.
         * @param message LocationLS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ILocationLS, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LocationLS message, length delimited. Does not implicitly {@link Tokens.LocationLS.verify|verify} messages.
         * @param message LocationLS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ILocationLS, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LocationLS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LocationLS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.LocationLS;

        /**
         * Decodes a LocationLS message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LocationLS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.LocationLS;

        /**
         * Verifies a LocationLS message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LocationLS message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LocationLS
         */
        public static fromObject(object: { [k: string]: any }): Tokens.LocationLS;

        /**
         * Creates a plain object from a LocationLS message. Also converts values to other types if specified.
         * @param message LocationLS
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.LocationLS, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LocationLS to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseDataRoleTeamsPageToken. */
    interface IEnterpriseDataRoleTeamsPageToken {

        /** EnterpriseDataRoleTeamsPageToken lastNodeId */
        lastNodeId?: (number|Long|null);

        /** EnterpriseDataRoleTeamsPageToken lastRoleId */
        lastRoleId?: (number|Long|null);

        /** EnterpriseDataRoleTeamsPageToken lastTeamUid */
        lastTeamUid?: (Uint8Array|null);
    }

    /** Represents an EnterpriseDataRoleTeamsPageToken. */
    class EnterpriseDataRoleTeamsPageToken implements IEnterpriseDataRoleTeamsPageToken {

        /**
         * Constructs a new EnterpriseDataRoleTeamsPageToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IEnterpriseDataRoleTeamsPageToken);

        /** EnterpriseDataRoleTeamsPageToken lastNodeId. */
        public lastNodeId: (number|Long);

        /** EnterpriseDataRoleTeamsPageToken lastRoleId. */
        public lastRoleId: (number|Long);

        /** EnterpriseDataRoleTeamsPageToken lastTeamUid. */
        public lastTeamUid: Uint8Array;

        /**
         * Creates a new EnterpriseDataRoleTeamsPageToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseDataRoleTeamsPageToken instance
         */
        public static create(properties?: Tokens.IEnterpriseDataRoleTeamsPageToken): Tokens.EnterpriseDataRoleTeamsPageToken;

        /**
         * Encodes the specified EnterpriseDataRoleTeamsPageToken message. Does not implicitly {@link Tokens.EnterpriseDataRoleTeamsPageToken.verify|verify} messages.
         * @param message EnterpriseDataRoleTeamsPageToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IEnterpriseDataRoleTeamsPageToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseDataRoleTeamsPageToken message, length delimited. Does not implicitly {@link Tokens.EnterpriseDataRoleTeamsPageToken.verify|verify} messages.
         * @param message EnterpriseDataRoleTeamsPageToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IEnterpriseDataRoleTeamsPageToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseDataRoleTeamsPageToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseDataRoleTeamsPageToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.EnterpriseDataRoleTeamsPageToken;

        /**
         * Decodes an EnterpriseDataRoleTeamsPageToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseDataRoleTeamsPageToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.EnterpriseDataRoleTeamsPageToken;

        /**
         * Verifies an EnterpriseDataRoleTeamsPageToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseDataRoleTeamsPageToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseDataRoleTeamsPageToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.EnterpriseDataRoleTeamsPageToken;

        /**
         * Creates a plain object from an EnterpriseDataRoleTeamsPageToken message. Also converts values to other types if specified.
         * @param message EnterpriseDataRoleTeamsPageToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.EnterpriseDataRoleTeamsPageToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseDataRoleTeamsPageToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseDataTeamsPageToken. */
    interface IEnterpriseDataTeamsPageToken {

        /** EnterpriseDataTeamsPageToken lastNodeId */
        lastNodeId?: (number|Long|null);

        /** EnterpriseDataTeamsPageToken lastTeamUid */
        lastTeamUid?: (Uint8Array|null);
    }

    /** Represents an EnterpriseDataTeamsPageToken. */
    class EnterpriseDataTeamsPageToken implements IEnterpriseDataTeamsPageToken {

        /**
         * Constructs a new EnterpriseDataTeamsPageToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IEnterpriseDataTeamsPageToken);

        /** EnterpriseDataTeamsPageToken lastNodeId. */
        public lastNodeId: (number|Long);

        /** EnterpriseDataTeamsPageToken lastTeamUid. */
        public lastTeamUid: Uint8Array;

        /**
         * Creates a new EnterpriseDataTeamsPageToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseDataTeamsPageToken instance
         */
        public static create(properties?: Tokens.IEnterpriseDataTeamsPageToken): Tokens.EnterpriseDataTeamsPageToken;

        /**
         * Encodes the specified EnterpriseDataTeamsPageToken message. Does not implicitly {@link Tokens.EnterpriseDataTeamsPageToken.verify|verify} messages.
         * @param message EnterpriseDataTeamsPageToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IEnterpriseDataTeamsPageToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseDataTeamsPageToken message, length delimited. Does not implicitly {@link Tokens.EnterpriseDataTeamsPageToken.verify|verify} messages.
         * @param message EnterpriseDataTeamsPageToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IEnterpriseDataTeamsPageToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseDataTeamsPageToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseDataTeamsPageToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.EnterpriseDataTeamsPageToken;

        /**
         * Decodes an EnterpriseDataTeamsPageToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseDataTeamsPageToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.EnterpriseDataTeamsPageToken;

        /**
         * Verifies an EnterpriseDataTeamsPageToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseDataTeamsPageToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseDataTeamsPageToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.EnterpriseDataTeamsPageToken;

        /**
         * Creates a plain object from an EnterpriseDataTeamsPageToken message. Also converts values to other types if specified.
         * @param message EnterpriseDataTeamsPageToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.EnterpriseDataTeamsPageToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseDataTeamsPageToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseDataTeamUsersPageToken. */
    interface IEnterpriseDataTeamUsersPageToken {

        /** EnterpriseDataTeamUsersPageToken lastNodeId */
        lastNodeId?: (number|Long|null);

        /** EnterpriseDataTeamUsersPageToken lastTeamUid */
        lastTeamUid?: (Uint8Array|null);

        /** EnterpriseDataTeamUsersPageToken userId */
        userId?: (number|null);
    }

    /** Represents an EnterpriseDataTeamUsersPageToken. */
    class EnterpriseDataTeamUsersPageToken implements IEnterpriseDataTeamUsersPageToken {

        /**
         * Constructs a new EnterpriseDataTeamUsersPageToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IEnterpriseDataTeamUsersPageToken);

        /** EnterpriseDataTeamUsersPageToken lastNodeId. */
        public lastNodeId: (number|Long);

        /** EnterpriseDataTeamUsersPageToken lastTeamUid. */
        public lastTeamUid: Uint8Array;

        /** EnterpriseDataTeamUsersPageToken userId. */
        public userId: number;

        /**
         * Creates a new EnterpriseDataTeamUsersPageToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseDataTeamUsersPageToken instance
         */
        public static create(properties?: Tokens.IEnterpriseDataTeamUsersPageToken): Tokens.EnterpriseDataTeamUsersPageToken;

        /**
         * Encodes the specified EnterpriseDataTeamUsersPageToken message. Does not implicitly {@link Tokens.EnterpriseDataTeamUsersPageToken.verify|verify} messages.
         * @param message EnterpriseDataTeamUsersPageToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IEnterpriseDataTeamUsersPageToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseDataTeamUsersPageToken message, length delimited. Does not implicitly {@link Tokens.EnterpriseDataTeamUsersPageToken.verify|verify} messages.
         * @param message EnterpriseDataTeamUsersPageToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IEnterpriseDataTeamUsersPageToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseDataTeamUsersPageToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseDataTeamUsersPageToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.EnterpriseDataTeamUsersPageToken;

        /**
         * Decodes an EnterpriseDataTeamUsersPageToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseDataTeamUsersPageToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.EnterpriseDataTeamUsersPageToken;

        /**
         * Verifies an EnterpriseDataTeamUsersPageToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseDataTeamUsersPageToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseDataTeamUsersPageToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.EnterpriseDataTeamUsersPageToken;

        /**
         * Creates a plain object from an EnterpriseDataTeamUsersPageToken message. Also converts values to other types if specified.
         * @param message EnterpriseDataTeamUsersPageToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.EnterpriseDataTeamUsersPageToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseDataTeamUsersPageToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** EnterpriseBackupStage enum. */
    enum EnterpriseBackupStage {
        EBS_USERS = 0,
        EBS_RECORDS_1 = 1,
        EBS_RECORDS_2 = 2,
        EBS_COMPLETE = 3
    }

    /** Properties of an EnterpriseBackupUnlockPair. */
    interface IEnterpriseBackupUnlockPair {

        /** EnterpriseBackupUnlockPair user1Id */
        user1Id?: (number|null);

        /** EnterpriseBackupUnlockPair user2Id */
        user2Id?: (number|null);

        /** EnterpriseBackupUnlockPair user1Key */
        user1Key?: (Uint8Array|null);

        /** EnterpriseBackupUnlockPair user2Key */
        user2Key?: (Uint8Array|null);
    }

    /** Represents an EnterpriseBackupUnlockPair. */
    class EnterpriseBackupUnlockPair implements IEnterpriseBackupUnlockPair {

        /**
         * Constructs a new EnterpriseBackupUnlockPair.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IEnterpriseBackupUnlockPair);

        /** EnterpriseBackupUnlockPair user1Id. */
        public user1Id: number;

        /** EnterpriseBackupUnlockPair user2Id. */
        public user2Id: number;

        /** EnterpriseBackupUnlockPair user1Key. */
        public user1Key: Uint8Array;

        /** EnterpriseBackupUnlockPair user2Key. */
        public user2Key: Uint8Array;

        /**
         * Creates a new EnterpriseBackupUnlockPair instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseBackupUnlockPair instance
         */
        public static create(properties?: Tokens.IEnterpriseBackupUnlockPair): Tokens.EnterpriseBackupUnlockPair;

        /**
         * Encodes the specified EnterpriseBackupUnlockPair message. Does not implicitly {@link Tokens.EnterpriseBackupUnlockPair.verify|verify} messages.
         * @param message EnterpriseBackupUnlockPair message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IEnterpriseBackupUnlockPair, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseBackupUnlockPair message, length delimited. Does not implicitly {@link Tokens.EnterpriseBackupUnlockPair.verify|verify} messages.
         * @param message EnterpriseBackupUnlockPair message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IEnterpriseBackupUnlockPair, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseBackupUnlockPair message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseBackupUnlockPair
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.EnterpriseBackupUnlockPair;

        /**
         * Decodes an EnterpriseBackupUnlockPair message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseBackupUnlockPair
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.EnterpriseBackupUnlockPair;

        /**
         * Verifies an EnterpriseBackupUnlockPair message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseBackupUnlockPair message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseBackupUnlockPair
         */
        public static fromObject(object: { [k: string]: any }): Tokens.EnterpriseBackupUnlockPair;

        /**
         * Creates a plain object from an EnterpriseBackupUnlockPair message. Also converts values to other types if specified.
         * @param message EnterpriseBackupUnlockPair
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.EnterpriseBackupUnlockPair, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseBackupUnlockPair to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterpriseBackupContinuationToken. */
    interface IEnterpriseBackupContinuationToken {

        /** EnterpriseBackupContinuationToken backupKey */
        backupKey?: (Uint8Array|null);

        /** EnterpriseBackupContinuationToken unlockPairs */
        unlockPairs?: (Tokens.IEnterpriseBackupUnlockPair[]|null);

        /** EnterpriseBackupContinuationToken backupStage */
        backupStage?: (Tokens.EnterpriseBackupStage|null);

        /** EnterpriseBackupContinuationToken startUser */
        startUser?: (number|Long|null);

        /** EnterpriseBackupContinuationToken startRecord */
        startRecord?: (Uint8Array|null);
    }

    /** Represents an EnterpriseBackupContinuationToken. */
    class EnterpriseBackupContinuationToken implements IEnterpriseBackupContinuationToken {

        /**
         * Constructs a new EnterpriseBackupContinuationToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IEnterpriseBackupContinuationToken);

        /** EnterpriseBackupContinuationToken backupKey. */
        public backupKey: Uint8Array;

        /** EnterpriseBackupContinuationToken unlockPairs. */
        public unlockPairs: Tokens.IEnterpriseBackupUnlockPair[];

        /** EnterpriseBackupContinuationToken backupStage. */
        public backupStage: Tokens.EnterpriseBackupStage;

        /** EnterpriseBackupContinuationToken startUser. */
        public startUser: (number|Long);

        /** EnterpriseBackupContinuationToken startRecord. */
        public startRecord: Uint8Array;

        /**
         * Creates a new EnterpriseBackupContinuationToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterpriseBackupContinuationToken instance
         */
        public static create(properties?: Tokens.IEnterpriseBackupContinuationToken): Tokens.EnterpriseBackupContinuationToken;

        /**
         * Encodes the specified EnterpriseBackupContinuationToken message. Does not implicitly {@link Tokens.EnterpriseBackupContinuationToken.verify|verify} messages.
         * @param message EnterpriseBackupContinuationToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IEnterpriseBackupContinuationToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterpriseBackupContinuationToken message, length delimited. Does not implicitly {@link Tokens.EnterpriseBackupContinuationToken.verify|verify} messages.
         * @param message EnterpriseBackupContinuationToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IEnterpriseBackupContinuationToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterpriseBackupContinuationToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterpriseBackupContinuationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.EnterpriseBackupContinuationToken;

        /**
         * Decodes an EnterpriseBackupContinuationToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterpriseBackupContinuationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.EnterpriseBackupContinuationToken;

        /**
         * Verifies an EnterpriseBackupContinuationToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterpriseBackupContinuationToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterpriseBackupContinuationToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.EnterpriseBackupContinuationToken;

        /**
         * Creates a plain object from an EnterpriseBackupContinuationToken message. Also converts values to other types if specified.
         * @param message EnterpriseBackupContinuationToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.EnterpriseBackupContinuationToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterpriseBackupContinuationToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VerificationToken. */
    interface IVerificationToken {

        /** VerificationToken accountUid */
        accountUid?: (Uint8Array|null);

        /** VerificationToken username */
        username?: (string|null);

        /** VerificationToken regionId */
        regionId?: (number|null);

        /** VerificationToken creation */
        creation?: (number|Long|null);
    }

    /** Represents a VerificationToken. */
    class VerificationToken implements IVerificationToken {

        /**
         * Constructs a new VerificationToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IVerificationToken);

        /** VerificationToken accountUid. */
        public accountUid: Uint8Array;

        /** VerificationToken username. */
        public username: string;

        /** VerificationToken regionId. */
        public regionId: number;

        /** VerificationToken creation. */
        public creation: (number|Long);

        /**
         * Creates a new VerificationToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VerificationToken instance
         */
        public static create(properties?: Tokens.IVerificationToken): Tokens.VerificationToken;

        /**
         * Encodes the specified VerificationToken message. Does not implicitly {@link Tokens.VerificationToken.verify|verify} messages.
         * @param message VerificationToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IVerificationToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VerificationToken message, length delimited. Does not implicitly {@link Tokens.VerificationToken.verify|verify} messages.
         * @param message VerificationToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IVerificationToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VerificationToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VerificationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.VerificationToken;

        /**
         * Decodes a VerificationToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VerificationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.VerificationToken;

        /**
         * Verifies a VerificationToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VerificationToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VerificationToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.VerificationToken;

        /**
         * Creates a plain object from a VerificationToken message. Also converts values to other types if specified.
         * @param message VerificationToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.VerificationToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VerificationToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ComplianceDataContinuationToken. */
    interface IComplianceDataContinuationToken {

        /** ComplianceDataContinuationToken enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** ComplianceDataContinuationToken recordUid */
        recordUid?: (Uint8Array|null);
    }

    /** Represents a ComplianceDataContinuationToken. */
    class ComplianceDataContinuationToken implements IComplianceDataContinuationToken {

        /**
         * Constructs a new ComplianceDataContinuationToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IComplianceDataContinuationToken);

        /** ComplianceDataContinuationToken enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** ComplianceDataContinuationToken recordUid. */
        public recordUid: Uint8Array;

        /**
         * Creates a new ComplianceDataContinuationToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ComplianceDataContinuationToken instance
         */
        public static create(properties?: Tokens.IComplianceDataContinuationToken): Tokens.ComplianceDataContinuationToken;

        /**
         * Encodes the specified ComplianceDataContinuationToken message. Does not implicitly {@link Tokens.ComplianceDataContinuationToken.verify|verify} messages.
         * @param message ComplianceDataContinuationToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IComplianceDataContinuationToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ComplianceDataContinuationToken message, length delimited. Does not implicitly {@link Tokens.ComplianceDataContinuationToken.verify|verify} messages.
         * @param message ComplianceDataContinuationToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IComplianceDataContinuationToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ComplianceDataContinuationToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ComplianceDataContinuationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.ComplianceDataContinuationToken;

        /**
         * Decodes a ComplianceDataContinuationToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ComplianceDataContinuationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.ComplianceDataContinuationToken;

        /**
         * Verifies a ComplianceDataContinuationToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ComplianceDataContinuationToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ComplianceDataContinuationToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.ComplianceDataContinuationToken;

        /**
         * Creates a plain object from a ComplianceDataContinuationToken message. Also converts values to other types if specified.
         * @param message ComplianceDataContinuationToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.ComplianceDataContinuationToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ComplianceDataContinuationToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VaultSyncDownContinuationToken. */
    interface IVaultSyncDownContinuationToken {

        /** VaultSyncDownContinuationToken tokenVersion */
        tokenVersion?: (number|null);

        /** VaultSyncDownContinuationToken syncedToSyncOrder */
        syncedToSyncOrder?: (number|Long|null);

        /** VaultSyncDownContinuationToken syncingToSyncOrder */
        syncingToSyncOrder?: (number|Long|null);

        /** VaultSyncDownContinuationToken tokenGenerated */
        tokenGenerated?: (number|null);

        /** VaultSyncDownContinuationToken lastFullSyncCompleted */
        lastFullSyncCompleted?: (number|null);

        /** VaultSyncDownContinuationToken locations */
        locations?: (Tokens.IVaultSyncDownLocations|null);

        /** VaultSyncDownContinuationToken checkForAuditData */
        checkForAuditData?: (boolean|null);
    }

    /** Represents a VaultSyncDownContinuationToken. */
    class VaultSyncDownContinuationToken implements IVaultSyncDownContinuationToken {

        /**
         * Constructs a new VaultSyncDownContinuationToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IVaultSyncDownContinuationToken);

        /** VaultSyncDownContinuationToken tokenVersion. */
        public tokenVersion: number;

        /** VaultSyncDownContinuationToken syncedToSyncOrder. */
        public syncedToSyncOrder: (number|Long);

        /** VaultSyncDownContinuationToken syncingToSyncOrder. */
        public syncingToSyncOrder: (number|Long);

        /** VaultSyncDownContinuationToken tokenGenerated. */
        public tokenGenerated: number;

        /** VaultSyncDownContinuationToken lastFullSyncCompleted. */
        public lastFullSyncCompleted: number;

        /** VaultSyncDownContinuationToken locations. */
        public locations?: (Tokens.IVaultSyncDownLocations|null);

        /** VaultSyncDownContinuationToken checkForAuditData. */
        public checkForAuditData: boolean;

        /**
         * Creates a new VaultSyncDownContinuationToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VaultSyncDownContinuationToken instance
         */
        public static create(properties?: Tokens.IVaultSyncDownContinuationToken): Tokens.VaultSyncDownContinuationToken;

        /**
         * Encodes the specified VaultSyncDownContinuationToken message. Does not implicitly {@link Tokens.VaultSyncDownContinuationToken.verify|verify} messages.
         * @param message VaultSyncDownContinuationToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IVaultSyncDownContinuationToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VaultSyncDownContinuationToken message, length delimited. Does not implicitly {@link Tokens.VaultSyncDownContinuationToken.verify|verify} messages.
         * @param message VaultSyncDownContinuationToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IVaultSyncDownContinuationToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VaultSyncDownContinuationToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VaultSyncDownContinuationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.VaultSyncDownContinuationToken;

        /**
         * Decodes a VaultSyncDownContinuationToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VaultSyncDownContinuationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.VaultSyncDownContinuationToken;

        /**
         * Verifies a VaultSyncDownContinuationToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VaultSyncDownContinuationToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VaultSyncDownContinuationToken
         */
        public static fromObject(object: { [k: string]: any }): Tokens.VaultSyncDownContinuationToken;

        /**
         * Creates a plain object from a VaultSyncDownContinuationToken message. Also converts values to other types if specified.
         * @param message VaultSyncDownContinuationToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.VaultSyncDownContinuationToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VaultSyncDownContinuationToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VaultSyncDownLocations. */
    interface IVaultSyncDownLocations {

        /** VaultSyncDownLocations vaultDataEntity */
        vaultDataEntity?: (number|null);

        /** VaultSyncDownLocations recordLocation */
        recordLocation?: (Tokens.IRecordLocation|null);

        /** VaultSyncDownLocations recordLinkLocation */
        recordLinkLocation?: (Tokens.IRecordLinkLocation|null);

        /** VaultSyncDownLocations folderLocation */
        folderLocation?: (Tokens.IFolderLocation|null);

        /** VaultSyncDownLocations folderRecordLocation */
        folderRecordLocation?: (Tokens.IFolderRecordLocation|null);

        /** VaultSyncDownLocations folderSharedFolderLocation */
        folderSharedFolderLocation?: (Tokens.IFolderSharedFolderLocation|null);

        /** VaultSyncDownLocations sharedFolderLocation */
        sharedFolderLocation?: (Tokens.ISharedFolderLocation|null);

        /** VaultSyncDownLocations sharedFolderRecordLocation */
        sharedFolderRecordLocation?: (Tokens.ISharedFolderRecordLocation|null);

        /** VaultSyncDownLocations sharedFolderTeamLocation */
        sharedFolderTeamLocation?: (Tokens.ISharedFolderTeamLocation|null);

        /** VaultSyncDownLocations sharedFolderUserLocation */
        sharedFolderUserLocation?: (Tokens.ISharedFolderUserLocation|null);

        /** VaultSyncDownLocations shareInvitationLocation */
        shareInvitationLocation?: (Tokens.IShareInvitationLocation|null);

        /** VaultSyncDownLocations teamLocation */
        teamLocation?: (Tokens.ITeamLocation|null);

        /** VaultSyncDownLocations userAuthHashLocation */
        userAuthHashLocation?: (Tokens.IUserAuthHashLocation|null);

        /** VaultSyncDownLocations ksmLocation */
        ksmLocation?: (Tokens.IKsmLocation|null);

        /** VaultSyncDownLocations sharedFolderFolderRecordLocation */
        sharedFolderFolderRecordLocation?: (Tokens.ISharedFolderFolderRecordLocation|null);

        /** VaultSyncDownLocations userLocation */
        userLocation?: (Tokens.IUserLocation|null);
    }

    /** Represents a VaultSyncDownLocations. */
    class VaultSyncDownLocations implements IVaultSyncDownLocations {

        /**
         * Constructs a new VaultSyncDownLocations.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IVaultSyncDownLocations);

        /** VaultSyncDownLocations vaultDataEntity. */
        public vaultDataEntity: number;

        /** VaultSyncDownLocations recordLocation. */
        public recordLocation?: (Tokens.IRecordLocation|null);

        /** VaultSyncDownLocations recordLinkLocation. */
        public recordLinkLocation?: (Tokens.IRecordLinkLocation|null);

        /** VaultSyncDownLocations folderLocation. */
        public folderLocation?: (Tokens.IFolderLocation|null);

        /** VaultSyncDownLocations folderRecordLocation. */
        public folderRecordLocation?: (Tokens.IFolderRecordLocation|null);

        /** VaultSyncDownLocations folderSharedFolderLocation. */
        public folderSharedFolderLocation?: (Tokens.IFolderSharedFolderLocation|null);

        /** VaultSyncDownLocations sharedFolderLocation. */
        public sharedFolderLocation?: (Tokens.ISharedFolderLocation|null);

        /** VaultSyncDownLocations sharedFolderRecordLocation. */
        public sharedFolderRecordLocation?: (Tokens.ISharedFolderRecordLocation|null);

        /** VaultSyncDownLocations sharedFolderTeamLocation. */
        public sharedFolderTeamLocation?: (Tokens.ISharedFolderTeamLocation|null);

        /** VaultSyncDownLocations sharedFolderUserLocation. */
        public sharedFolderUserLocation?: (Tokens.ISharedFolderUserLocation|null);

        /** VaultSyncDownLocations shareInvitationLocation. */
        public shareInvitationLocation?: (Tokens.IShareInvitationLocation|null);

        /** VaultSyncDownLocations teamLocation. */
        public teamLocation?: (Tokens.ITeamLocation|null);

        /** VaultSyncDownLocations userAuthHashLocation. */
        public userAuthHashLocation?: (Tokens.IUserAuthHashLocation|null);

        /** VaultSyncDownLocations ksmLocation. */
        public ksmLocation?: (Tokens.IKsmLocation|null);

        /** VaultSyncDownLocations sharedFolderFolderRecordLocation. */
        public sharedFolderFolderRecordLocation?: (Tokens.ISharedFolderFolderRecordLocation|null);

        /** VaultSyncDownLocations userLocation. */
        public userLocation?: (Tokens.IUserLocation|null);

        /**
         * Creates a new VaultSyncDownLocations instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VaultSyncDownLocations instance
         */
        public static create(properties?: Tokens.IVaultSyncDownLocations): Tokens.VaultSyncDownLocations;

        /**
         * Encodes the specified VaultSyncDownLocations message. Does not implicitly {@link Tokens.VaultSyncDownLocations.verify|verify} messages.
         * @param message VaultSyncDownLocations message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IVaultSyncDownLocations, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VaultSyncDownLocations message, length delimited. Does not implicitly {@link Tokens.VaultSyncDownLocations.verify|verify} messages.
         * @param message VaultSyncDownLocations message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IVaultSyncDownLocations, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VaultSyncDownLocations message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VaultSyncDownLocations
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.VaultSyncDownLocations;

        /**
         * Decodes a VaultSyncDownLocations message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VaultSyncDownLocations
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.VaultSyncDownLocations;

        /**
         * Verifies a VaultSyncDownLocations message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VaultSyncDownLocations message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VaultSyncDownLocations
         */
        public static fromObject(object: { [k: string]: any }): Tokens.VaultSyncDownLocations;

        /**
         * Creates a plain object from a VaultSyncDownLocations message. Also converts values to other types if specified.
         * @param message VaultSyncDownLocations
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.VaultSyncDownLocations, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VaultSyncDownLocations to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordLocation. */
    interface IRecordLocation {

        /** RecordLocation recordUid */
        recordUid?: (Uint8Array|null);

        /** RecordLocation lastSyncRevision */
        lastSyncRevision?: (number|Long|null);
    }

    /** Represents a RecordLocation. */
    class RecordLocation implements IRecordLocation {

        /**
         * Constructs a new RecordLocation.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IRecordLocation);

        /** RecordLocation recordUid. */
        public recordUid: Uint8Array;

        /** RecordLocation lastSyncRevision. */
        public lastSyncRevision: (number|Long);

        /**
         * Creates a new RecordLocation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordLocation instance
         */
        public static create(properties?: Tokens.IRecordLocation): Tokens.RecordLocation;

        /**
         * Encodes the specified RecordLocation message. Does not implicitly {@link Tokens.RecordLocation.verify|verify} messages.
         * @param message RecordLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IRecordLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordLocation message, length delimited. Does not implicitly {@link Tokens.RecordLocation.verify|verify} messages.
         * @param message RecordLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IRecordLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordLocation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.RecordLocation;

        /**
         * Decodes a RecordLocation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.RecordLocation;

        /**
         * Verifies a RecordLocation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordLocation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordLocation
         */
        public static fromObject(object: { [k: string]: any }): Tokens.RecordLocation;

        /**
         * Creates a plain object from a RecordLocation message. Also converts values to other types if specified.
         * @param message RecordLocation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.RecordLocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordLocation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FolderLocation. */
    interface IFolderLocation {

        /** FolderLocation folderUid */
        folderUid?: (Uint8Array|null);

        /** FolderLocation lastSyncRevision */
        lastSyncRevision?: (number|Long|null);
    }

    /** Represents a FolderLocation. */
    class FolderLocation implements IFolderLocation {

        /**
         * Constructs a new FolderLocation.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IFolderLocation);

        /** FolderLocation folderUid. */
        public folderUid: Uint8Array;

        /** FolderLocation lastSyncRevision. */
        public lastSyncRevision: (number|Long);

        /**
         * Creates a new FolderLocation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FolderLocation instance
         */
        public static create(properties?: Tokens.IFolderLocation): Tokens.FolderLocation;

        /**
         * Encodes the specified FolderLocation message. Does not implicitly {@link Tokens.FolderLocation.verify|verify} messages.
         * @param message FolderLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IFolderLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FolderLocation message, length delimited. Does not implicitly {@link Tokens.FolderLocation.verify|verify} messages.
         * @param message FolderLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IFolderLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FolderLocation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FolderLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.FolderLocation;

        /**
         * Decodes a FolderLocation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FolderLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.FolderLocation;

        /**
         * Verifies a FolderLocation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FolderLocation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FolderLocation
         */
        public static fromObject(object: { [k: string]: any }): Tokens.FolderLocation;

        /**
         * Creates a plain object from a FolderLocation message. Also converts values to other types if specified.
         * @param message FolderLocation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.FolderLocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FolderLocation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderLocation. */
    interface ISharedFolderLocation {

        /** SharedFolderLocation sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** SharedFolderLocation lastSyncRevision */
        lastSyncRevision?: (number|Long|null);
    }

    /** Represents a SharedFolderLocation. */
    class SharedFolderLocation implements ISharedFolderLocation {

        /**
         * Constructs a new SharedFolderLocation.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ISharedFolderLocation);

        /** SharedFolderLocation sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** SharedFolderLocation lastSyncRevision. */
        public lastSyncRevision: (number|Long);

        /**
         * Creates a new SharedFolderLocation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderLocation instance
         */
        public static create(properties?: Tokens.ISharedFolderLocation): Tokens.SharedFolderLocation;

        /**
         * Encodes the specified SharedFolderLocation message. Does not implicitly {@link Tokens.SharedFolderLocation.verify|verify} messages.
         * @param message SharedFolderLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ISharedFolderLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderLocation message, length delimited. Does not implicitly {@link Tokens.SharedFolderLocation.verify|verify} messages.
         * @param message SharedFolderLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ISharedFolderLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderLocation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.SharedFolderLocation;

        /**
         * Decodes a SharedFolderLocation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.SharedFolderLocation;

        /**
         * Verifies a SharedFolderLocation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderLocation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderLocation
         */
        public static fromObject(object: { [k: string]: any }): Tokens.SharedFolderLocation;

        /**
         * Creates a plain object from a SharedFolderLocation message. Also converts values to other types if specified.
         * @param message SharedFolderLocation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.SharedFolderLocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderLocation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderUserLocation. */
    interface ISharedFolderUserLocation {

        /** SharedFolderUserLocation sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** SharedFolderUserLocation username */
        username?: (string|null);

        /** SharedFolderUserLocation lastSyncRevision */
        lastSyncRevision?: (number|Long|null);

        /** SharedFolderUserLocation accountUid */
        accountUid?: (Uint8Array|null);
    }

    /** Represents a SharedFolderUserLocation. */
    class SharedFolderUserLocation implements ISharedFolderUserLocation {

        /**
         * Constructs a new SharedFolderUserLocation.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ISharedFolderUserLocation);

        /** SharedFolderUserLocation sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** SharedFolderUserLocation username. */
        public username: string;

        /** SharedFolderUserLocation lastSyncRevision. */
        public lastSyncRevision: (number|Long);

        /** SharedFolderUserLocation accountUid. */
        public accountUid: Uint8Array;

        /**
         * Creates a new SharedFolderUserLocation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderUserLocation instance
         */
        public static create(properties?: Tokens.ISharedFolderUserLocation): Tokens.SharedFolderUserLocation;

        /**
         * Encodes the specified SharedFolderUserLocation message. Does not implicitly {@link Tokens.SharedFolderUserLocation.verify|verify} messages.
         * @param message SharedFolderUserLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ISharedFolderUserLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderUserLocation message, length delimited. Does not implicitly {@link Tokens.SharedFolderUserLocation.verify|verify} messages.
         * @param message SharedFolderUserLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ISharedFolderUserLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderUserLocation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderUserLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.SharedFolderUserLocation;

        /**
         * Decodes a SharedFolderUserLocation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderUserLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.SharedFolderUserLocation;

        /**
         * Verifies a SharedFolderUserLocation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderUserLocation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderUserLocation
         */
        public static fromObject(object: { [k: string]: any }): Tokens.SharedFolderUserLocation;

        /**
         * Creates a plain object from a SharedFolderUserLocation message. Also converts values to other types if specified.
         * @param message SharedFolderUserLocation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.SharedFolderUserLocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderUserLocation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderTeamLocation. */
    interface ISharedFolderTeamLocation {

        /** SharedFolderTeamLocation sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** SharedFolderTeamLocation teamUid */
        teamUid?: (Uint8Array|null);

        /** SharedFolderTeamLocation lastSyncRevision */
        lastSyncRevision?: (number|Long|null);
    }

    /** Represents a SharedFolderTeamLocation. */
    class SharedFolderTeamLocation implements ISharedFolderTeamLocation {

        /**
         * Constructs a new SharedFolderTeamLocation.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ISharedFolderTeamLocation);

        /** SharedFolderTeamLocation sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** SharedFolderTeamLocation teamUid. */
        public teamUid: Uint8Array;

        /** SharedFolderTeamLocation lastSyncRevision. */
        public lastSyncRevision: (number|Long);

        /**
         * Creates a new SharedFolderTeamLocation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderTeamLocation instance
         */
        public static create(properties?: Tokens.ISharedFolderTeamLocation): Tokens.SharedFolderTeamLocation;

        /**
         * Encodes the specified SharedFolderTeamLocation message. Does not implicitly {@link Tokens.SharedFolderTeamLocation.verify|verify} messages.
         * @param message SharedFolderTeamLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ISharedFolderTeamLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderTeamLocation message, length delimited. Does not implicitly {@link Tokens.SharedFolderTeamLocation.verify|verify} messages.
         * @param message SharedFolderTeamLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ISharedFolderTeamLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderTeamLocation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderTeamLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.SharedFolderTeamLocation;

        /**
         * Decodes a SharedFolderTeamLocation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderTeamLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.SharedFolderTeamLocation;

        /**
         * Verifies a SharedFolderTeamLocation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderTeamLocation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderTeamLocation
         */
        public static fromObject(object: { [k: string]: any }): Tokens.SharedFolderTeamLocation;

        /**
         * Creates a plain object from a SharedFolderTeamLocation message. Also converts values to other types if specified.
         * @param message SharedFolderTeamLocation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.SharedFolderTeamLocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderTeamLocation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderRecordLocation. */
    interface ISharedFolderRecordLocation {

        /** SharedFolderRecordLocation sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** SharedFolderRecordLocation recordUid */
        recordUid?: (Uint8Array|null);

        /** SharedFolderRecordLocation lastSyncRevision */
        lastSyncRevision?: (number|Long|null);
    }

    /** Represents a SharedFolderRecordLocation. */
    class SharedFolderRecordLocation implements ISharedFolderRecordLocation {

        /**
         * Constructs a new SharedFolderRecordLocation.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ISharedFolderRecordLocation);

        /** SharedFolderRecordLocation sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** SharedFolderRecordLocation recordUid. */
        public recordUid: Uint8Array;

        /** SharedFolderRecordLocation lastSyncRevision. */
        public lastSyncRevision: (number|Long);

        /**
         * Creates a new SharedFolderRecordLocation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderRecordLocation instance
         */
        public static create(properties?: Tokens.ISharedFolderRecordLocation): Tokens.SharedFolderRecordLocation;

        /**
         * Encodes the specified SharedFolderRecordLocation message. Does not implicitly {@link Tokens.SharedFolderRecordLocation.verify|verify} messages.
         * @param message SharedFolderRecordLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ISharedFolderRecordLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderRecordLocation message, length delimited. Does not implicitly {@link Tokens.SharedFolderRecordLocation.verify|verify} messages.
         * @param message SharedFolderRecordLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ISharedFolderRecordLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderRecordLocation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderRecordLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.SharedFolderRecordLocation;

        /**
         * Decodes a SharedFolderRecordLocation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderRecordLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.SharedFolderRecordLocation;

        /**
         * Verifies a SharedFolderRecordLocation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderRecordLocation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderRecordLocation
         */
        public static fromObject(object: { [k: string]: any }): Tokens.SharedFolderRecordLocation;

        /**
         * Creates a plain object from a SharedFolderRecordLocation message. Also converts values to other types if specified.
         * @param message SharedFolderRecordLocation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.SharedFolderRecordLocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderRecordLocation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderFolderRecordLocation. */
    interface ISharedFolderFolderRecordLocation {

        /** SharedFolderFolderRecordLocation sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** SharedFolderFolderRecordLocation folderUid */
        folderUid?: (Uint8Array|null);

        /** SharedFolderFolderRecordLocation recordUid */
        recordUid?: (Uint8Array|null);
    }

    /** Represents a SharedFolderFolderRecordLocation. */
    class SharedFolderFolderRecordLocation implements ISharedFolderFolderRecordLocation {

        /**
         * Constructs a new SharedFolderFolderRecordLocation.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ISharedFolderFolderRecordLocation);

        /** SharedFolderFolderRecordLocation sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** SharedFolderFolderRecordLocation folderUid. */
        public folderUid: Uint8Array;

        /** SharedFolderFolderRecordLocation recordUid. */
        public recordUid: Uint8Array;

        /**
         * Creates a new SharedFolderFolderRecordLocation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderFolderRecordLocation instance
         */
        public static create(properties?: Tokens.ISharedFolderFolderRecordLocation): Tokens.SharedFolderFolderRecordLocation;

        /**
         * Encodes the specified SharedFolderFolderRecordLocation message. Does not implicitly {@link Tokens.SharedFolderFolderRecordLocation.verify|verify} messages.
         * @param message SharedFolderFolderRecordLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ISharedFolderFolderRecordLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderFolderRecordLocation message, length delimited. Does not implicitly {@link Tokens.SharedFolderFolderRecordLocation.verify|verify} messages.
         * @param message SharedFolderFolderRecordLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ISharedFolderFolderRecordLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderFolderRecordLocation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderFolderRecordLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.SharedFolderFolderRecordLocation;

        /**
         * Decodes a SharedFolderFolderRecordLocation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderFolderRecordLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.SharedFolderFolderRecordLocation;

        /**
         * Verifies a SharedFolderFolderRecordLocation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderFolderRecordLocation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderFolderRecordLocation
         */
        public static fromObject(object: { [k: string]: any }): Tokens.SharedFolderFolderRecordLocation;

        /**
         * Creates a plain object from a SharedFolderFolderRecordLocation message. Also converts values to other types if specified.
         * @param message SharedFolderFolderRecordLocation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.SharedFolderFolderRecordLocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderFolderRecordLocation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TeamLocation. */
    interface ITeamLocation {

        /** TeamLocation teamUid */
        teamUid?: (Uint8Array|null);

        /** TeamLocation lastSyncRevision */
        lastSyncRevision?: (number|Long|null);
    }

    /** Represents a TeamLocation. */
    class TeamLocation implements ITeamLocation {

        /**
         * Constructs a new TeamLocation.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.ITeamLocation);

        /** TeamLocation teamUid. */
        public teamUid: Uint8Array;

        /** TeamLocation lastSyncRevision. */
        public lastSyncRevision: (number|Long);

        /**
         * Creates a new TeamLocation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TeamLocation instance
         */
        public static create(properties?: Tokens.ITeamLocation): Tokens.TeamLocation;

        /**
         * Encodes the specified TeamLocation message. Does not implicitly {@link Tokens.TeamLocation.verify|verify} messages.
         * @param message TeamLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.ITeamLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TeamLocation message, length delimited. Does not implicitly {@link Tokens.TeamLocation.verify|verify} messages.
         * @param message TeamLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.ITeamLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TeamLocation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.TeamLocation;

        /**
         * Decodes a TeamLocation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TeamLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.TeamLocation;

        /**
         * Verifies a TeamLocation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TeamLocation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TeamLocation
         */
        public static fromObject(object: { [k: string]: any }): Tokens.TeamLocation;

        /**
         * Creates a plain object from a TeamLocation message. Also converts values to other types if specified.
         * @param message TeamLocation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.TeamLocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TeamLocation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserAuthHashLocation. */
    interface IUserAuthHashLocation {

        /** UserAuthHashLocation userAuthHashUid */
        userAuthHashUid?: (Uint8Array|null);

        /** UserAuthHashLocation lastSyncRevision */
        lastSyncRevision?: (number|Long|null);
    }

    /** Represents a UserAuthHashLocation. */
    class UserAuthHashLocation implements IUserAuthHashLocation {

        /**
         * Constructs a new UserAuthHashLocation.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IUserAuthHashLocation);

        /** UserAuthHashLocation userAuthHashUid. */
        public userAuthHashUid: Uint8Array;

        /** UserAuthHashLocation lastSyncRevision. */
        public lastSyncRevision: (number|Long);

        /**
         * Creates a new UserAuthHashLocation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserAuthHashLocation instance
         */
        public static create(properties?: Tokens.IUserAuthHashLocation): Tokens.UserAuthHashLocation;

        /**
         * Encodes the specified UserAuthHashLocation message. Does not implicitly {@link Tokens.UserAuthHashLocation.verify|verify} messages.
         * @param message UserAuthHashLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IUserAuthHashLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserAuthHashLocation message, length delimited. Does not implicitly {@link Tokens.UserAuthHashLocation.verify|verify} messages.
         * @param message UserAuthHashLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IUserAuthHashLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserAuthHashLocation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserAuthHashLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.UserAuthHashLocation;

        /**
         * Decodes a UserAuthHashLocation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserAuthHashLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.UserAuthHashLocation;

        /**
         * Verifies a UserAuthHashLocation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserAuthHashLocation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserAuthHashLocation
         */
        public static fromObject(object: { [k: string]: any }): Tokens.UserAuthHashLocation;

        /**
         * Creates a plain object from a UserAuthHashLocation message. Also converts values to other types if specified.
         * @param message UserAuthHashLocation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.UserAuthHashLocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserAuthHashLocation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FolderRecordLocation. */
    interface IFolderRecordLocation {

        /** FolderRecordLocation folderUid */
        folderUid?: (Uint8Array|null);

        /** FolderRecordLocation recordUid */
        recordUid?: (Uint8Array|null);

        /** FolderRecordLocation lastSyncRevision */
        lastSyncRevision?: (number|Long|null);
    }

    /** Represents a FolderRecordLocation. */
    class FolderRecordLocation implements IFolderRecordLocation {

        /**
         * Constructs a new FolderRecordLocation.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IFolderRecordLocation);

        /** FolderRecordLocation folderUid. */
        public folderUid: Uint8Array;

        /** FolderRecordLocation recordUid. */
        public recordUid: Uint8Array;

        /** FolderRecordLocation lastSyncRevision. */
        public lastSyncRevision: (number|Long);

        /**
         * Creates a new FolderRecordLocation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FolderRecordLocation instance
         */
        public static create(properties?: Tokens.IFolderRecordLocation): Tokens.FolderRecordLocation;

        /**
         * Encodes the specified FolderRecordLocation message. Does not implicitly {@link Tokens.FolderRecordLocation.verify|verify} messages.
         * @param message FolderRecordLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IFolderRecordLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FolderRecordLocation message, length delimited. Does not implicitly {@link Tokens.FolderRecordLocation.verify|verify} messages.
         * @param message FolderRecordLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IFolderRecordLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FolderRecordLocation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FolderRecordLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.FolderRecordLocation;

        /**
         * Decodes a FolderRecordLocation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FolderRecordLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.FolderRecordLocation;

        /**
         * Verifies a FolderRecordLocation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FolderRecordLocation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FolderRecordLocation
         */
        public static fromObject(object: { [k: string]: any }): Tokens.FolderRecordLocation;

        /**
         * Creates a plain object from a FolderRecordLocation message. Also converts values to other types if specified.
         * @param message FolderRecordLocation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.FolderRecordLocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FolderRecordLocation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordLinkLocation. */
    interface IRecordLinkLocation {

        /** RecordLinkLocation parentRecordUid */
        parentRecordUid?: (Uint8Array|null);

        /** RecordLinkLocation childRecordUid */
        childRecordUid?: (Uint8Array|null);

        /** RecordLinkLocation lastSyncRevision */
        lastSyncRevision?: (number|Long|null);
    }

    /** Represents a RecordLinkLocation. */
    class RecordLinkLocation implements IRecordLinkLocation {

        /**
         * Constructs a new RecordLinkLocation.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IRecordLinkLocation);

        /** RecordLinkLocation parentRecordUid. */
        public parentRecordUid: Uint8Array;

        /** RecordLinkLocation childRecordUid. */
        public childRecordUid: Uint8Array;

        /** RecordLinkLocation lastSyncRevision. */
        public lastSyncRevision: (number|Long);

        /**
         * Creates a new RecordLinkLocation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordLinkLocation instance
         */
        public static create(properties?: Tokens.IRecordLinkLocation): Tokens.RecordLinkLocation;

        /**
         * Encodes the specified RecordLinkLocation message. Does not implicitly {@link Tokens.RecordLinkLocation.verify|verify} messages.
         * @param message RecordLinkLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IRecordLinkLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordLinkLocation message, length delimited. Does not implicitly {@link Tokens.RecordLinkLocation.verify|verify} messages.
         * @param message RecordLinkLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IRecordLinkLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordLinkLocation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordLinkLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.RecordLinkLocation;

        /**
         * Decodes a RecordLinkLocation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordLinkLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.RecordLinkLocation;

        /**
         * Verifies a RecordLinkLocation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordLinkLocation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordLinkLocation
         */
        public static fromObject(object: { [k: string]: any }): Tokens.RecordLinkLocation;

        /**
         * Creates a plain object from a RecordLinkLocation message. Also converts values to other types if specified.
         * @param message RecordLinkLocation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.RecordLinkLocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordLinkLocation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KsmLocation. */
    interface IKsmLocation {

        /** KsmLocation appRecordUid */
        appRecordUid?: (Uint8Array|null);

        /** KsmLocation detailUid */
        detailUid?: (Uint8Array|null);

        /** KsmLocation lastSyncRevision */
        lastSyncRevision?: (number|Long|null);
    }

    /** Represents a KsmLocation. */
    class KsmLocation implements IKsmLocation {

        /**
         * Constructs a new KsmLocation.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IKsmLocation);

        /** KsmLocation appRecordUid. */
        public appRecordUid: Uint8Array;

        /** KsmLocation detailUid. */
        public detailUid: Uint8Array;

        /** KsmLocation lastSyncRevision. */
        public lastSyncRevision: (number|Long);

        /**
         * Creates a new KsmLocation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KsmLocation instance
         */
        public static create(properties?: Tokens.IKsmLocation): Tokens.KsmLocation;

        /**
         * Encodes the specified KsmLocation message. Does not implicitly {@link Tokens.KsmLocation.verify|verify} messages.
         * @param message KsmLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IKsmLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KsmLocation message, length delimited. Does not implicitly {@link Tokens.KsmLocation.verify|verify} messages.
         * @param message KsmLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IKsmLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KsmLocation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KsmLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.KsmLocation;

        /**
         * Decodes a KsmLocation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KsmLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.KsmLocation;

        /**
         * Verifies a KsmLocation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KsmLocation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KsmLocation
         */
        public static fromObject(object: { [k: string]: any }): Tokens.KsmLocation;

        /**
         * Creates a plain object from a KsmLocation message. Also converts values to other types if specified.
         * @param message KsmLocation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.KsmLocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KsmLocation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FolderSharedFolderLocation. */
    interface IFolderSharedFolderLocation {

        /** FolderSharedFolderLocation folderUid */
        folderUid?: (Uint8Array|null);

        /** FolderSharedFolderLocation sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** FolderSharedFolderLocation lastSyncRevision */
        lastSyncRevision?: (number|Long|null);
    }

    /** Represents a FolderSharedFolderLocation. */
    class FolderSharedFolderLocation implements IFolderSharedFolderLocation {

        /**
         * Constructs a new FolderSharedFolderLocation.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IFolderSharedFolderLocation);

        /** FolderSharedFolderLocation folderUid. */
        public folderUid: Uint8Array;

        /** FolderSharedFolderLocation sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** FolderSharedFolderLocation lastSyncRevision. */
        public lastSyncRevision: (number|Long);

        /**
         * Creates a new FolderSharedFolderLocation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FolderSharedFolderLocation instance
         */
        public static create(properties?: Tokens.IFolderSharedFolderLocation): Tokens.FolderSharedFolderLocation;

        /**
         * Encodes the specified FolderSharedFolderLocation message. Does not implicitly {@link Tokens.FolderSharedFolderLocation.verify|verify} messages.
         * @param message FolderSharedFolderLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IFolderSharedFolderLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FolderSharedFolderLocation message, length delimited. Does not implicitly {@link Tokens.FolderSharedFolderLocation.verify|verify} messages.
         * @param message FolderSharedFolderLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IFolderSharedFolderLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FolderSharedFolderLocation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FolderSharedFolderLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.FolderSharedFolderLocation;

        /**
         * Decodes a FolderSharedFolderLocation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FolderSharedFolderLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.FolderSharedFolderLocation;

        /**
         * Verifies a FolderSharedFolderLocation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FolderSharedFolderLocation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FolderSharedFolderLocation
         */
        public static fromObject(object: { [k: string]: any }): Tokens.FolderSharedFolderLocation;

        /**
         * Creates a plain object from a FolderSharedFolderLocation message. Also converts values to other types if specified.
         * @param message FolderSharedFolderLocation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.FolderSharedFolderLocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FolderSharedFolderLocation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShareInvitationLocation. */
    interface IShareInvitationLocation {

        /** ShareInvitationLocation username */
        username?: (string|null);
    }

    /** Represents a ShareInvitationLocation. */
    class ShareInvitationLocation implements IShareInvitationLocation {

        /**
         * Constructs a new ShareInvitationLocation.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IShareInvitationLocation);

        /** ShareInvitationLocation username. */
        public username: string;

        /**
         * Creates a new ShareInvitationLocation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShareInvitationLocation instance
         */
        public static create(properties?: Tokens.IShareInvitationLocation): Tokens.ShareInvitationLocation;

        /**
         * Encodes the specified ShareInvitationLocation message. Does not implicitly {@link Tokens.ShareInvitationLocation.verify|verify} messages.
         * @param message ShareInvitationLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IShareInvitationLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShareInvitationLocation message, length delimited. Does not implicitly {@link Tokens.ShareInvitationLocation.verify|verify} messages.
         * @param message ShareInvitationLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IShareInvitationLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShareInvitationLocation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShareInvitationLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.ShareInvitationLocation;

        /**
         * Decodes a ShareInvitationLocation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShareInvitationLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.ShareInvitationLocation;

        /**
         * Verifies a ShareInvitationLocation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShareInvitationLocation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShareInvitationLocation
         */
        public static fromObject(object: { [k: string]: any }): Tokens.ShareInvitationLocation;

        /**
         * Creates a plain object from a ShareInvitationLocation message. Also converts values to other types if specified.
         * @param message ShareInvitationLocation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.ShareInvitationLocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShareInvitationLocation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserLocation. */
    interface IUserLocation {

        /** UserLocation userId */
        userId?: (number|null);
    }

    /** Represents a UserLocation. */
    class UserLocation implements IUserLocation {

        /**
         * Constructs a new UserLocation.
         * @param [properties] Properties to set
         */
        constructor(properties?: Tokens.IUserLocation);

        /** UserLocation userId. */
        public userId: number;

        /**
         * Creates a new UserLocation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserLocation instance
         */
        public static create(properties?: Tokens.IUserLocation): Tokens.UserLocation;

        /**
         * Encodes the specified UserLocation message. Does not implicitly {@link Tokens.UserLocation.verify|verify} messages.
         * @param message UserLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Tokens.IUserLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserLocation message, length delimited. Does not implicitly {@link Tokens.UserLocation.verify|verify} messages.
         * @param message UserLocation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Tokens.IUserLocation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserLocation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tokens.UserLocation;

        /**
         * Decodes a UserLocation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tokens.UserLocation;

        /**
         * Verifies a UserLocation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserLocation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserLocation
         */
        public static fromObject(object: { [k: string]: any }): Tokens.UserLocation;

        /**
         * Creates a plain object from a UserLocation message. Also converts values to other types if specified.
         * @param message UserLocation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Tokens.UserLocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserLocation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace ExternalService. */
export namespace ExternalService {

    /** Properties of a SaveSettingsRequest. */
    interface ISaveSettingsRequest {

        /** SaveSettingsRequest enterpriseId */
        enterpriseId?: (number|null);

        /** SaveSettingsRequest certificate */
        certificate?: (Uint8Array|null);

        /** SaveSettingsRequest password */
        password?: (string|null);

        /** SaveSettingsRequest directoryUrl */
        directoryUrl?: (string|null);
    }

    /** Represents a SaveSettingsRequest. */
    class SaveSettingsRequest implements ISaveSettingsRequest {

        /**
         * Constructs a new SaveSettingsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: ExternalService.ISaveSettingsRequest);

        /** SaveSettingsRequest enterpriseId. */
        public enterpriseId: number;

        /** SaveSettingsRequest certificate. */
        public certificate: Uint8Array;

        /** SaveSettingsRequest password. */
        public password: string;

        /** SaveSettingsRequest directoryUrl. */
        public directoryUrl: string;

        /**
         * Creates a new SaveSettingsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SaveSettingsRequest instance
         */
        public static create(properties?: ExternalService.ISaveSettingsRequest): ExternalService.SaveSettingsRequest;

        /**
         * Encodes the specified SaveSettingsRequest message. Does not implicitly {@link ExternalService.SaveSettingsRequest.verify|verify} messages.
         * @param message SaveSettingsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ExternalService.ISaveSettingsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SaveSettingsRequest message, length delimited. Does not implicitly {@link ExternalService.SaveSettingsRequest.verify|verify} messages.
         * @param message SaveSettingsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ExternalService.ISaveSettingsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SaveSettingsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SaveSettingsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ExternalService.SaveSettingsRequest;

        /**
         * Decodes a SaveSettingsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SaveSettingsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ExternalService.SaveSettingsRequest;

        /**
         * Verifies a SaveSettingsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SaveSettingsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SaveSettingsRequest
         */
        public static fromObject(object: { [k: string]: any }): ExternalService.SaveSettingsRequest;

        /**
         * Creates a plain object from a SaveSettingsRequest message. Also converts values to other types if specified.
         * @param message SaveSettingsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ExternalService.SaveSettingsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SaveSettingsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetUsersRequest. */
    interface IGetUsersRequest {

        /** GetUsersRequest field */
        field?: (string|null);

        /** GetUsersRequest value */
        value?: (string|null);
    }

    /** Represents a GetUsersRequest. */
    class GetUsersRequest implements IGetUsersRequest {

        /**
         * Constructs a new GetUsersRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: ExternalService.IGetUsersRequest);

        /** GetUsersRequest field. */
        public field: string;

        /** GetUsersRequest value. */
        public value: string;

        /**
         * Creates a new GetUsersRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetUsersRequest instance
         */
        public static create(properties?: ExternalService.IGetUsersRequest): ExternalService.GetUsersRequest;

        /**
         * Encodes the specified GetUsersRequest message. Does not implicitly {@link ExternalService.GetUsersRequest.verify|verify} messages.
         * @param message GetUsersRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ExternalService.IGetUsersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetUsersRequest message, length delimited. Does not implicitly {@link ExternalService.GetUsersRequest.verify|verify} messages.
         * @param message GetUsersRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ExternalService.IGetUsersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetUsersRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetUsersRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ExternalService.GetUsersRequest;

        /**
         * Decodes a GetUsersRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetUsersRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ExternalService.GetUsersRequest;

        /**
         * Verifies a GetUsersRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetUsersRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetUsersRequest
         */
        public static fromObject(object: { [k: string]: any }): ExternalService.GetUsersRequest;

        /**
         * Creates a plain object from a GetUsersRequest message. Also converts values to other types if specified.
         * @param message GetUsersRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ExternalService.GetUsersRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetUsersRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** UserStatus enum. */
    enum UserStatus {
        NEW = 0,
        INVITED = 1,
        ACTIVE = 2,
        TAKEN = 3
    }

    /** LockStatus enum. */
    enum LockStatus {
        UNLOCKED = 0,
        LOCKED = 1,
        DISABLED = 2
    }

    /** Properties of a User. */
    interface IUser {

        /** User email */
        email?: (string|null);

        /** User name */
        name?: (string|null);

        /** User status */
        status?: (ExternalService.UserStatus|null);

        /** User lockStatus */
        lockStatus?: (ExternalService.LockStatus|null);
    }

    /** Represents a User. */
    class User implements IUser {

        /**
         * Constructs a new User.
         * @param [properties] Properties to set
         */
        constructor(properties?: ExternalService.IUser);

        /** User email. */
        public email: string;

        /** User name. */
        public name: string;

        /** User status. */
        public status: ExternalService.UserStatus;

        /** User lockStatus. */
        public lockStatus: ExternalService.LockStatus;

        /**
         * Creates a new User instance using the specified properties.
         * @param [properties] Properties to set
         * @returns User instance
         */
        public static create(properties?: ExternalService.IUser): ExternalService.User;

        /**
         * Encodes the specified User message. Does not implicitly {@link ExternalService.User.verify|verify} messages.
         * @param message User message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ExternalService.IUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified User message, length delimited. Does not implicitly {@link ExternalService.User.verify|verify} messages.
         * @param message User message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ExternalService.IUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a User message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns User
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ExternalService.User;

        /**
         * Decodes a User message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns User
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ExternalService.User;

        /**
         * Verifies a User message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a User message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns User
         */
        public static fromObject(object: { [k: string]: any }): ExternalService.User;

        /**
         * Creates a plain object from a User message. Also converts values to other types if specified.
         * @param message User
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ExternalService.User, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this User to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetUsersResponse. */
    interface IGetUsersResponse {

        /** GetUsersResponse users */
        users?: (ExternalService.IUser[]|null);
    }

    /** Represents a GetUsersResponse. */
    class GetUsersResponse implements IGetUsersResponse {

        /**
         * Constructs a new GetUsersResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: ExternalService.IGetUsersResponse);

        /** GetUsersResponse users. */
        public users: ExternalService.IUser[];

        /**
         * Creates a new GetUsersResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetUsersResponse instance
         */
        public static create(properties?: ExternalService.IGetUsersResponse): ExternalService.GetUsersResponse;

        /**
         * Encodes the specified GetUsersResponse message. Does not implicitly {@link ExternalService.GetUsersResponse.verify|verify} messages.
         * @param message GetUsersResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ExternalService.IGetUsersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetUsersResponse message, length delimited. Does not implicitly {@link ExternalService.GetUsersResponse.verify|verify} messages.
         * @param message GetUsersResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ExternalService.IGetUsersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetUsersResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetUsersResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ExternalService.GetUsersResponse;

        /**
         * Decodes a GetUsersResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetUsersResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ExternalService.GetUsersResponse;

        /**
         * Verifies a GetUsersResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetUsersResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetUsersResponse
         */
        public static fromObject(object: { [k: string]: any }): ExternalService.GetUsersResponse;

        /**
         * Creates a plain object from a GetUsersResponse message. Also converts values to other types if specified.
         * @param message GetUsersResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ExternalService.GetUsersResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetUsersResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Folder. */
export namespace Folder {

    /** RecordType enum. */
    enum RecordType {
        password = 0
    }

    /** FolderType enum. */
    enum FolderType {
        default_folder = 0,
        user_folder = 1,
        shared_folder = 2,
        shared_folder_folder = 3
    }

    /** EncryptedKeyType enum. */
    enum EncryptedKeyType {
        no_key = 0,
        encrypted_by_data_key = 1,
        encrypted_by_public_key = 2
    }

    /** Properties of an EncryptedDataKey. */
    interface IEncryptedDataKey {

        /** EncryptedDataKey encryptedKey */
        encryptedKey?: (Uint8Array|null);

        /** EncryptedDataKey encryptedKeyType */
        encryptedKeyType?: (Folder.EncryptedKeyType|null);
    }

    /** Represents an EncryptedDataKey. */
    class EncryptedDataKey implements IEncryptedDataKey {

        /**
         * Constructs a new EncryptedDataKey.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.IEncryptedDataKey);

        /** EncryptedDataKey encryptedKey. */
        public encryptedKey: Uint8Array;

        /** EncryptedDataKey encryptedKeyType. */
        public encryptedKeyType: Folder.EncryptedKeyType;

        /**
         * Creates a new EncryptedDataKey instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EncryptedDataKey instance
         */
        public static create(properties?: Folder.IEncryptedDataKey): Folder.EncryptedDataKey;

        /**
         * Encodes the specified EncryptedDataKey message. Does not implicitly {@link Folder.EncryptedDataKey.verify|verify} messages.
         * @param message EncryptedDataKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.IEncryptedDataKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EncryptedDataKey message, length delimited. Does not implicitly {@link Folder.EncryptedDataKey.verify|verify} messages.
         * @param message EncryptedDataKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.IEncryptedDataKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EncryptedDataKey message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EncryptedDataKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.EncryptedDataKey;

        /**
         * Decodes an EncryptedDataKey message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EncryptedDataKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.EncryptedDataKey;

        /**
         * Verifies an EncryptedDataKey message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EncryptedDataKey message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EncryptedDataKey
         */
        public static fromObject(object: { [k: string]: any }): Folder.EncryptedDataKey;

        /**
         * Creates a plain object from an EncryptedDataKey message. Also converts values to other types if specified.
         * @param message EncryptedDataKey
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.EncryptedDataKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EncryptedDataKey to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderRecordData. */
    interface ISharedFolderRecordData {

        /** SharedFolderRecordData folderUid */
        folderUid?: (Uint8Array|null);

        /** SharedFolderRecordData recordUid */
        recordUid?: (Uint8Array|null);

        /** SharedFolderRecordData userId */
        userId?: (number|null);

        /** SharedFolderRecordData encryptedDataKey */
        encryptedDataKey?: (Folder.IEncryptedDataKey[]|null);
    }

    /** Represents a SharedFolderRecordData. */
    class SharedFolderRecordData implements ISharedFolderRecordData {

        /**
         * Constructs a new SharedFolderRecordData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.ISharedFolderRecordData);

        /** SharedFolderRecordData folderUid. */
        public folderUid: Uint8Array;

        /** SharedFolderRecordData recordUid. */
        public recordUid: Uint8Array;

        /** SharedFolderRecordData userId. */
        public userId: number;

        /** SharedFolderRecordData encryptedDataKey. */
        public encryptedDataKey: Folder.IEncryptedDataKey[];

        /**
         * Creates a new SharedFolderRecordData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderRecordData instance
         */
        public static create(properties?: Folder.ISharedFolderRecordData): Folder.SharedFolderRecordData;

        /**
         * Encodes the specified SharedFolderRecordData message. Does not implicitly {@link Folder.SharedFolderRecordData.verify|verify} messages.
         * @param message SharedFolderRecordData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.ISharedFolderRecordData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderRecordData message, length delimited. Does not implicitly {@link Folder.SharedFolderRecordData.verify|verify} messages.
         * @param message SharedFolderRecordData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.ISharedFolderRecordData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderRecordData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderRecordData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.SharedFolderRecordData;

        /**
         * Decodes a SharedFolderRecordData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderRecordData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.SharedFolderRecordData;

        /**
         * Verifies a SharedFolderRecordData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderRecordData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderRecordData
         */
        public static fromObject(object: { [k: string]: any }): Folder.SharedFolderRecordData;

        /**
         * Creates a plain object from a SharedFolderRecordData message. Also converts values to other types if specified.
         * @param message SharedFolderRecordData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.SharedFolderRecordData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderRecordData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderRecordDataList. */
    interface ISharedFolderRecordDataList {

        /** SharedFolderRecordDataList sharedFolderRecordData */
        sharedFolderRecordData?: (Folder.ISharedFolderRecordData[]|null);
    }

    /** Represents a SharedFolderRecordDataList. */
    class SharedFolderRecordDataList implements ISharedFolderRecordDataList {

        /**
         * Constructs a new SharedFolderRecordDataList.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.ISharedFolderRecordDataList);

        /** SharedFolderRecordDataList sharedFolderRecordData. */
        public sharedFolderRecordData: Folder.ISharedFolderRecordData[];

        /**
         * Creates a new SharedFolderRecordDataList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderRecordDataList instance
         */
        public static create(properties?: Folder.ISharedFolderRecordDataList): Folder.SharedFolderRecordDataList;

        /**
         * Encodes the specified SharedFolderRecordDataList message. Does not implicitly {@link Folder.SharedFolderRecordDataList.verify|verify} messages.
         * @param message SharedFolderRecordDataList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.ISharedFolderRecordDataList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderRecordDataList message, length delimited. Does not implicitly {@link Folder.SharedFolderRecordDataList.verify|verify} messages.
         * @param message SharedFolderRecordDataList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.ISharedFolderRecordDataList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderRecordDataList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderRecordDataList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.SharedFolderRecordDataList;

        /**
         * Decodes a SharedFolderRecordDataList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderRecordDataList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.SharedFolderRecordDataList;

        /**
         * Verifies a SharedFolderRecordDataList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderRecordDataList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderRecordDataList
         */
        public static fromObject(object: { [k: string]: any }): Folder.SharedFolderRecordDataList;

        /**
         * Creates a plain object from a SharedFolderRecordDataList message. Also converts values to other types if specified.
         * @param message SharedFolderRecordDataList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.SharedFolderRecordDataList, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderRecordDataList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderRecordFix. */
    interface ISharedFolderRecordFix {

        /** SharedFolderRecordFix folderUid */
        folderUid?: (Uint8Array|null);

        /** SharedFolderRecordFix recordUid */
        recordUid?: (Uint8Array|null);

        /** SharedFolderRecordFix encryptedRecordFolderKey */
        encryptedRecordFolderKey?: (Uint8Array|null);
    }

    /** Represents a SharedFolderRecordFix. */
    class SharedFolderRecordFix implements ISharedFolderRecordFix {

        /**
         * Constructs a new SharedFolderRecordFix.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.ISharedFolderRecordFix);

        /** SharedFolderRecordFix folderUid. */
        public folderUid: Uint8Array;

        /** SharedFolderRecordFix recordUid. */
        public recordUid: Uint8Array;

        /** SharedFolderRecordFix encryptedRecordFolderKey. */
        public encryptedRecordFolderKey: Uint8Array;

        /**
         * Creates a new SharedFolderRecordFix instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderRecordFix instance
         */
        public static create(properties?: Folder.ISharedFolderRecordFix): Folder.SharedFolderRecordFix;

        /**
         * Encodes the specified SharedFolderRecordFix message. Does not implicitly {@link Folder.SharedFolderRecordFix.verify|verify} messages.
         * @param message SharedFolderRecordFix message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.ISharedFolderRecordFix, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderRecordFix message, length delimited. Does not implicitly {@link Folder.SharedFolderRecordFix.verify|verify} messages.
         * @param message SharedFolderRecordFix message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.ISharedFolderRecordFix, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderRecordFix message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderRecordFix
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.SharedFolderRecordFix;

        /**
         * Decodes a SharedFolderRecordFix message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderRecordFix
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.SharedFolderRecordFix;

        /**
         * Verifies a SharedFolderRecordFix message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderRecordFix message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderRecordFix
         */
        public static fromObject(object: { [k: string]: any }): Folder.SharedFolderRecordFix;

        /**
         * Creates a plain object from a SharedFolderRecordFix message. Also converts values to other types if specified.
         * @param message SharedFolderRecordFix
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.SharedFolderRecordFix, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderRecordFix to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderRecordFixList. */
    interface ISharedFolderRecordFixList {

        /** SharedFolderRecordFixList sharedFolderRecordFix */
        sharedFolderRecordFix?: (Folder.ISharedFolderRecordFix[]|null);
    }

    /** Represents a SharedFolderRecordFixList. */
    class SharedFolderRecordFixList implements ISharedFolderRecordFixList {

        /**
         * Constructs a new SharedFolderRecordFixList.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.ISharedFolderRecordFixList);

        /** SharedFolderRecordFixList sharedFolderRecordFix. */
        public sharedFolderRecordFix: Folder.ISharedFolderRecordFix[];

        /**
         * Creates a new SharedFolderRecordFixList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderRecordFixList instance
         */
        public static create(properties?: Folder.ISharedFolderRecordFixList): Folder.SharedFolderRecordFixList;

        /**
         * Encodes the specified SharedFolderRecordFixList message. Does not implicitly {@link Folder.SharedFolderRecordFixList.verify|verify} messages.
         * @param message SharedFolderRecordFixList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.ISharedFolderRecordFixList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderRecordFixList message, length delimited. Does not implicitly {@link Folder.SharedFolderRecordFixList.verify|verify} messages.
         * @param message SharedFolderRecordFixList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.ISharedFolderRecordFixList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderRecordFixList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderRecordFixList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.SharedFolderRecordFixList;

        /**
         * Decodes a SharedFolderRecordFixList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderRecordFixList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.SharedFolderRecordFixList;

        /**
         * Verifies a SharedFolderRecordFixList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderRecordFixList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderRecordFixList
         */
        public static fromObject(object: { [k: string]: any }): Folder.SharedFolderRecordFixList;

        /**
         * Creates a plain object from a SharedFolderRecordFixList message. Also converts values to other types if specified.
         * @param message SharedFolderRecordFixList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.SharedFolderRecordFixList, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderRecordFixList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordRequest. */
    interface IRecordRequest {

        /** RecordRequest recordUid */
        recordUid?: (Uint8Array|null);

        /** RecordRequest recordType */
        recordType?: (Folder.RecordType|null);

        /** RecordRequest recordData */
        recordData?: (Uint8Array|null);

        /** RecordRequest encryptedRecordKey */
        encryptedRecordKey?: (Uint8Array|null);

        /** RecordRequest folderType */
        folderType?: (Folder.FolderType|null);

        /** RecordRequest howLongAgo */
        howLongAgo?: (number|Long|null);

        /** RecordRequest folderUid */
        folderUid?: (Uint8Array|null);

        /** RecordRequest encryptedRecordFolderKey */
        encryptedRecordFolderKey?: (Uint8Array|null);

        /** RecordRequest extra */
        extra?: (Uint8Array|null);

        /** RecordRequest nonSharedData */
        nonSharedData?: (Uint8Array|null);

        /** RecordRequest fileIds */
        fileIds?: ((number|Long)[]|null);
    }

    /** Represents a RecordRequest. */
    class RecordRequest implements IRecordRequest {

        /**
         * Constructs a new RecordRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.IRecordRequest);

        /** RecordRequest recordUid. */
        public recordUid: Uint8Array;

        /** RecordRequest recordType. */
        public recordType: Folder.RecordType;

        /** RecordRequest recordData. */
        public recordData: Uint8Array;

        /** RecordRequest encryptedRecordKey. */
        public encryptedRecordKey: Uint8Array;

        /** RecordRequest folderType. */
        public folderType: Folder.FolderType;

        /** RecordRequest howLongAgo. */
        public howLongAgo: (number|Long);

        /** RecordRequest folderUid. */
        public folderUid: Uint8Array;

        /** RecordRequest encryptedRecordFolderKey. */
        public encryptedRecordFolderKey: Uint8Array;

        /** RecordRequest extra. */
        public extra: Uint8Array;

        /** RecordRequest nonSharedData. */
        public nonSharedData: Uint8Array;

        /** RecordRequest fileIds. */
        public fileIds: (number|Long)[];

        /**
         * Creates a new RecordRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordRequest instance
         */
        public static create(properties?: Folder.IRecordRequest): Folder.RecordRequest;

        /**
         * Encodes the specified RecordRequest message. Does not implicitly {@link Folder.RecordRequest.verify|verify} messages.
         * @param message RecordRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.IRecordRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordRequest message, length delimited. Does not implicitly {@link Folder.RecordRequest.verify|verify} messages.
         * @param message RecordRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.IRecordRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.RecordRequest;

        /**
         * Decodes a RecordRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.RecordRequest;

        /**
         * Verifies a RecordRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordRequest
         */
        public static fromObject(object: { [k: string]: any }): Folder.RecordRequest;

        /**
         * Creates a plain object from a RecordRequest message. Also converts values to other types if specified.
         * @param message RecordRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.RecordRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordResponse. */
    interface IRecordResponse {

        /** RecordResponse recordUid */
        recordUid?: (Uint8Array|null);

        /** RecordResponse revision */
        revision?: (number|Long|null);

        /** RecordResponse status */
        status?: (string|null);
    }

    /** Represents a RecordResponse. */
    class RecordResponse implements IRecordResponse {

        /**
         * Constructs a new RecordResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.IRecordResponse);

        /** RecordResponse recordUid. */
        public recordUid: Uint8Array;

        /** RecordResponse revision. */
        public revision: (number|Long);

        /** RecordResponse status. */
        public status: string;

        /**
         * Creates a new RecordResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordResponse instance
         */
        public static create(properties?: Folder.IRecordResponse): Folder.RecordResponse;

        /**
         * Encodes the specified RecordResponse message. Does not implicitly {@link Folder.RecordResponse.verify|verify} messages.
         * @param message RecordResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.IRecordResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordResponse message, length delimited. Does not implicitly {@link Folder.RecordResponse.verify|verify} messages.
         * @param message RecordResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.IRecordResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.RecordResponse;

        /**
         * Decodes a RecordResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.RecordResponse;

        /**
         * Verifies a RecordResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordResponse
         */
        public static fromObject(object: { [k: string]: any }): Folder.RecordResponse;

        /**
         * Creates a plain object from a RecordResponse message. Also converts values to other types if specified.
         * @param message RecordResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.RecordResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderFields. */
    interface ISharedFolderFields {

        /** SharedFolderFields encryptedFolderName */
        encryptedFolderName?: (Uint8Array|null);

        /** SharedFolderFields manageUsers */
        manageUsers?: (boolean|null);

        /** SharedFolderFields manageRecords */
        manageRecords?: (boolean|null);

        /** SharedFolderFields canEdit */
        canEdit?: (boolean|null);

        /** SharedFolderFields canShare */
        canShare?: (boolean|null);
    }

    /** Represents a SharedFolderFields. */
    class SharedFolderFields implements ISharedFolderFields {

        /**
         * Constructs a new SharedFolderFields.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.ISharedFolderFields);

        /** SharedFolderFields encryptedFolderName. */
        public encryptedFolderName: Uint8Array;

        /** SharedFolderFields manageUsers. */
        public manageUsers: boolean;

        /** SharedFolderFields manageRecords. */
        public manageRecords: boolean;

        /** SharedFolderFields canEdit. */
        public canEdit: boolean;

        /** SharedFolderFields canShare. */
        public canShare: boolean;

        /**
         * Creates a new SharedFolderFields instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderFields instance
         */
        public static create(properties?: Folder.ISharedFolderFields): Folder.SharedFolderFields;

        /**
         * Encodes the specified SharedFolderFields message. Does not implicitly {@link Folder.SharedFolderFields.verify|verify} messages.
         * @param message SharedFolderFields message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.ISharedFolderFields, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderFields message, length delimited. Does not implicitly {@link Folder.SharedFolderFields.verify|verify} messages.
         * @param message SharedFolderFields message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.ISharedFolderFields, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderFields message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderFields
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.SharedFolderFields;

        /**
         * Decodes a SharedFolderFields message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderFields
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.SharedFolderFields;

        /**
         * Verifies a SharedFolderFields message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderFields message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderFields
         */
        public static fromObject(object: { [k: string]: any }): Folder.SharedFolderFields;

        /**
         * Creates a plain object from a SharedFolderFields message. Also converts values to other types if specified.
         * @param message SharedFolderFields
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.SharedFolderFields, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderFields to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderFolderFields. */
    interface ISharedFolderFolderFields {

        /** SharedFolderFolderFields sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);
    }

    /** Represents a SharedFolderFolderFields. */
    class SharedFolderFolderFields implements ISharedFolderFolderFields {

        /**
         * Constructs a new SharedFolderFolderFields.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.ISharedFolderFolderFields);

        /** SharedFolderFolderFields sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /**
         * Creates a new SharedFolderFolderFields instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderFolderFields instance
         */
        public static create(properties?: Folder.ISharedFolderFolderFields): Folder.SharedFolderFolderFields;

        /**
         * Encodes the specified SharedFolderFolderFields message. Does not implicitly {@link Folder.SharedFolderFolderFields.verify|verify} messages.
         * @param message SharedFolderFolderFields message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.ISharedFolderFolderFields, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderFolderFields message, length delimited. Does not implicitly {@link Folder.SharedFolderFolderFields.verify|verify} messages.
         * @param message SharedFolderFolderFields message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.ISharedFolderFolderFields, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderFolderFields message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderFolderFields
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.SharedFolderFolderFields;

        /**
         * Decodes a SharedFolderFolderFields message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderFolderFields
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.SharedFolderFolderFields;

        /**
         * Verifies a SharedFolderFolderFields message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderFolderFields message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderFolderFields
         */
        public static fromObject(object: { [k: string]: any }): Folder.SharedFolderFolderFields;

        /**
         * Creates a plain object from a SharedFolderFolderFields message. Also converts values to other types if specified.
         * @param message SharedFolderFolderFields
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.SharedFolderFolderFields, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderFolderFields to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FolderRequest. */
    interface IFolderRequest {

        /** FolderRequest folderUid */
        folderUid?: (Uint8Array|null);

        /** FolderRequest folderType */
        folderType?: (Folder.FolderType|null);

        /** FolderRequest parentFolderUid */
        parentFolderUid?: (Uint8Array|null);

        /** FolderRequest folderData */
        folderData?: (Uint8Array|null);

        /** FolderRequest encryptedFolderKey */
        encryptedFolderKey?: (Uint8Array|null);

        /** FolderRequest sharedFolderFields */
        sharedFolderFields?: (Folder.ISharedFolderFields|null);

        /** FolderRequest sharedFolderFolderFields */
        sharedFolderFolderFields?: (Folder.ISharedFolderFolderFields|null);
    }

    /** Represents a FolderRequest. */
    class FolderRequest implements IFolderRequest {

        /**
         * Constructs a new FolderRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.IFolderRequest);

        /** FolderRequest folderUid. */
        public folderUid: Uint8Array;

        /** FolderRequest folderType. */
        public folderType: Folder.FolderType;

        /** FolderRequest parentFolderUid. */
        public parentFolderUid: Uint8Array;

        /** FolderRequest folderData. */
        public folderData: Uint8Array;

        /** FolderRequest encryptedFolderKey. */
        public encryptedFolderKey: Uint8Array;

        /** FolderRequest sharedFolderFields. */
        public sharedFolderFields?: (Folder.ISharedFolderFields|null);

        /** FolderRequest sharedFolderFolderFields. */
        public sharedFolderFolderFields?: (Folder.ISharedFolderFolderFields|null);

        /**
         * Creates a new FolderRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FolderRequest instance
         */
        public static create(properties?: Folder.IFolderRequest): Folder.FolderRequest;

        /**
         * Encodes the specified FolderRequest message. Does not implicitly {@link Folder.FolderRequest.verify|verify} messages.
         * @param message FolderRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.IFolderRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FolderRequest message, length delimited. Does not implicitly {@link Folder.FolderRequest.verify|verify} messages.
         * @param message FolderRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.IFolderRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FolderRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FolderRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.FolderRequest;

        /**
         * Decodes a FolderRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FolderRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.FolderRequest;

        /**
         * Verifies a FolderRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FolderRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FolderRequest
         */
        public static fromObject(object: { [k: string]: any }): Folder.FolderRequest;

        /**
         * Creates a plain object from a FolderRequest message. Also converts values to other types if specified.
         * @param message FolderRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.FolderRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FolderRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FolderResponse. */
    interface IFolderResponse {

        /** FolderResponse folderUid */
        folderUid?: (Uint8Array|null);

        /** FolderResponse revision */
        revision?: (number|Long|null);

        /** FolderResponse status */
        status?: (string|null);
    }

    /** Represents a FolderResponse. */
    class FolderResponse implements IFolderResponse {

        /**
         * Constructs a new FolderResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.IFolderResponse);

        /** FolderResponse folderUid. */
        public folderUid: Uint8Array;

        /** FolderResponse revision. */
        public revision: (number|Long);

        /** FolderResponse status. */
        public status: string;

        /**
         * Creates a new FolderResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FolderResponse instance
         */
        public static create(properties?: Folder.IFolderResponse): Folder.FolderResponse;

        /**
         * Encodes the specified FolderResponse message. Does not implicitly {@link Folder.FolderResponse.verify|verify} messages.
         * @param message FolderResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.IFolderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FolderResponse message, length delimited. Does not implicitly {@link Folder.FolderResponse.verify|verify} messages.
         * @param message FolderResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.IFolderResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FolderResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FolderResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.FolderResponse;

        /**
         * Decodes a FolderResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FolderResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.FolderResponse;

        /**
         * Verifies a FolderResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FolderResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FolderResponse
         */
        public static fromObject(object: { [k: string]: any }): Folder.FolderResponse;

        /**
         * Creates a plain object from a FolderResponse message. Also converts values to other types if specified.
         * @param message FolderResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.FolderResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FolderResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ImportFolderRecordRequest. */
    interface IImportFolderRecordRequest {

        /** ImportFolderRecordRequest folderRequest */
        folderRequest?: (Folder.IFolderRequest[]|null);

        /** ImportFolderRecordRequest recordRequest */
        recordRequest?: (Folder.IRecordRequest[]|null);
    }

    /** Represents an ImportFolderRecordRequest. */
    class ImportFolderRecordRequest implements IImportFolderRecordRequest {

        /**
         * Constructs a new ImportFolderRecordRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.IImportFolderRecordRequest);

        /** ImportFolderRecordRequest folderRequest. */
        public folderRequest: Folder.IFolderRequest[];

        /** ImportFolderRecordRequest recordRequest. */
        public recordRequest: Folder.IRecordRequest[];

        /**
         * Creates a new ImportFolderRecordRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ImportFolderRecordRequest instance
         */
        public static create(properties?: Folder.IImportFolderRecordRequest): Folder.ImportFolderRecordRequest;

        /**
         * Encodes the specified ImportFolderRecordRequest message. Does not implicitly {@link Folder.ImportFolderRecordRequest.verify|verify} messages.
         * @param message ImportFolderRecordRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.IImportFolderRecordRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ImportFolderRecordRequest message, length delimited. Does not implicitly {@link Folder.ImportFolderRecordRequest.verify|verify} messages.
         * @param message ImportFolderRecordRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.IImportFolderRecordRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ImportFolderRecordRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ImportFolderRecordRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.ImportFolderRecordRequest;

        /**
         * Decodes an ImportFolderRecordRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ImportFolderRecordRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.ImportFolderRecordRequest;

        /**
         * Verifies an ImportFolderRecordRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ImportFolderRecordRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ImportFolderRecordRequest
         */
        public static fromObject(object: { [k: string]: any }): Folder.ImportFolderRecordRequest;

        /**
         * Creates a plain object from an ImportFolderRecordRequest message. Also converts values to other types if specified.
         * @param message ImportFolderRecordRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.ImportFolderRecordRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ImportFolderRecordRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ImportFolderRecordResponse. */
    interface IImportFolderRecordResponse {

        /** ImportFolderRecordResponse folderResponse */
        folderResponse?: (Folder.IFolderResponse[]|null);

        /** ImportFolderRecordResponse recordResponse */
        recordResponse?: (Folder.IRecordResponse[]|null);
    }

    /** Represents an ImportFolderRecordResponse. */
    class ImportFolderRecordResponse implements IImportFolderRecordResponse {

        /**
         * Constructs a new ImportFolderRecordResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.IImportFolderRecordResponse);

        /** ImportFolderRecordResponse folderResponse. */
        public folderResponse: Folder.IFolderResponse[];

        /** ImportFolderRecordResponse recordResponse. */
        public recordResponse: Folder.IRecordResponse[];

        /**
         * Creates a new ImportFolderRecordResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ImportFolderRecordResponse instance
         */
        public static create(properties?: Folder.IImportFolderRecordResponse): Folder.ImportFolderRecordResponse;

        /**
         * Encodes the specified ImportFolderRecordResponse message. Does not implicitly {@link Folder.ImportFolderRecordResponse.verify|verify} messages.
         * @param message ImportFolderRecordResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.IImportFolderRecordResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ImportFolderRecordResponse message, length delimited. Does not implicitly {@link Folder.ImportFolderRecordResponse.verify|verify} messages.
         * @param message ImportFolderRecordResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.IImportFolderRecordResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ImportFolderRecordResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ImportFolderRecordResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.ImportFolderRecordResponse;

        /**
         * Decodes an ImportFolderRecordResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ImportFolderRecordResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.ImportFolderRecordResponse;

        /**
         * Verifies an ImportFolderRecordResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ImportFolderRecordResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ImportFolderRecordResponse
         */
        public static fromObject(object: { [k: string]: any }): Folder.ImportFolderRecordResponse;

        /**
         * Creates a plain object from an ImportFolderRecordResponse message. Also converts values to other types if specified.
         * @param message ImportFolderRecordResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.ImportFolderRecordResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ImportFolderRecordResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** SetBooleanValue enum. */
    enum SetBooleanValue {
        BOOLEAN_NO_CHANGE = 0,
        BOOLEAN_TRUE = 1,
        BOOLEAN_FALSE = 2
    }

    /** Properties of a SharedFolderUpdateRecord. */
    interface ISharedFolderUpdateRecord {

        /** SharedFolderUpdateRecord recordUid */
        recordUid?: (Uint8Array|null);

        /** SharedFolderUpdateRecord sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** SharedFolderUpdateRecord teamUid */
        teamUid?: (Uint8Array|null);

        /** SharedFolderUpdateRecord canEdit */
        canEdit?: (Folder.SetBooleanValue|null);

        /** SharedFolderUpdateRecord canShare */
        canShare?: (Folder.SetBooleanValue|null);

        /** SharedFolderUpdateRecord encryptedRecordKey */
        encryptedRecordKey?: (Uint8Array|null);

        /** SharedFolderUpdateRecord revision */
        revision?: (number|null);

        /** SharedFolderUpdateRecord expiration */
        expiration?: (number|Long|null);
    }

    /** Represents a SharedFolderUpdateRecord. */
    class SharedFolderUpdateRecord implements ISharedFolderUpdateRecord {

        /**
         * Constructs a new SharedFolderUpdateRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.ISharedFolderUpdateRecord);

        /** SharedFolderUpdateRecord recordUid. */
        public recordUid: Uint8Array;

        /** SharedFolderUpdateRecord sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** SharedFolderUpdateRecord teamUid. */
        public teamUid: Uint8Array;

        /** SharedFolderUpdateRecord canEdit. */
        public canEdit: Folder.SetBooleanValue;

        /** SharedFolderUpdateRecord canShare. */
        public canShare: Folder.SetBooleanValue;

        /** SharedFolderUpdateRecord encryptedRecordKey. */
        public encryptedRecordKey: Uint8Array;

        /** SharedFolderUpdateRecord revision. */
        public revision: number;

        /** SharedFolderUpdateRecord expiration. */
        public expiration: (number|Long);

        /**
         * Creates a new SharedFolderUpdateRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderUpdateRecord instance
         */
        public static create(properties?: Folder.ISharedFolderUpdateRecord): Folder.SharedFolderUpdateRecord;

        /**
         * Encodes the specified SharedFolderUpdateRecord message. Does not implicitly {@link Folder.SharedFolderUpdateRecord.verify|verify} messages.
         * @param message SharedFolderUpdateRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.ISharedFolderUpdateRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderUpdateRecord message, length delimited. Does not implicitly {@link Folder.SharedFolderUpdateRecord.verify|verify} messages.
         * @param message SharedFolderUpdateRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.ISharedFolderUpdateRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderUpdateRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderUpdateRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.SharedFolderUpdateRecord;

        /**
         * Decodes a SharedFolderUpdateRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderUpdateRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.SharedFolderUpdateRecord;

        /**
         * Verifies a SharedFolderUpdateRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderUpdateRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderUpdateRecord
         */
        public static fromObject(object: { [k: string]: any }): Folder.SharedFolderUpdateRecord;

        /**
         * Creates a plain object from a SharedFolderUpdateRecord message. Also converts values to other types if specified.
         * @param message SharedFolderUpdateRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.SharedFolderUpdateRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderUpdateRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderUpdateUser. */
    interface ISharedFolderUpdateUser {

        /** SharedFolderUpdateUser username */
        username?: (string|null);

        /** SharedFolderUpdateUser manageUsers */
        manageUsers?: (Folder.SetBooleanValue|null);

        /** SharedFolderUpdateUser manageRecords */
        manageRecords?: (Folder.SetBooleanValue|null);

        /** SharedFolderUpdateUser sharedFolderKey */
        sharedFolderKey?: (Uint8Array|null);

        /** SharedFolderUpdateUser expiration */
        expiration?: (number|Long|null);
    }

    /** Represents a SharedFolderUpdateUser. */
    class SharedFolderUpdateUser implements ISharedFolderUpdateUser {

        /**
         * Constructs a new SharedFolderUpdateUser.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.ISharedFolderUpdateUser);

        /** SharedFolderUpdateUser username. */
        public username: string;

        /** SharedFolderUpdateUser manageUsers. */
        public manageUsers: Folder.SetBooleanValue;

        /** SharedFolderUpdateUser manageRecords. */
        public manageRecords: Folder.SetBooleanValue;

        /** SharedFolderUpdateUser sharedFolderKey. */
        public sharedFolderKey: Uint8Array;

        /** SharedFolderUpdateUser expiration. */
        public expiration: (number|Long);

        /**
         * Creates a new SharedFolderUpdateUser instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderUpdateUser instance
         */
        public static create(properties?: Folder.ISharedFolderUpdateUser): Folder.SharedFolderUpdateUser;

        /**
         * Encodes the specified SharedFolderUpdateUser message. Does not implicitly {@link Folder.SharedFolderUpdateUser.verify|verify} messages.
         * @param message SharedFolderUpdateUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.ISharedFolderUpdateUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderUpdateUser message, length delimited. Does not implicitly {@link Folder.SharedFolderUpdateUser.verify|verify} messages.
         * @param message SharedFolderUpdateUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.ISharedFolderUpdateUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderUpdateUser message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderUpdateUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.SharedFolderUpdateUser;

        /**
         * Decodes a SharedFolderUpdateUser message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderUpdateUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.SharedFolderUpdateUser;

        /**
         * Verifies a SharedFolderUpdateUser message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderUpdateUser message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderUpdateUser
         */
        public static fromObject(object: { [k: string]: any }): Folder.SharedFolderUpdateUser;

        /**
         * Creates a plain object from a SharedFolderUpdateUser message. Also converts values to other types if specified.
         * @param message SharedFolderUpdateUser
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.SharedFolderUpdateUser, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderUpdateUser to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderUpdateTeam. */
    interface ISharedFolderUpdateTeam {

        /** SharedFolderUpdateTeam teamUid */
        teamUid?: (Uint8Array|null);

        /** SharedFolderUpdateTeam manageUsers */
        manageUsers?: (boolean|null);

        /** SharedFolderUpdateTeam manageRecords */
        manageRecords?: (boolean|null);

        /** SharedFolderUpdateTeam sharedFolderKey */
        sharedFolderKey?: (Uint8Array|null);

        /** SharedFolderUpdateTeam expiration */
        expiration?: (number|Long|null);
    }

    /** Represents a SharedFolderUpdateTeam. */
    class SharedFolderUpdateTeam implements ISharedFolderUpdateTeam {

        /**
         * Constructs a new SharedFolderUpdateTeam.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.ISharedFolderUpdateTeam);

        /** SharedFolderUpdateTeam teamUid. */
        public teamUid: Uint8Array;

        /** SharedFolderUpdateTeam manageUsers. */
        public manageUsers: boolean;

        /** SharedFolderUpdateTeam manageRecords. */
        public manageRecords: boolean;

        /** SharedFolderUpdateTeam sharedFolderKey. */
        public sharedFolderKey: Uint8Array;

        /** SharedFolderUpdateTeam expiration. */
        public expiration: (number|Long);

        /**
         * Creates a new SharedFolderUpdateTeam instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderUpdateTeam instance
         */
        public static create(properties?: Folder.ISharedFolderUpdateTeam): Folder.SharedFolderUpdateTeam;

        /**
         * Encodes the specified SharedFolderUpdateTeam message. Does not implicitly {@link Folder.SharedFolderUpdateTeam.verify|verify} messages.
         * @param message SharedFolderUpdateTeam message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.ISharedFolderUpdateTeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderUpdateTeam message, length delimited. Does not implicitly {@link Folder.SharedFolderUpdateTeam.verify|verify} messages.
         * @param message SharedFolderUpdateTeam message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.ISharedFolderUpdateTeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderUpdateTeam message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderUpdateTeam
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.SharedFolderUpdateTeam;

        /**
         * Decodes a SharedFolderUpdateTeam message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderUpdateTeam
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.SharedFolderUpdateTeam;

        /**
         * Verifies a SharedFolderUpdateTeam message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderUpdateTeam message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderUpdateTeam
         */
        public static fromObject(object: { [k: string]: any }): Folder.SharedFolderUpdateTeam;

        /**
         * Creates a plain object from a SharedFolderUpdateTeam message. Also converts values to other types if specified.
         * @param message SharedFolderUpdateTeam
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.SharedFolderUpdateTeam, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderUpdateTeam to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderUpdateV3Request. */
    interface ISharedFolderUpdateV3Request {

        /** SharedFolderUpdateV3Request sharedFolderUpdateOperationDontUse */
        sharedFolderUpdateOperationDontUse?: (number|null);

        /** SharedFolderUpdateV3Request sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** SharedFolderUpdateV3Request encryptedSharedFolderName */
        encryptedSharedFolderName?: (Uint8Array|null);

        /** SharedFolderUpdateV3Request revision */
        revision?: (number|Long|null);

        /** SharedFolderUpdateV3Request forceUpdate */
        forceUpdate?: (boolean|null);

        /** SharedFolderUpdateV3Request fromTeamUid */
        fromTeamUid?: (Uint8Array|null);

        /** SharedFolderUpdateV3Request defaultManageUsers */
        defaultManageUsers?: (Folder.SetBooleanValue|null);

        /** SharedFolderUpdateV3Request defaultManageRecords */
        defaultManageRecords?: (Folder.SetBooleanValue|null);

        /** SharedFolderUpdateV3Request defaultCanEdit */
        defaultCanEdit?: (Folder.SetBooleanValue|null);

        /** SharedFolderUpdateV3Request defaultCanShare */
        defaultCanShare?: (Folder.SetBooleanValue|null);

        /** SharedFolderUpdateV3Request sharedFolderAddRecord */
        sharedFolderAddRecord?: (Folder.ISharedFolderUpdateRecord[]|null);

        /** SharedFolderUpdateV3Request sharedFolderAddUser */
        sharedFolderAddUser?: (Folder.ISharedFolderUpdateUser[]|null);

        /** SharedFolderUpdateV3Request sharedFolderAddTeam */
        sharedFolderAddTeam?: (Folder.ISharedFolderUpdateTeam[]|null);

        /** SharedFolderUpdateV3Request sharedFolderUpdateRecord */
        sharedFolderUpdateRecord?: (Folder.ISharedFolderUpdateRecord[]|null);

        /** SharedFolderUpdateV3Request sharedFolderUpdateUser */
        sharedFolderUpdateUser?: (Folder.ISharedFolderUpdateUser[]|null);

        /** SharedFolderUpdateV3Request sharedFolderUpdateTeam */
        sharedFolderUpdateTeam?: (Folder.ISharedFolderUpdateTeam[]|null);

        /** SharedFolderUpdateV3Request sharedFolderRemoveRecord */
        sharedFolderRemoveRecord?: (Uint8Array[]|null);

        /** SharedFolderUpdateV3Request sharedFolderRemoveUser */
        sharedFolderRemoveUser?: (string[]|null);

        /** SharedFolderUpdateV3Request sharedFolderRemoveTeam */
        sharedFolderRemoveTeam?: (Uint8Array[]|null);

        /** SharedFolderUpdateV3Request sharedFolderOwner */
        sharedFolderOwner?: (string|null);
    }

    /** Represents a SharedFolderUpdateV3Request. */
    class SharedFolderUpdateV3Request implements ISharedFolderUpdateV3Request {

        /**
         * Constructs a new SharedFolderUpdateV3Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.ISharedFolderUpdateV3Request);

        /** SharedFolderUpdateV3Request sharedFolderUpdateOperationDontUse. */
        public sharedFolderUpdateOperationDontUse: number;

        /** SharedFolderUpdateV3Request sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** SharedFolderUpdateV3Request encryptedSharedFolderName. */
        public encryptedSharedFolderName: Uint8Array;

        /** SharedFolderUpdateV3Request revision. */
        public revision: (number|Long);

        /** SharedFolderUpdateV3Request forceUpdate. */
        public forceUpdate: boolean;

        /** SharedFolderUpdateV3Request fromTeamUid. */
        public fromTeamUid: Uint8Array;

        /** SharedFolderUpdateV3Request defaultManageUsers. */
        public defaultManageUsers: Folder.SetBooleanValue;

        /** SharedFolderUpdateV3Request defaultManageRecords. */
        public defaultManageRecords: Folder.SetBooleanValue;

        /** SharedFolderUpdateV3Request defaultCanEdit. */
        public defaultCanEdit: Folder.SetBooleanValue;

        /** SharedFolderUpdateV3Request defaultCanShare. */
        public defaultCanShare: Folder.SetBooleanValue;

        /** SharedFolderUpdateV3Request sharedFolderAddRecord. */
        public sharedFolderAddRecord: Folder.ISharedFolderUpdateRecord[];

        /** SharedFolderUpdateV3Request sharedFolderAddUser. */
        public sharedFolderAddUser: Folder.ISharedFolderUpdateUser[];

        /** SharedFolderUpdateV3Request sharedFolderAddTeam. */
        public sharedFolderAddTeam: Folder.ISharedFolderUpdateTeam[];

        /** SharedFolderUpdateV3Request sharedFolderUpdateRecord. */
        public sharedFolderUpdateRecord: Folder.ISharedFolderUpdateRecord[];

        /** SharedFolderUpdateV3Request sharedFolderUpdateUser. */
        public sharedFolderUpdateUser: Folder.ISharedFolderUpdateUser[];

        /** SharedFolderUpdateV3Request sharedFolderUpdateTeam. */
        public sharedFolderUpdateTeam: Folder.ISharedFolderUpdateTeam[];

        /** SharedFolderUpdateV3Request sharedFolderRemoveRecord. */
        public sharedFolderRemoveRecord: Uint8Array[];

        /** SharedFolderUpdateV3Request sharedFolderRemoveUser. */
        public sharedFolderRemoveUser: string[];

        /** SharedFolderUpdateV3Request sharedFolderRemoveTeam. */
        public sharedFolderRemoveTeam: Uint8Array[];

        /** SharedFolderUpdateV3Request sharedFolderOwner. */
        public sharedFolderOwner: string;

        /**
         * Creates a new SharedFolderUpdateV3Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderUpdateV3Request instance
         */
        public static create(properties?: Folder.ISharedFolderUpdateV3Request): Folder.SharedFolderUpdateV3Request;

        /**
         * Encodes the specified SharedFolderUpdateV3Request message. Does not implicitly {@link Folder.SharedFolderUpdateV3Request.verify|verify} messages.
         * @param message SharedFolderUpdateV3Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.ISharedFolderUpdateV3Request, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderUpdateV3Request message, length delimited. Does not implicitly {@link Folder.SharedFolderUpdateV3Request.verify|verify} messages.
         * @param message SharedFolderUpdateV3Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.ISharedFolderUpdateV3Request, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderUpdateV3Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderUpdateV3Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.SharedFolderUpdateV3Request;

        /**
         * Decodes a SharedFolderUpdateV3Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderUpdateV3Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.SharedFolderUpdateV3Request;

        /**
         * Verifies a SharedFolderUpdateV3Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderUpdateV3Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderUpdateV3Request
         */
        public static fromObject(object: { [k: string]: any }): Folder.SharedFolderUpdateV3Request;

        /**
         * Creates a plain object from a SharedFolderUpdateV3Request message. Also converts values to other types if specified.
         * @param message SharedFolderUpdateV3Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.SharedFolderUpdateV3Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderUpdateV3Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderUpdateRecordStatus. */
    interface ISharedFolderUpdateRecordStatus {

        /** SharedFolderUpdateRecordStatus recordUid */
        recordUid?: (Uint8Array|null);

        /** SharedFolderUpdateRecordStatus status */
        status?: (string|null);
    }

    /** Represents a SharedFolderUpdateRecordStatus. */
    class SharedFolderUpdateRecordStatus implements ISharedFolderUpdateRecordStatus {

        /**
         * Constructs a new SharedFolderUpdateRecordStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.ISharedFolderUpdateRecordStatus);

        /** SharedFolderUpdateRecordStatus recordUid. */
        public recordUid: Uint8Array;

        /** SharedFolderUpdateRecordStatus status. */
        public status: string;

        /**
         * Creates a new SharedFolderUpdateRecordStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderUpdateRecordStatus instance
         */
        public static create(properties?: Folder.ISharedFolderUpdateRecordStatus): Folder.SharedFolderUpdateRecordStatus;

        /**
         * Encodes the specified SharedFolderUpdateRecordStatus message. Does not implicitly {@link Folder.SharedFolderUpdateRecordStatus.verify|verify} messages.
         * @param message SharedFolderUpdateRecordStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.ISharedFolderUpdateRecordStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderUpdateRecordStatus message, length delimited. Does not implicitly {@link Folder.SharedFolderUpdateRecordStatus.verify|verify} messages.
         * @param message SharedFolderUpdateRecordStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.ISharedFolderUpdateRecordStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderUpdateRecordStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderUpdateRecordStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.SharedFolderUpdateRecordStatus;

        /**
         * Decodes a SharedFolderUpdateRecordStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderUpdateRecordStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.SharedFolderUpdateRecordStatus;

        /**
         * Verifies a SharedFolderUpdateRecordStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderUpdateRecordStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderUpdateRecordStatus
         */
        public static fromObject(object: { [k: string]: any }): Folder.SharedFolderUpdateRecordStatus;

        /**
         * Creates a plain object from a SharedFolderUpdateRecordStatus message. Also converts values to other types if specified.
         * @param message SharedFolderUpdateRecordStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.SharedFolderUpdateRecordStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderUpdateRecordStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderUpdateUserStatus. */
    interface ISharedFolderUpdateUserStatus {

        /** SharedFolderUpdateUserStatus username */
        username?: (string|null);

        /** SharedFolderUpdateUserStatus status */
        status?: (string|null);
    }

    /** Represents a SharedFolderUpdateUserStatus. */
    class SharedFolderUpdateUserStatus implements ISharedFolderUpdateUserStatus {

        /**
         * Constructs a new SharedFolderUpdateUserStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.ISharedFolderUpdateUserStatus);

        /** SharedFolderUpdateUserStatus username. */
        public username: string;

        /** SharedFolderUpdateUserStatus status. */
        public status: string;

        /**
         * Creates a new SharedFolderUpdateUserStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderUpdateUserStatus instance
         */
        public static create(properties?: Folder.ISharedFolderUpdateUserStatus): Folder.SharedFolderUpdateUserStatus;

        /**
         * Encodes the specified SharedFolderUpdateUserStatus message. Does not implicitly {@link Folder.SharedFolderUpdateUserStatus.verify|verify} messages.
         * @param message SharedFolderUpdateUserStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.ISharedFolderUpdateUserStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderUpdateUserStatus message, length delimited. Does not implicitly {@link Folder.SharedFolderUpdateUserStatus.verify|verify} messages.
         * @param message SharedFolderUpdateUserStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.ISharedFolderUpdateUserStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderUpdateUserStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderUpdateUserStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.SharedFolderUpdateUserStatus;

        /**
         * Decodes a SharedFolderUpdateUserStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderUpdateUserStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.SharedFolderUpdateUserStatus;

        /**
         * Verifies a SharedFolderUpdateUserStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderUpdateUserStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderUpdateUserStatus
         */
        public static fromObject(object: { [k: string]: any }): Folder.SharedFolderUpdateUserStatus;

        /**
         * Creates a plain object from a SharedFolderUpdateUserStatus message. Also converts values to other types if specified.
         * @param message SharedFolderUpdateUserStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.SharedFolderUpdateUserStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderUpdateUserStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderUpdateTeamStatus. */
    interface ISharedFolderUpdateTeamStatus {

        /** SharedFolderUpdateTeamStatus teamUid */
        teamUid?: (Uint8Array|null);

        /** SharedFolderUpdateTeamStatus status */
        status?: (string|null);
    }

    /** Represents a SharedFolderUpdateTeamStatus. */
    class SharedFolderUpdateTeamStatus implements ISharedFolderUpdateTeamStatus {

        /**
         * Constructs a new SharedFolderUpdateTeamStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.ISharedFolderUpdateTeamStatus);

        /** SharedFolderUpdateTeamStatus teamUid. */
        public teamUid: Uint8Array;

        /** SharedFolderUpdateTeamStatus status. */
        public status: string;

        /**
         * Creates a new SharedFolderUpdateTeamStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderUpdateTeamStatus instance
         */
        public static create(properties?: Folder.ISharedFolderUpdateTeamStatus): Folder.SharedFolderUpdateTeamStatus;

        /**
         * Encodes the specified SharedFolderUpdateTeamStatus message. Does not implicitly {@link Folder.SharedFolderUpdateTeamStatus.verify|verify} messages.
         * @param message SharedFolderUpdateTeamStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.ISharedFolderUpdateTeamStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderUpdateTeamStatus message, length delimited. Does not implicitly {@link Folder.SharedFolderUpdateTeamStatus.verify|verify} messages.
         * @param message SharedFolderUpdateTeamStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.ISharedFolderUpdateTeamStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderUpdateTeamStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderUpdateTeamStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.SharedFolderUpdateTeamStatus;

        /**
         * Decodes a SharedFolderUpdateTeamStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderUpdateTeamStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.SharedFolderUpdateTeamStatus;

        /**
         * Verifies a SharedFolderUpdateTeamStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderUpdateTeamStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderUpdateTeamStatus
         */
        public static fromObject(object: { [k: string]: any }): Folder.SharedFolderUpdateTeamStatus;

        /**
         * Creates a plain object from a SharedFolderUpdateTeamStatus message. Also converts values to other types if specified.
         * @param message SharedFolderUpdateTeamStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.SharedFolderUpdateTeamStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderUpdateTeamStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderUpdateV3Response. */
    interface ISharedFolderUpdateV3Response {

        /** SharedFolderUpdateV3Response revision */
        revision?: (number|Long|null);

        /** SharedFolderUpdateV3Response sharedFolderAddRecordStatus */
        sharedFolderAddRecordStatus?: (Folder.ISharedFolderUpdateRecordStatus[]|null);

        /** SharedFolderUpdateV3Response sharedFolderAddUserStatus */
        sharedFolderAddUserStatus?: (Folder.ISharedFolderUpdateUserStatus[]|null);

        /** SharedFolderUpdateV3Response sharedFolderAddTeamStatus */
        sharedFolderAddTeamStatus?: (Folder.ISharedFolderUpdateTeamStatus[]|null);

        /** SharedFolderUpdateV3Response sharedFolderUpdateRecordStatus */
        sharedFolderUpdateRecordStatus?: (Folder.ISharedFolderUpdateRecordStatus[]|null);

        /** SharedFolderUpdateV3Response sharedFolderUpdateUserStatus */
        sharedFolderUpdateUserStatus?: (Folder.ISharedFolderUpdateUserStatus[]|null);

        /** SharedFolderUpdateV3Response sharedFolderUpdateTeamStatus */
        sharedFolderUpdateTeamStatus?: (Folder.ISharedFolderUpdateTeamStatus[]|null);

        /** SharedFolderUpdateV3Response sharedFolderRemoveRecordStatus */
        sharedFolderRemoveRecordStatus?: (Folder.ISharedFolderUpdateRecordStatus[]|null);

        /** SharedFolderUpdateV3Response sharedFolderRemoveUserStatus */
        sharedFolderRemoveUserStatus?: (Folder.ISharedFolderUpdateUserStatus[]|null);

        /** SharedFolderUpdateV3Response sharedFolderRemoveTeamStatus */
        sharedFolderRemoveTeamStatus?: (Folder.ISharedFolderUpdateTeamStatus[]|null);
    }

    /** Represents a SharedFolderUpdateV3Response. */
    class SharedFolderUpdateV3Response implements ISharedFolderUpdateV3Response {

        /**
         * Constructs a new SharedFolderUpdateV3Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.ISharedFolderUpdateV3Response);

        /** SharedFolderUpdateV3Response revision. */
        public revision: (number|Long);

        /** SharedFolderUpdateV3Response sharedFolderAddRecordStatus. */
        public sharedFolderAddRecordStatus: Folder.ISharedFolderUpdateRecordStatus[];

        /** SharedFolderUpdateV3Response sharedFolderAddUserStatus. */
        public sharedFolderAddUserStatus: Folder.ISharedFolderUpdateUserStatus[];

        /** SharedFolderUpdateV3Response sharedFolderAddTeamStatus. */
        public sharedFolderAddTeamStatus: Folder.ISharedFolderUpdateTeamStatus[];

        /** SharedFolderUpdateV3Response sharedFolderUpdateRecordStatus. */
        public sharedFolderUpdateRecordStatus: Folder.ISharedFolderUpdateRecordStatus[];

        /** SharedFolderUpdateV3Response sharedFolderUpdateUserStatus. */
        public sharedFolderUpdateUserStatus: Folder.ISharedFolderUpdateUserStatus[];

        /** SharedFolderUpdateV3Response sharedFolderUpdateTeamStatus. */
        public sharedFolderUpdateTeamStatus: Folder.ISharedFolderUpdateTeamStatus[];

        /** SharedFolderUpdateV3Response sharedFolderRemoveRecordStatus. */
        public sharedFolderRemoveRecordStatus: Folder.ISharedFolderUpdateRecordStatus[];

        /** SharedFolderUpdateV3Response sharedFolderRemoveUserStatus. */
        public sharedFolderRemoveUserStatus: Folder.ISharedFolderUpdateUserStatus[];

        /** SharedFolderUpdateV3Response sharedFolderRemoveTeamStatus. */
        public sharedFolderRemoveTeamStatus: Folder.ISharedFolderUpdateTeamStatus[];

        /**
         * Creates a new SharedFolderUpdateV3Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderUpdateV3Response instance
         */
        public static create(properties?: Folder.ISharedFolderUpdateV3Response): Folder.SharedFolderUpdateV3Response;

        /**
         * Encodes the specified SharedFolderUpdateV3Response message. Does not implicitly {@link Folder.SharedFolderUpdateV3Response.verify|verify} messages.
         * @param message SharedFolderUpdateV3Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.ISharedFolderUpdateV3Response, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderUpdateV3Response message, length delimited. Does not implicitly {@link Folder.SharedFolderUpdateV3Response.verify|verify} messages.
         * @param message SharedFolderUpdateV3Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.ISharedFolderUpdateV3Response, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderUpdateV3Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderUpdateV3Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.SharedFolderUpdateV3Response;

        /**
         * Decodes a SharedFolderUpdateV3Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderUpdateV3Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.SharedFolderUpdateV3Response;

        /**
         * Verifies a SharedFolderUpdateV3Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderUpdateV3Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderUpdateV3Response
         */
        public static fromObject(object: { [k: string]: any }): Folder.SharedFolderUpdateV3Response;

        /**
         * Creates a plain object from a SharedFolderUpdateV3Response message. Also converts values to other types if specified.
         * @param message SharedFolderUpdateV3Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.SharedFolderUpdateV3Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderUpdateV3Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetDeletedSharedFoldersAndRecordsResponse. */
    interface IGetDeletedSharedFoldersAndRecordsResponse {

        /** GetDeletedSharedFoldersAndRecordsResponse sharedFolders */
        sharedFolders?: (Folder.IDeletedSharedFolder[]|null);

        /** GetDeletedSharedFoldersAndRecordsResponse sharedFolderRecords */
        sharedFolderRecords?: (Folder.IDeletedSharedFolderRecord[]|null);

        /** GetDeletedSharedFoldersAndRecordsResponse deletedRecordData */
        deletedRecordData?: (Folder.IDeletedRecordData[]|null);

        /** GetDeletedSharedFoldersAndRecordsResponse usernames */
        usernames?: (Folder.IUsername[]|null);
    }

    /** Represents a GetDeletedSharedFoldersAndRecordsResponse. */
    class GetDeletedSharedFoldersAndRecordsResponse implements IGetDeletedSharedFoldersAndRecordsResponse {

        /**
         * Constructs a new GetDeletedSharedFoldersAndRecordsResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.IGetDeletedSharedFoldersAndRecordsResponse);

        /** GetDeletedSharedFoldersAndRecordsResponse sharedFolders. */
        public sharedFolders: Folder.IDeletedSharedFolder[];

        /** GetDeletedSharedFoldersAndRecordsResponse sharedFolderRecords. */
        public sharedFolderRecords: Folder.IDeletedSharedFolderRecord[];

        /** GetDeletedSharedFoldersAndRecordsResponse deletedRecordData. */
        public deletedRecordData: Folder.IDeletedRecordData[];

        /** GetDeletedSharedFoldersAndRecordsResponse usernames. */
        public usernames: Folder.IUsername[];

        /**
         * Creates a new GetDeletedSharedFoldersAndRecordsResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetDeletedSharedFoldersAndRecordsResponse instance
         */
        public static create(properties?: Folder.IGetDeletedSharedFoldersAndRecordsResponse): Folder.GetDeletedSharedFoldersAndRecordsResponse;

        /**
         * Encodes the specified GetDeletedSharedFoldersAndRecordsResponse message. Does not implicitly {@link Folder.GetDeletedSharedFoldersAndRecordsResponse.verify|verify} messages.
         * @param message GetDeletedSharedFoldersAndRecordsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.IGetDeletedSharedFoldersAndRecordsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetDeletedSharedFoldersAndRecordsResponse message, length delimited. Does not implicitly {@link Folder.GetDeletedSharedFoldersAndRecordsResponse.verify|verify} messages.
         * @param message GetDeletedSharedFoldersAndRecordsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.IGetDeletedSharedFoldersAndRecordsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetDeletedSharedFoldersAndRecordsResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetDeletedSharedFoldersAndRecordsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.GetDeletedSharedFoldersAndRecordsResponse;

        /**
         * Decodes a GetDeletedSharedFoldersAndRecordsResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetDeletedSharedFoldersAndRecordsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.GetDeletedSharedFoldersAndRecordsResponse;

        /**
         * Verifies a GetDeletedSharedFoldersAndRecordsResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetDeletedSharedFoldersAndRecordsResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetDeletedSharedFoldersAndRecordsResponse
         */
        public static fromObject(object: { [k: string]: any }): Folder.GetDeletedSharedFoldersAndRecordsResponse;

        /**
         * Creates a plain object from a GetDeletedSharedFoldersAndRecordsResponse message. Also converts values to other types if specified.
         * @param message GetDeletedSharedFoldersAndRecordsResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.GetDeletedSharedFoldersAndRecordsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetDeletedSharedFoldersAndRecordsResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeletedSharedFolder. */
    interface IDeletedSharedFolder {

        /** DeletedSharedFolder sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** DeletedSharedFolder folderUid */
        folderUid?: (Uint8Array|null);

        /** DeletedSharedFolder parentUid */
        parentUid?: (Uint8Array|null);

        /** DeletedSharedFolder sharedFolderKey */
        sharedFolderKey?: (Uint8Array|null);

        /** DeletedSharedFolder folderKeyType */
        folderKeyType?: (Records.RecordKeyType|null);

        /** DeletedSharedFolder data */
        data?: (Uint8Array|null);

        /** DeletedSharedFolder dateDeleted */
        dateDeleted?: (number|Long|null);

        /** DeletedSharedFolder revision */
        revision?: (number|Long|null);
    }

    /** Represents a DeletedSharedFolder. */
    class DeletedSharedFolder implements IDeletedSharedFolder {

        /**
         * Constructs a new DeletedSharedFolder.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.IDeletedSharedFolder);

        /** DeletedSharedFolder sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** DeletedSharedFolder folderUid. */
        public folderUid: Uint8Array;

        /** DeletedSharedFolder parentUid. */
        public parentUid: Uint8Array;

        /** DeletedSharedFolder sharedFolderKey. */
        public sharedFolderKey: Uint8Array;

        /** DeletedSharedFolder folderKeyType. */
        public folderKeyType: Records.RecordKeyType;

        /** DeletedSharedFolder data. */
        public data: Uint8Array;

        /** DeletedSharedFolder dateDeleted. */
        public dateDeleted: (number|Long);

        /** DeletedSharedFolder revision. */
        public revision: (number|Long);

        /**
         * Creates a new DeletedSharedFolder instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeletedSharedFolder instance
         */
        public static create(properties?: Folder.IDeletedSharedFolder): Folder.DeletedSharedFolder;

        /**
         * Encodes the specified DeletedSharedFolder message. Does not implicitly {@link Folder.DeletedSharedFolder.verify|verify} messages.
         * @param message DeletedSharedFolder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.IDeletedSharedFolder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeletedSharedFolder message, length delimited. Does not implicitly {@link Folder.DeletedSharedFolder.verify|verify} messages.
         * @param message DeletedSharedFolder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.IDeletedSharedFolder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeletedSharedFolder message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeletedSharedFolder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.DeletedSharedFolder;

        /**
         * Decodes a DeletedSharedFolder message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeletedSharedFolder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.DeletedSharedFolder;

        /**
         * Verifies a DeletedSharedFolder message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeletedSharedFolder message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeletedSharedFolder
         */
        public static fromObject(object: { [k: string]: any }): Folder.DeletedSharedFolder;

        /**
         * Creates a plain object from a DeletedSharedFolder message. Also converts values to other types if specified.
         * @param message DeletedSharedFolder
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.DeletedSharedFolder, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeletedSharedFolder to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeletedSharedFolderRecord. */
    interface IDeletedSharedFolderRecord {

        /** DeletedSharedFolderRecord folderUid */
        folderUid?: (Uint8Array|null);

        /** DeletedSharedFolderRecord recordUid */
        recordUid?: (Uint8Array|null);

        /** DeletedSharedFolderRecord sharedRecordKey */
        sharedRecordKey?: (Uint8Array|null);

        /** DeletedSharedFolderRecord dateDeleted */
        dateDeleted?: (number|Long|null);

        /** DeletedSharedFolderRecord revision */
        revision?: (number|Long|null);
    }

    /** Represents a DeletedSharedFolderRecord. */
    class DeletedSharedFolderRecord implements IDeletedSharedFolderRecord {

        /**
         * Constructs a new DeletedSharedFolderRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.IDeletedSharedFolderRecord);

        /** DeletedSharedFolderRecord folderUid. */
        public folderUid: Uint8Array;

        /** DeletedSharedFolderRecord recordUid. */
        public recordUid: Uint8Array;

        /** DeletedSharedFolderRecord sharedRecordKey. */
        public sharedRecordKey: Uint8Array;

        /** DeletedSharedFolderRecord dateDeleted. */
        public dateDeleted: (number|Long);

        /** DeletedSharedFolderRecord revision. */
        public revision: (number|Long);

        /**
         * Creates a new DeletedSharedFolderRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeletedSharedFolderRecord instance
         */
        public static create(properties?: Folder.IDeletedSharedFolderRecord): Folder.DeletedSharedFolderRecord;

        /**
         * Encodes the specified DeletedSharedFolderRecord message. Does not implicitly {@link Folder.DeletedSharedFolderRecord.verify|verify} messages.
         * @param message DeletedSharedFolderRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.IDeletedSharedFolderRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeletedSharedFolderRecord message, length delimited. Does not implicitly {@link Folder.DeletedSharedFolderRecord.verify|verify} messages.
         * @param message DeletedSharedFolderRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.IDeletedSharedFolderRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeletedSharedFolderRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeletedSharedFolderRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.DeletedSharedFolderRecord;

        /**
         * Decodes a DeletedSharedFolderRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeletedSharedFolderRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.DeletedSharedFolderRecord;

        /**
         * Verifies a DeletedSharedFolderRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeletedSharedFolderRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeletedSharedFolderRecord
         */
        public static fromObject(object: { [k: string]: any }): Folder.DeletedSharedFolderRecord;

        /**
         * Creates a plain object from a DeletedSharedFolderRecord message. Also converts values to other types if specified.
         * @param message DeletedSharedFolderRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.DeletedSharedFolderRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeletedSharedFolderRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeletedRecordData. */
    interface IDeletedRecordData {

        /** DeletedRecordData recordUid */
        recordUid?: (Uint8Array|null);

        /** DeletedRecordData ownerUid */
        ownerUid?: (Uint8Array|null);

        /** DeletedRecordData revision */
        revision?: (number|Long|null);

        /** DeletedRecordData clientModifiedTime */
        clientModifiedTime?: (number|Long|null);

        /** DeletedRecordData data */
        data?: (Uint8Array|null);
    }

    /** Represents a DeletedRecordData. */
    class DeletedRecordData implements IDeletedRecordData {

        /**
         * Constructs a new DeletedRecordData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.IDeletedRecordData);

        /** DeletedRecordData recordUid. */
        public recordUid: Uint8Array;

        /** DeletedRecordData ownerUid. */
        public ownerUid: Uint8Array;

        /** DeletedRecordData revision. */
        public revision: (number|Long);

        /** DeletedRecordData clientModifiedTime. */
        public clientModifiedTime: (number|Long);

        /** DeletedRecordData data. */
        public data: Uint8Array;

        /**
         * Creates a new DeletedRecordData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeletedRecordData instance
         */
        public static create(properties?: Folder.IDeletedRecordData): Folder.DeletedRecordData;

        /**
         * Encodes the specified DeletedRecordData message. Does not implicitly {@link Folder.DeletedRecordData.verify|verify} messages.
         * @param message DeletedRecordData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.IDeletedRecordData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeletedRecordData message, length delimited. Does not implicitly {@link Folder.DeletedRecordData.verify|verify} messages.
         * @param message DeletedRecordData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.IDeletedRecordData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeletedRecordData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeletedRecordData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.DeletedRecordData;

        /**
         * Decodes a DeletedRecordData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeletedRecordData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.DeletedRecordData;

        /**
         * Verifies a DeletedRecordData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeletedRecordData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeletedRecordData
         */
        public static fromObject(object: { [k: string]: any }): Folder.DeletedRecordData;

        /**
         * Creates a plain object from a DeletedRecordData message. Also converts values to other types if specified.
         * @param message DeletedRecordData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.DeletedRecordData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeletedRecordData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Username. */
    interface IUsername {

        /** Username accountUid */
        accountUid?: (Uint8Array|null);

        /** Username username */
        username?: (string|null);
    }

    /** Represents a Username. */
    class Username implements IUsername {

        /**
         * Constructs a new Username.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.IUsername);

        /** Username accountUid. */
        public accountUid: Uint8Array;

        /** Username username. */
        public username: string;

        /**
         * Creates a new Username instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Username instance
         */
        public static create(properties?: Folder.IUsername): Folder.Username;

        /**
         * Encodes the specified Username message. Does not implicitly {@link Folder.Username.verify|verify} messages.
         * @param message Username message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.IUsername, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Username message, length delimited. Does not implicitly {@link Folder.Username.verify|verify} messages.
         * @param message Username message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.IUsername, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Username message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Username
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.Username;

        /**
         * Decodes a Username message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Username
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.Username;

        /**
         * Verifies a Username message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Username message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Username
         */
        public static fromObject(object: { [k: string]: any }): Folder.Username;

        /**
         * Creates a plain object from a Username message. Also converts values to other types if specified.
         * @param message Username
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.Username, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Username to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RestoreDeletedSharedFoldersAndRecordsRequest. */
    interface IRestoreDeletedSharedFoldersAndRecordsRequest {

        /** RestoreDeletedSharedFoldersAndRecordsRequest folders */
        folders?: (Folder.IRestoreSharedObject[]|null);

        /** RestoreDeletedSharedFoldersAndRecordsRequest records */
        records?: (Folder.IRestoreSharedObject[]|null);
    }

    /** Represents a RestoreDeletedSharedFoldersAndRecordsRequest. */
    class RestoreDeletedSharedFoldersAndRecordsRequest implements IRestoreDeletedSharedFoldersAndRecordsRequest {

        /**
         * Constructs a new RestoreDeletedSharedFoldersAndRecordsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.IRestoreDeletedSharedFoldersAndRecordsRequest);

        /** RestoreDeletedSharedFoldersAndRecordsRequest folders. */
        public folders: Folder.IRestoreSharedObject[];

        /** RestoreDeletedSharedFoldersAndRecordsRequest records. */
        public records: Folder.IRestoreSharedObject[];

        /**
         * Creates a new RestoreDeletedSharedFoldersAndRecordsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RestoreDeletedSharedFoldersAndRecordsRequest instance
         */
        public static create(properties?: Folder.IRestoreDeletedSharedFoldersAndRecordsRequest): Folder.RestoreDeletedSharedFoldersAndRecordsRequest;

        /**
         * Encodes the specified RestoreDeletedSharedFoldersAndRecordsRequest message. Does not implicitly {@link Folder.RestoreDeletedSharedFoldersAndRecordsRequest.verify|verify} messages.
         * @param message RestoreDeletedSharedFoldersAndRecordsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.IRestoreDeletedSharedFoldersAndRecordsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RestoreDeletedSharedFoldersAndRecordsRequest message, length delimited. Does not implicitly {@link Folder.RestoreDeletedSharedFoldersAndRecordsRequest.verify|verify} messages.
         * @param message RestoreDeletedSharedFoldersAndRecordsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.IRestoreDeletedSharedFoldersAndRecordsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RestoreDeletedSharedFoldersAndRecordsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RestoreDeletedSharedFoldersAndRecordsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.RestoreDeletedSharedFoldersAndRecordsRequest;

        /**
         * Decodes a RestoreDeletedSharedFoldersAndRecordsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RestoreDeletedSharedFoldersAndRecordsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.RestoreDeletedSharedFoldersAndRecordsRequest;

        /**
         * Verifies a RestoreDeletedSharedFoldersAndRecordsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RestoreDeletedSharedFoldersAndRecordsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RestoreDeletedSharedFoldersAndRecordsRequest
         */
        public static fromObject(object: { [k: string]: any }): Folder.RestoreDeletedSharedFoldersAndRecordsRequest;

        /**
         * Creates a plain object from a RestoreDeletedSharedFoldersAndRecordsRequest message. Also converts values to other types if specified.
         * @param message RestoreDeletedSharedFoldersAndRecordsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.RestoreDeletedSharedFoldersAndRecordsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RestoreDeletedSharedFoldersAndRecordsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RestoreSharedObject. */
    interface IRestoreSharedObject {

        /** RestoreSharedObject folderUid */
        folderUid?: (Uint8Array|null);

        /** RestoreSharedObject recordUid */
        recordUid?: (Uint8Array|null);
    }

    /** Represents a RestoreSharedObject. */
    class RestoreSharedObject implements IRestoreSharedObject {

        /**
         * Constructs a new RestoreSharedObject.
         * @param [properties] Properties to set
         */
        constructor(properties?: Folder.IRestoreSharedObject);

        /** RestoreSharedObject folderUid. */
        public folderUid: Uint8Array;

        /** RestoreSharedObject recordUid. */
        public recordUid: Uint8Array;

        /**
         * Creates a new RestoreSharedObject instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RestoreSharedObject instance
         */
        public static create(properties?: Folder.IRestoreSharedObject): Folder.RestoreSharedObject;

        /**
         * Encodes the specified RestoreSharedObject message. Does not implicitly {@link Folder.RestoreSharedObject.verify|verify} messages.
         * @param message RestoreSharedObject message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Folder.IRestoreSharedObject, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RestoreSharedObject message, length delimited. Does not implicitly {@link Folder.RestoreSharedObject.verify|verify} messages.
         * @param message RestoreSharedObject message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Folder.IRestoreSharedObject, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RestoreSharedObject message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RestoreSharedObject
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Folder.RestoreSharedObject;

        /**
         * Decodes a RestoreSharedObject message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RestoreSharedObject
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Folder.RestoreSharedObject;

        /**
         * Verifies a RestoreSharedObject message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RestoreSharedObject message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RestoreSharedObject
         */
        public static fromObject(object: { [k: string]: any }): Folder.RestoreSharedObject;

        /**
         * Creates a plain object from a RestoreSharedObject message. Also converts values to other types if specified.
         * @param message RestoreSharedObject
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Folder.RestoreSharedObject, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RestoreSharedObject to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Records. */
export namespace Records {

    /** RecordTypeScope enum. */
    enum RecordTypeScope {
        RT_STANDARD = 0,
        RT_USER = 1,
        RT_ENTERPRISE = 2,
        RT_PAM = 3
    }

    /** Properties of a RecordType. */
    interface IRecordType {

        /** RecordType recordTypeId */
        recordTypeId?: (number|null);

        /** RecordType content */
        content?: (string|null);

        /** RecordType scope */
        scope?: (Records.RecordTypeScope|null);
    }

    /** Represents a RecordType. */
    class RecordType implements IRecordType {

        /**
         * Constructs a new RecordType.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordType);

        /** RecordType recordTypeId. */
        public recordTypeId: number;

        /** RecordType content. */
        public content: string;

        /** RecordType scope. */
        public scope: Records.RecordTypeScope;

        /**
         * Creates a new RecordType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordType instance
         */
        public static create(properties?: Records.IRecordType): Records.RecordType;

        /**
         * Encodes the specified RecordType message. Does not implicitly {@link Records.RecordType.verify|verify} messages.
         * @param message RecordType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordType message, length delimited. Does not implicitly {@link Records.RecordType.verify|verify} messages.
         * @param message RecordType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordType;

        /**
         * Decodes a RecordType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordType;

        /**
         * Verifies a RecordType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordType
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordType;

        /**
         * Creates a plain object from a RecordType message. Also converts values to other types if specified.
         * @param message RecordType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordTypesRequest. */
    interface IRecordTypesRequest {

        /** RecordTypesRequest standard */
        standard?: (boolean|null);

        /** RecordTypesRequest user */
        user?: (boolean|null);

        /** RecordTypesRequest enterprise */
        enterprise?: (boolean|null);

        /** RecordTypesRequest pam */
        pam?: (boolean|null);
    }

    /** Represents a RecordTypesRequest. */
    class RecordTypesRequest implements IRecordTypesRequest {

        /**
         * Constructs a new RecordTypesRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordTypesRequest);

        /** RecordTypesRequest standard. */
        public standard: boolean;

        /** RecordTypesRequest user. */
        public user: boolean;

        /** RecordTypesRequest enterprise. */
        public enterprise: boolean;

        /** RecordTypesRequest pam. */
        public pam: boolean;

        /**
         * Creates a new RecordTypesRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordTypesRequest instance
         */
        public static create(properties?: Records.IRecordTypesRequest): Records.RecordTypesRequest;

        /**
         * Encodes the specified RecordTypesRequest message. Does not implicitly {@link Records.RecordTypesRequest.verify|verify} messages.
         * @param message RecordTypesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordTypesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordTypesRequest message, length delimited. Does not implicitly {@link Records.RecordTypesRequest.verify|verify} messages.
         * @param message RecordTypesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordTypesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordTypesRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordTypesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordTypesRequest;

        /**
         * Decodes a RecordTypesRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordTypesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordTypesRequest;

        /**
         * Verifies a RecordTypesRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordTypesRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordTypesRequest
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordTypesRequest;

        /**
         * Creates a plain object from a RecordTypesRequest message. Also converts values to other types if specified.
         * @param message RecordTypesRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordTypesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordTypesRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordTypesResponse. */
    interface IRecordTypesResponse {

        /** RecordTypesResponse recordTypes */
        recordTypes?: (Records.IRecordType[]|null);

        /** RecordTypesResponse standardCounter */
        standardCounter?: (number|null);

        /** RecordTypesResponse userCounter */
        userCounter?: (number|null);

        /** RecordTypesResponse enterpriseCounter */
        enterpriseCounter?: (number|null);

        /** RecordTypesResponse pamCounter */
        pamCounter?: (number|null);
    }

    /** Represents a RecordTypesResponse. */
    class RecordTypesResponse implements IRecordTypesResponse {

        /**
         * Constructs a new RecordTypesResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordTypesResponse);

        /** RecordTypesResponse recordTypes. */
        public recordTypes: Records.IRecordType[];

        /** RecordTypesResponse standardCounter. */
        public standardCounter: number;

        /** RecordTypesResponse userCounter. */
        public userCounter: number;

        /** RecordTypesResponse enterpriseCounter. */
        public enterpriseCounter: number;

        /** RecordTypesResponse pamCounter. */
        public pamCounter: number;

        /**
         * Creates a new RecordTypesResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordTypesResponse instance
         */
        public static create(properties?: Records.IRecordTypesResponse): Records.RecordTypesResponse;

        /**
         * Encodes the specified RecordTypesResponse message. Does not implicitly {@link Records.RecordTypesResponse.verify|verify} messages.
         * @param message RecordTypesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordTypesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordTypesResponse message, length delimited. Does not implicitly {@link Records.RecordTypesResponse.verify|verify} messages.
         * @param message RecordTypesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordTypesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordTypesResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordTypesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordTypesResponse;

        /**
         * Decodes a RecordTypesResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordTypesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordTypesResponse;

        /**
         * Verifies a RecordTypesResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordTypesResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordTypesResponse
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordTypesResponse;

        /**
         * Creates a plain object from a RecordTypesResponse message. Also converts values to other types if specified.
         * @param message RecordTypesResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordTypesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordTypesResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordTypeModifyResponse. */
    interface IRecordTypeModifyResponse {

        /** RecordTypeModifyResponse recordTypeId */
        recordTypeId?: (number|null);

        /** RecordTypeModifyResponse counter */
        counter?: (number|null);
    }

    /** Represents a RecordTypeModifyResponse. */
    class RecordTypeModifyResponse implements IRecordTypeModifyResponse {

        /**
         * Constructs a new RecordTypeModifyResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordTypeModifyResponse);

        /** RecordTypeModifyResponse recordTypeId. */
        public recordTypeId: number;

        /** RecordTypeModifyResponse counter. */
        public counter: number;

        /**
         * Creates a new RecordTypeModifyResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordTypeModifyResponse instance
         */
        public static create(properties?: Records.IRecordTypeModifyResponse): Records.RecordTypeModifyResponse;

        /**
         * Encodes the specified RecordTypeModifyResponse message. Does not implicitly {@link Records.RecordTypeModifyResponse.verify|verify} messages.
         * @param message RecordTypeModifyResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordTypeModifyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordTypeModifyResponse message, length delimited. Does not implicitly {@link Records.RecordTypeModifyResponse.verify|verify} messages.
         * @param message RecordTypeModifyResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordTypeModifyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordTypeModifyResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordTypeModifyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordTypeModifyResponse;

        /**
         * Decodes a RecordTypeModifyResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordTypeModifyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordTypeModifyResponse;

        /**
         * Verifies a RecordTypeModifyResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordTypeModifyResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordTypeModifyResponse
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordTypeModifyResponse;

        /**
         * Creates a plain object from a RecordTypeModifyResponse message. Also converts values to other types if specified.
         * @param message RecordTypeModifyResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordTypeModifyResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordTypeModifyResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordsGetRequest. */
    interface IRecordsGetRequest {

        /** RecordsGetRequest recordUids */
        recordUids?: (Uint8Array[]|null);

        /** RecordsGetRequest clientTime */
        clientTime?: (number|Long|null);
    }

    /** Represents a RecordsGetRequest. */
    class RecordsGetRequest implements IRecordsGetRequest {

        /**
         * Constructs a new RecordsGetRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordsGetRequest);

        /** RecordsGetRequest recordUids. */
        public recordUids: Uint8Array[];

        /** RecordsGetRequest clientTime. */
        public clientTime: (number|Long);

        /**
         * Creates a new RecordsGetRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordsGetRequest instance
         */
        public static create(properties?: Records.IRecordsGetRequest): Records.RecordsGetRequest;

        /**
         * Encodes the specified RecordsGetRequest message. Does not implicitly {@link Records.RecordsGetRequest.verify|verify} messages.
         * @param message RecordsGetRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordsGetRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordsGetRequest message, length delimited. Does not implicitly {@link Records.RecordsGetRequest.verify|verify} messages.
         * @param message RecordsGetRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordsGetRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordsGetRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordsGetRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordsGetRequest;

        /**
         * Decodes a RecordsGetRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordsGetRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordsGetRequest;

        /**
         * Verifies a RecordsGetRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordsGetRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordsGetRequest
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordsGetRequest;

        /**
         * Creates a plain object from a RecordsGetRequest message. Also converts values to other types if specified.
         * @param message RecordsGetRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordsGetRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordsGetRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Record. */
    interface IRecord {

        /** Record recordUid */
        recordUid?: (Uint8Array|null);

        /** Record recordKey */
        recordKey?: (Uint8Array|null);

        /** Record recordKeyType */
        recordKeyType?: (Records.RecordKeyType|null);

        /** Record data */
        data?: (Uint8Array|null);

        /** Record extra */
        extra?: (Uint8Array|null);

        /** Record version */
        version?: (number|null);

        /** Record clientModifiedTime */
        clientModifiedTime?: (number|Long|null);

        /** Record revision */
        revision?: (number|Long|null);

        /** Record fileIds */
        fileIds?: (Uint8Array[]|null);
    }

    /** Represents a Record. */
    class Record implements IRecord {

        /**
         * Constructs a new Record.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecord);

        /** Record recordUid. */
        public recordUid: Uint8Array;

        /** Record recordKey. */
        public recordKey: Uint8Array;

        /** Record recordKeyType. */
        public recordKeyType: Records.RecordKeyType;

        /** Record data. */
        public data: Uint8Array;

        /** Record extra. */
        public extra: Uint8Array;

        /** Record version. */
        public version: number;

        /** Record clientModifiedTime. */
        public clientModifiedTime: (number|Long);

        /** Record revision. */
        public revision: (number|Long);

        /** Record fileIds. */
        public fileIds: Uint8Array[];

        /**
         * Creates a new Record instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Record instance
         */
        public static create(properties?: Records.IRecord): Records.Record;

        /**
         * Encodes the specified Record message. Does not implicitly {@link Records.Record.verify|verify} messages.
         * @param message Record message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Record message, length delimited. Does not implicitly {@link Records.Record.verify|verify} messages.
         * @param message Record message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Record message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Record
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.Record;

        /**
         * Decodes a Record message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Record
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.Record;

        /**
         * Verifies a Record message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Record message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Record
         */
        public static fromObject(object: { [k: string]: any }): Records.Record;

        /**
         * Creates a plain object from a Record message. Also converts values to other types if specified.
         * @param message Record
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.Record, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Record to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** RecordKeyType enum. */
    enum RecordKeyType {
        NO_KEY = 0,
        ENCRYPTED_BY_DATA_KEY = 1,
        ENCRYPTED_BY_PUBLIC_KEY = 2,
        ENCRYPTED_BY_DATA_KEY_GCM = 3,
        ENCRYPTED_BY_PUBLIC_KEY_ECC = 4,
        ENCRYPTED_BY_ROOT_KEY_CBC = 5,
        ENCRYPTED_BY_ROOT_KEY_GCM = 6
    }

    /** Properties of a FolderRecordKey. */
    interface IFolderRecordKey {

        /** FolderRecordKey folderUid */
        folderUid?: (Uint8Array|null);

        /** FolderRecordKey recordUid */
        recordUid?: (Uint8Array|null);

        /** FolderRecordKey recordKey */
        recordKey?: (Uint8Array|null);
    }

    /** Represents a FolderRecordKey. */
    class FolderRecordKey implements IFolderRecordKey {

        /**
         * Constructs a new FolderRecordKey.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IFolderRecordKey);

        /** FolderRecordKey folderUid. */
        public folderUid: Uint8Array;

        /** FolderRecordKey recordUid. */
        public recordUid: Uint8Array;

        /** FolderRecordKey recordKey. */
        public recordKey: Uint8Array;

        /**
         * Creates a new FolderRecordKey instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FolderRecordKey instance
         */
        public static create(properties?: Records.IFolderRecordKey): Records.FolderRecordKey;

        /**
         * Encodes the specified FolderRecordKey message. Does not implicitly {@link Records.FolderRecordKey.verify|verify} messages.
         * @param message FolderRecordKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IFolderRecordKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FolderRecordKey message, length delimited. Does not implicitly {@link Records.FolderRecordKey.verify|verify} messages.
         * @param message FolderRecordKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IFolderRecordKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FolderRecordKey message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FolderRecordKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.FolderRecordKey;

        /**
         * Decodes a FolderRecordKey message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FolderRecordKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.FolderRecordKey;

        /**
         * Verifies a FolderRecordKey message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FolderRecordKey message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FolderRecordKey
         */
        public static fromObject(object: { [k: string]: any }): Records.FolderRecordKey;

        /**
         * Creates a plain object from a FolderRecordKey message. Also converts values to other types if specified.
         * @param message FolderRecordKey
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.FolderRecordKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FolderRecordKey to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Folder. */
    interface IFolder {

        /** Folder folderUid */
        folderUid?: (Uint8Array|null);

        /** Folder folderKey */
        folderKey?: (Uint8Array|null);

        /** Folder folderKeyType */
        folderKeyType?: (Records.RecordKeyType|null);
    }

    /** Represents a Folder. */
    class Folder implements IFolder {

        /**
         * Constructs a new Folder.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IFolder);

        /** Folder folderUid. */
        public folderUid: Uint8Array;

        /** Folder folderKey. */
        public folderKey: Uint8Array;

        /** Folder folderKeyType. */
        public folderKeyType: Records.RecordKeyType;

        /**
         * Creates a new Folder instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Folder instance
         */
        public static create(properties?: Records.IFolder): Records.Folder;

        /**
         * Encodes the specified Folder message. Does not implicitly {@link Records.Folder.verify|verify} messages.
         * @param message Folder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IFolder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Folder message, length delimited. Does not implicitly {@link Records.Folder.verify|verify} messages.
         * @param message Folder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IFolder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Folder message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Folder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.Folder;

        /**
         * Decodes a Folder message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Folder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.Folder;

        /**
         * Verifies a Folder message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Folder message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Folder
         */
        public static fromObject(object: { [k: string]: any }): Records.Folder;

        /**
         * Creates a plain object from a Folder message. Also converts values to other types if specified.
         * @param message Folder
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.Folder, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Folder to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Team. */
    interface ITeam {

        /** Team teamUid */
        teamUid?: (Uint8Array|null);

        /** Team teamKey */
        teamKey?: (Uint8Array|null);

        /** Team teamPrivateKey */
        teamPrivateKey?: (Uint8Array|null);

        /** Team teamKeyType */
        teamKeyType?: (Records.RecordKeyType|null);

        /** Team folders */
        folders?: (Records.IFolder[]|null);
    }

    /** Represents a Team. */
    class Team implements ITeam {

        /**
         * Constructs a new Team.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.ITeam);

        /** Team teamUid. */
        public teamUid: Uint8Array;

        /** Team teamKey. */
        public teamKey: Uint8Array;

        /** Team teamPrivateKey. */
        public teamPrivateKey: Uint8Array;

        /** Team teamKeyType. */
        public teamKeyType: Records.RecordKeyType;

        /** Team folders. */
        public folders: Records.IFolder[];

        /**
         * Creates a new Team instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Team instance
         */
        public static create(properties?: Records.ITeam): Records.Team;

        /**
         * Encodes the specified Team message. Does not implicitly {@link Records.Team.verify|verify} messages.
         * @param message Team message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.ITeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Team message, length delimited. Does not implicitly {@link Records.Team.verify|verify} messages.
         * @param message Team message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.ITeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Team message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Team
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.Team;

        /**
         * Decodes a Team message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Team
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.Team;

        /**
         * Verifies a Team message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Team message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Team
         */
        public static fromObject(object: { [k: string]: any }): Records.Team;

        /**
         * Creates a plain object from a Team message. Also converts values to other types if specified.
         * @param message Team
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.Team, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Team to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordsGetResponse. */
    interface IRecordsGetResponse {

        /** RecordsGetResponse records */
        records?: (Records.IRecord[]|null);

        /** RecordsGetResponse folderRecordKeys */
        folderRecordKeys?: (Records.IFolderRecordKey[]|null);

        /** RecordsGetResponse folders */
        folders?: (Records.IFolder[]|null);

        /** RecordsGetResponse teams */
        teams?: (Records.ITeam[]|null);
    }

    /** Represents a RecordsGetResponse. */
    class RecordsGetResponse implements IRecordsGetResponse {

        /**
         * Constructs a new RecordsGetResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordsGetResponse);

        /** RecordsGetResponse records. */
        public records: Records.IRecord[];

        /** RecordsGetResponse folderRecordKeys. */
        public folderRecordKeys: Records.IFolderRecordKey[];

        /** RecordsGetResponse folders. */
        public folders: Records.IFolder[];

        /** RecordsGetResponse teams. */
        public teams: Records.ITeam[];

        /**
         * Creates a new RecordsGetResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordsGetResponse instance
         */
        public static create(properties?: Records.IRecordsGetResponse): Records.RecordsGetResponse;

        /**
         * Encodes the specified RecordsGetResponse message. Does not implicitly {@link Records.RecordsGetResponse.verify|verify} messages.
         * @param message RecordsGetResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordsGetResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordsGetResponse message, length delimited. Does not implicitly {@link Records.RecordsGetResponse.verify|verify} messages.
         * @param message RecordsGetResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordsGetResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordsGetResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordsGetResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordsGetResponse;

        /**
         * Decodes a RecordsGetResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordsGetResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordsGetResponse;

        /**
         * Verifies a RecordsGetResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordsGetResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordsGetResponse
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordsGetResponse;

        /**
         * Creates a plain object from a RecordsGetResponse message. Also converts values to other types if specified.
         * @param message RecordsGetResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordsGetResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordsGetResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** RecordFolderType enum. */
    enum RecordFolderType {
        user_folder = 0,
        shared_folder = 1,
        shared_folder_folder = 2
    }

    /** Properties of a RecordLink. */
    interface IRecordLink {

        /** RecordLink recordUid */
        recordUid?: (Uint8Array|null);

        /** RecordLink recordKey */
        recordKey?: (Uint8Array|null);
    }

    /** Represents a RecordLink. */
    class RecordLink implements IRecordLink {

        /**
         * Constructs a new RecordLink.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordLink);

        /** RecordLink recordUid. */
        public recordUid: Uint8Array;

        /** RecordLink recordKey. */
        public recordKey: Uint8Array;

        /**
         * Creates a new RecordLink instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordLink instance
         */
        public static create(properties?: Records.IRecordLink): Records.RecordLink;

        /**
         * Encodes the specified RecordLink message. Does not implicitly {@link Records.RecordLink.verify|verify} messages.
         * @param message RecordLink message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordLink, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordLink message, length delimited. Does not implicitly {@link Records.RecordLink.verify|verify} messages.
         * @param message RecordLink message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordLink, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordLink message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordLink
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordLink;

        /**
         * Decodes a RecordLink message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordLink
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordLink;

        /**
         * Verifies a RecordLink message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordLink message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordLink
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordLink;

        /**
         * Creates a plain object from a RecordLink message. Also converts values to other types if specified.
         * @param message RecordLink
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordLink, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordLink to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordAudit. */
    interface IRecordAudit {

        /** RecordAudit version */
        version?: (number|null);

        /** RecordAudit data */
        data?: (Uint8Array|null);
    }

    /** Represents a RecordAudit. */
    class RecordAudit implements IRecordAudit {

        /**
         * Constructs a new RecordAudit.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordAudit);

        /** RecordAudit version. */
        public version: number;

        /** RecordAudit data. */
        public data: Uint8Array;

        /**
         * Creates a new RecordAudit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordAudit instance
         */
        public static create(properties?: Records.IRecordAudit): Records.RecordAudit;

        /**
         * Encodes the specified RecordAudit message. Does not implicitly {@link Records.RecordAudit.verify|verify} messages.
         * @param message RecordAudit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordAudit, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordAudit message, length delimited. Does not implicitly {@link Records.RecordAudit.verify|verify} messages.
         * @param message RecordAudit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordAudit, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordAudit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordAudit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordAudit;

        /**
         * Decodes a RecordAudit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordAudit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordAudit;

        /**
         * Verifies a RecordAudit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordAudit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordAudit
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordAudit;

        /**
         * Creates a plain object from a RecordAudit message. Also converts values to other types if specified.
         * @param message RecordAudit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordAudit, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordAudit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordAdd. */
    interface IRecordAdd {

        /** RecordAdd recordUid */
        recordUid?: (Uint8Array|null);

        /** RecordAdd recordKey */
        recordKey?: (Uint8Array|null);

        /** RecordAdd clientModifiedTime */
        clientModifiedTime?: (number|Long|null);

        /** RecordAdd data */
        data?: (Uint8Array|null);

        /** RecordAdd nonSharedData */
        nonSharedData?: (Uint8Array|null);

        /** RecordAdd folderType */
        folderType?: (Records.RecordFolderType|null);

        /** RecordAdd folderUid */
        folderUid?: (Uint8Array|null);

        /** RecordAdd folderKey */
        folderKey?: (Uint8Array|null);

        /** RecordAdd recordLinks */
        recordLinks?: (Records.IRecordLink[]|null);

        /** RecordAdd audit */
        audit?: (Records.IRecordAudit|null);
    }

    /** Represents a RecordAdd. */
    class RecordAdd implements IRecordAdd {

        /**
         * Constructs a new RecordAdd.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordAdd);

        /** RecordAdd recordUid. */
        public recordUid: Uint8Array;

        /** RecordAdd recordKey. */
        public recordKey: Uint8Array;

        /** RecordAdd clientModifiedTime. */
        public clientModifiedTime: (number|Long);

        /** RecordAdd data. */
        public data: Uint8Array;

        /** RecordAdd nonSharedData. */
        public nonSharedData: Uint8Array;

        /** RecordAdd folderType. */
        public folderType: Records.RecordFolderType;

        /** RecordAdd folderUid. */
        public folderUid: Uint8Array;

        /** RecordAdd folderKey. */
        public folderKey: Uint8Array;

        /** RecordAdd recordLinks. */
        public recordLinks: Records.IRecordLink[];

        /** RecordAdd audit. */
        public audit?: (Records.IRecordAudit|null);

        /**
         * Creates a new RecordAdd instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordAdd instance
         */
        public static create(properties?: Records.IRecordAdd): Records.RecordAdd;

        /**
         * Encodes the specified RecordAdd message. Does not implicitly {@link Records.RecordAdd.verify|verify} messages.
         * @param message RecordAdd message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordAdd, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordAdd message, length delimited. Does not implicitly {@link Records.RecordAdd.verify|verify} messages.
         * @param message RecordAdd message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordAdd, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordAdd message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordAdd
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordAdd;

        /**
         * Decodes a RecordAdd message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordAdd
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordAdd;

        /**
         * Verifies a RecordAdd message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordAdd message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordAdd
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordAdd;

        /**
         * Creates a plain object from a RecordAdd message. Also converts values to other types if specified.
         * @param message RecordAdd
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordAdd, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordAdd to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordsAddRequest. */
    interface IRecordsAddRequest {

        /** RecordsAddRequest records */
        records?: (Records.IRecordAdd[]|null);

        /** RecordsAddRequest clientTime */
        clientTime?: (number|Long|null);
    }

    /** Represents a RecordsAddRequest. */
    class RecordsAddRequest implements IRecordsAddRequest {

        /**
         * Constructs a new RecordsAddRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordsAddRequest);

        /** RecordsAddRequest records. */
        public records: Records.IRecordAdd[];

        /** RecordsAddRequest clientTime. */
        public clientTime: (number|Long);

        /**
         * Creates a new RecordsAddRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordsAddRequest instance
         */
        public static create(properties?: Records.IRecordsAddRequest): Records.RecordsAddRequest;

        /**
         * Encodes the specified RecordsAddRequest message. Does not implicitly {@link Records.RecordsAddRequest.verify|verify} messages.
         * @param message RecordsAddRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordsAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordsAddRequest message, length delimited. Does not implicitly {@link Records.RecordsAddRequest.verify|verify} messages.
         * @param message RecordsAddRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordsAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordsAddRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordsAddRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordsAddRequest;

        /**
         * Decodes a RecordsAddRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordsAddRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordsAddRequest;

        /**
         * Verifies a RecordsAddRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordsAddRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordsAddRequest
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordsAddRequest;

        /**
         * Creates a plain object from a RecordsAddRequest message. Also converts values to other types if specified.
         * @param message RecordsAddRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordsAddRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordsAddRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordUpdate. */
    interface IRecordUpdate {

        /** RecordUpdate recordUid */
        recordUid?: (Uint8Array|null);

        /** RecordUpdate clientModifiedTime */
        clientModifiedTime?: (number|Long|null);

        /** RecordUpdate revision */
        revision?: (number|Long|null);

        /** RecordUpdate data */
        data?: (Uint8Array|null);

        /** RecordUpdate nonSharedData */
        nonSharedData?: (Uint8Array|null);

        /** RecordUpdate recordLinksAdd */
        recordLinksAdd?: (Records.IRecordLink[]|null);

        /** RecordUpdate recordLinksRemove */
        recordLinksRemove?: (Uint8Array[]|null);

        /** RecordUpdate audit */
        audit?: (Records.IRecordAudit|null);
    }

    /** Represents a RecordUpdate. */
    class RecordUpdate implements IRecordUpdate {

        /**
         * Constructs a new RecordUpdate.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordUpdate);

        /** RecordUpdate recordUid. */
        public recordUid: Uint8Array;

        /** RecordUpdate clientModifiedTime. */
        public clientModifiedTime: (number|Long);

        /** RecordUpdate revision. */
        public revision: (number|Long);

        /** RecordUpdate data. */
        public data: Uint8Array;

        /** RecordUpdate nonSharedData. */
        public nonSharedData: Uint8Array;

        /** RecordUpdate recordLinksAdd. */
        public recordLinksAdd: Records.IRecordLink[];

        /** RecordUpdate recordLinksRemove. */
        public recordLinksRemove: Uint8Array[];

        /** RecordUpdate audit. */
        public audit?: (Records.IRecordAudit|null);

        /**
         * Creates a new RecordUpdate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordUpdate instance
         */
        public static create(properties?: Records.IRecordUpdate): Records.RecordUpdate;

        /**
         * Encodes the specified RecordUpdate message. Does not implicitly {@link Records.RecordUpdate.verify|verify} messages.
         * @param message RecordUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordUpdate message, length delimited. Does not implicitly {@link Records.RecordUpdate.verify|verify} messages.
         * @param message RecordUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordUpdate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordUpdate;

        /**
         * Decodes a RecordUpdate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordUpdate;

        /**
         * Verifies a RecordUpdate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordUpdate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordUpdate
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordUpdate;

        /**
         * Creates a plain object from a RecordUpdate message. Also converts values to other types if specified.
         * @param message RecordUpdate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordUpdate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordsUpdateRequest. */
    interface IRecordsUpdateRequest {

        /** RecordsUpdateRequest records */
        records?: (Records.IRecordUpdate[]|null);

        /** RecordsUpdateRequest clientTime */
        clientTime?: (number|Long|null);
    }

    /** Represents a RecordsUpdateRequest. */
    class RecordsUpdateRequest implements IRecordsUpdateRequest {

        /**
         * Constructs a new RecordsUpdateRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordsUpdateRequest);

        /** RecordsUpdateRequest records. */
        public records: Records.IRecordUpdate[];

        /** RecordsUpdateRequest clientTime. */
        public clientTime: (number|Long);

        /**
         * Creates a new RecordsUpdateRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordsUpdateRequest instance
         */
        public static create(properties?: Records.IRecordsUpdateRequest): Records.RecordsUpdateRequest;

        /**
         * Encodes the specified RecordsUpdateRequest message. Does not implicitly {@link Records.RecordsUpdateRequest.verify|verify} messages.
         * @param message RecordsUpdateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordsUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordsUpdateRequest message, length delimited. Does not implicitly {@link Records.RecordsUpdateRequest.verify|verify} messages.
         * @param message RecordsUpdateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordsUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordsUpdateRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordsUpdateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordsUpdateRequest;

        /**
         * Decodes a RecordsUpdateRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordsUpdateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordsUpdateRequest;

        /**
         * Verifies a RecordsUpdateRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordsUpdateRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordsUpdateRequest
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordsUpdateRequest;

        /**
         * Creates a plain object from a RecordsUpdateRequest message. Also converts values to other types if specified.
         * @param message RecordsUpdateRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordsUpdateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordsUpdateRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordFileForConversion. */
    interface IRecordFileForConversion {

        /** RecordFileForConversion recordUid */
        recordUid?: (Uint8Array|null);

        /** RecordFileForConversion fileFileId */
        fileFileId?: (string|null);

        /** RecordFileForConversion thumbFileId */
        thumbFileId?: (string|null);

        /** RecordFileForConversion data */
        data?: (Uint8Array|null);

        /** RecordFileForConversion recordKey */
        recordKey?: (Uint8Array|null);

        /** RecordFileForConversion linkKey */
        linkKey?: (Uint8Array|null);
    }

    /** Represents a RecordFileForConversion. */
    class RecordFileForConversion implements IRecordFileForConversion {

        /**
         * Constructs a new RecordFileForConversion.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordFileForConversion);

        /** RecordFileForConversion recordUid. */
        public recordUid: Uint8Array;

        /** RecordFileForConversion fileFileId. */
        public fileFileId: string;

        /** RecordFileForConversion thumbFileId. */
        public thumbFileId: string;

        /** RecordFileForConversion data. */
        public data: Uint8Array;

        /** RecordFileForConversion recordKey. */
        public recordKey: Uint8Array;

        /** RecordFileForConversion linkKey. */
        public linkKey: Uint8Array;

        /**
         * Creates a new RecordFileForConversion instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordFileForConversion instance
         */
        public static create(properties?: Records.IRecordFileForConversion): Records.RecordFileForConversion;

        /**
         * Encodes the specified RecordFileForConversion message. Does not implicitly {@link Records.RecordFileForConversion.verify|verify} messages.
         * @param message RecordFileForConversion message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordFileForConversion, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordFileForConversion message, length delimited. Does not implicitly {@link Records.RecordFileForConversion.verify|verify} messages.
         * @param message RecordFileForConversion message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordFileForConversion, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordFileForConversion message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordFileForConversion
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordFileForConversion;

        /**
         * Decodes a RecordFileForConversion message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordFileForConversion
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordFileForConversion;

        /**
         * Verifies a RecordFileForConversion message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordFileForConversion message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordFileForConversion
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordFileForConversion;

        /**
         * Creates a plain object from a RecordFileForConversion message. Also converts values to other types if specified.
         * @param message RecordFileForConversion
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordFileForConversion, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordFileForConversion to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordFolderForConversion. */
    interface IRecordFolderForConversion {

        /** RecordFolderForConversion folderUid */
        folderUid?: (Uint8Array|null);

        /** RecordFolderForConversion recordFolderKey */
        recordFolderKey?: (Uint8Array|null);
    }

    /** Represents a RecordFolderForConversion. */
    class RecordFolderForConversion implements IRecordFolderForConversion {

        /**
         * Constructs a new RecordFolderForConversion.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordFolderForConversion);

        /** RecordFolderForConversion folderUid. */
        public folderUid: Uint8Array;

        /** RecordFolderForConversion recordFolderKey. */
        public recordFolderKey: Uint8Array;

        /**
         * Creates a new RecordFolderForConversion instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordFolderForConversion instance
         */
        public static create(properties?: Records.IRecordFolderForConversion): Records.RecordFolderForConversion;

        /**
         * Encodes the specified RecordFolderForConversion message. Does not implicitly {@link Records.RecordFolderForConversion.verify|verify} messages.
         * @param message RecordFolderForConversion message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordFolderForConversion, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordFolderForConversion message, length delimited. Does not implicitly {@link Records.RecordFolderForConversion.verify|verify} messages.
         * @param message RecordFolderForConversion message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordFolderForConversion, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordFolderForConversion message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordFolderForConversion
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordFolderForConversion;

        /**
         * Decodes a RecordFolderForConversion message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordFolderForConversion
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordFolderForConversion;

        /**
         * Verifies a RecordFolderForConversion message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordFolderForConversion message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordFolderForConversion
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordFolderForConversion;

        /**
         * Creates a plain object from a RecordFolderForConversion message. Also converts values to other types if specified.
         * @param message RecordFolderForConversion
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordFolderForConversion, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordFolderForConversion to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordConvertToV3. */
    interface IRecordConvertToV3 {

        /** RecordConvertToV3 recordUid */
        recordUid?: (Uint8Array|null);

        /** RecordConvertToV3 clientModifiedTime */
        clientModifiedTime?: (number|Long|null);

        /** RecordConvertToV3 revision */
        revision?: (number|Long|null);

        /** RecordConvertToV3 data */
        data?: (Uint8Array|null);

        /** RecordConvertToV3 nonSharedData */
        nonSharedData?: (Uint8Array|null);

        /** RecordConvertToV3 audit */
        audit?: (Records.IRecordAudit|null);

        /** RecordConvertToV3 recordFile */
        recordFile?: (Records.IRecordFileForConversion[]|null);

        /** RecordConvertToV3 folderKey */
        folderKey?: (Records.IRecordFolderForConversion[]|null);
    }

    /** Represents a RecordConvertToV3. */
    class RecordConvertToV3 implements IRecordConvertToV3 {

        /**
         * Constructs a new RecordConvertToV3.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordConvertToV3);

        /** RecordConvertToV3 recordUid. */
        public recordUid: Uint8Array;

        /** RecordConvertToV3 clientModifiedTime. */
        public clientModifiedTime: (number|Long);

        /** RecordConvertToV3 revision. */
        public revision: (number|Long);

        /** RecordConvertToV3 data. */
        public data: Uint8Array;

        /** RecordConvertToV3 nonSharedData. */
        public nonSharedData: Uint8Array;

        /** RecordConvertToV3 audit. */
        public audit?: (Records.IRecordAudit|null);

        /** RecordConvertToV3 recordFile. */
        public recordFile: Records.IRecordFileForConversion[];

        /** RecordConvertToV3 folderKey. */
        public folderKey: Records.IRecordFolderForConversion[];

        /**
         * Creates a new RecordConvertToV3 instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordConvertToV3 instance
         */
        public static create(properties?: Records.IRecordConvertToV3): Records.RecordConvertToV3;

        /**
         * Encodes the specified RecordConvertToV3 message. Does not implicitly {@link Records.RecordConvertToV3.verify|verify} messages.
         * @param message RecordConvertToV3 message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordConvertToV3, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordConvertToV3 message, length delimited. Does not implicitly {@link Records.RecordConvertToV3.verify|verify} messages.
         * @param message RecordConvertToV3 message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordConvertToV3, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordConvertToV3 message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordConvertToV3
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordConvertToV3;

        /**
         * Decodes a RecordConvertToV3 message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordConvertToV3
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordConvertToV3;

        /**
         * Verifies a RecordConvertToV3 message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordConvertToV3 message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordConvertToV3
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordConvertToV3;

        /**
         * Creates a plain object from a RecordConvertToV3 message. Also converts values to other types if specified.
         * @param message RecordConvertToV3
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordConvertToV3, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordConvertToV3 to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordsConvertToV3Request. */
    interface IRecordsConvertToV3Request {

        /** RecordsConvertToV3Request records */
        records?: (Records.IRecordConvertToV3[]|null);

        /** RecordsConvertToV3Request clientTime */
        clientTime?: (number|Long|null);
    }

    /** Represents a RecordsConvertToV3Request. */
    class RecordsConvertToV3Request implements IRecordsConvertToV3Request {

        /**
         * Constructs a new RecordsConvertToV3Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordsConvertToV3Request);

        /** RecordsConvertToV3Request records. */
        public records: Records.IRecordConvertToV3[];

        /** RecordsConvertToV3Request clientTime. */
        public clientTime: (number|Long);

        /**
         * Creates a new RecordsConvertToV3Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordsConvertToV3Request instance
         */
        public static create(properties?: Records.IRecordsConvertToV3Request): Records.RecordsConvertToV3Request;

        /**
         * Encodes the specified RecordsConvertToV3Request message. Does not implicitly {@link Records.RecordsConvertToV3Request.verify|verify} messages.
         * @param message RecordsConvertToV3Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordsConvertToV3Request, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordsConvertToV3Request message, length delimited. Does not implicitly {@link Records.RecordsConvertToV3Request.verify|verify} messages.
         * @param message RecordsConvertToV3Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordsConvertToV3Request, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordsConvertToV3Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordsConvertToV3Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordsConvertToV3Request;

        /**
         * Decodes a RecordsConvertToV3Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordsConvertToV3Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordsConvertToV3Request;

        /**
         * Verifies a RecordsConvertToV3Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordsConvertToV3Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordsConvertToV3Request
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordsConvertToV3Request;

        /**
         * Creates a plain object from a RecordsConvertToV3Request message. Also converts values to other types if specified.
         * @param message RecordsConvertToV3Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordsConvertToV3Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordsConvertToV3Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordsRemoveRequest. */
    interface IRecordsRemoveRequest {

        /** RecordsRemoveRequest records */
        records?: (Uint8Array[]|null);
    }

    /** Represents a RecordsRemoveRequest. */
    class RecordsRemoveRequest implements IRecordsRemoveRequest {

        /**
         * Constructs a new RecordsRemoveRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordsRemoveRequest);

        /** RecordsRemoveRequest records. */
        public records: Uint8Array[];

        /**
         * Creates a new RecordsRemoveRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordsRemoveRequest instance
         */
        public static create(properties?: Records.IRecordsRemoveRequest): Records.RecordsRemoveRequest;

        /**
         * Encodes the specified RecordsRemoveRequest message. Does not implicitly {@link Records.RecordsRemoveRequest.verify|verify} messages.
         * @param message RecordsRemoveRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordsRemoveRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordsRemoveRequest message, length delimited. Does not implicitly {@link Records.RecordsRemoveRequest.verify|verify} messages.
         * @param message RecordsRemoveRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordsRemoveRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordsRemoveRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordsRemoveRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordsRemoveRequest;

        /**
         * Decodes a RecordsRemoveRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordsRemoveRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordsRemoveRequest;

        /**
         * Verifies a RecordsRemoveRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordsRemoveRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordsRemoveRequest
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordsRemoveRequest;

        /**
         * Creates a plain object from a RecordsRemoveRequest message. Also converts values to other types if specified.
         * @param message RecordsRemoveRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordsRemoveRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordsRemoveRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordRevert. */
    interface IRecordRevert {

        /** RecordRevert recordUid */
        recordUid?: (Uint8Array|null);

        /** RecordRevert revertToRevision */
        revertToRevision?: (number|Long|null);
    }

    /** Represents a RecordRevert. */
    class RecordRevert implements IRecordRevert {

        /**
         * Constructs a new RecordRevert.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordRevert);

        /** RecordRevert recordUid. */
        public recordUid: Uint8Array;

        /** RecordRevert revertToRevision. */
        public revertToRevision: (number|Long);

        /**
         * Creates a new RecordRevert instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordRevert instance
         */
        public static create(properties?: Records.IRecordRevert): Records.RecordRevert;

        /**
         * Encodes the specified RecordRevert message. Does not implicitly {@link Records.RecordRevert.verify|verify} messages.
         * @param message RecordRevert message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordRevert, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordRevert message, length delimited. Does not implicitly {@link Records.RecordRevert.verify|verify} messages.
         * @param message RecordRevert message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordRevert, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordRevert message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordRevert
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordRevert;

        /**
         * Decodes a RecordRevert message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordRevert
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordRevert;

        /**
         * Verifies a RecordRevert message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordRevert message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordRevert
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordRevert;

        /**
         * Creates a plain object from a RecordRevert message. Also converts values to other types if specified.
         * @param message RecordRevert
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordRevert, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordRevert to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordsRevertRequest. */
    interface IRecordsRevertRequest {

        /** RecordsRevertRequest records */
        records?: (Records.IRecordRevert[]|null);
    }

    /** Represents a RecordsRevertRequest. */
    class RecordsRevertRequest implements IRecordsRevertRequest {

        /**
         * Constructs a new RecordsRevertRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordsRevertRequest);

        /** RecordsRevertRequest records. */
        public records: Records.IRecordRevert[];

        /**
         * Creates a new RecordsRevertRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordsRevertRequest instance
         */
        public static create(properties?: Records.IRecordsRevertRequest): Records.RecordsRevertRequest;

        /**
         * Encodes the specified RecordsRevertRequest message. Does not implicitly {@link Records.RecordsRevertRequest.verify|verify} messages.
         * @param message RecordsRevertRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordsRevertRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordsRevertRequest message, length delimited. Does not implicitly {@link Records.RecordsRevertRequest.verify|verify} messages.
         * @param message RecordsRevertRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordsRevertRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordsRevertRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordsRevertRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordsRevertRequest;

        /**
         * Decodes a RecordsRevertRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordsRevertRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordsRevertRequest;

        /**
         * Verifies a RecordsRevertRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordsRevertRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordsRevertRequest
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordsRevertRequest;

        /**
         * Creates a plain object from a RecordsRevertRequest message. Also converts values to other types if specified.
         * @param message RecordsRevertRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordsRevertRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordsRevertRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** RecordModifyResult enum. */
    enum RecordModifyResult {
        RS_SUCCESS = 0,
        RS_OUT_OF_SYNC = 1,
        RS_ACCESS_DENIED = 2,
        RS_SHARE_DENIED = 3,
        RS_RECORD_EXISTS = 4,
        RS_OLD_RECORD_VERSION_TYPE = 5,
        RS_NEW_RECORD_VERSION_TYPE = 6,
        RS_FILES_NOT_MATCH = 7,
        RS_RECORD_NOT_SHAREABLE = 8,
        RS_ATTACHMENT_NOT_SHAREABLE = 9,
        RS_FILE_LIMIT_REACHED = 10,
        RS_SIZE_EXCEEDED_LIMIT = 11
    }

    /** Properties of a RecordLinkError. */
    interface IRecordLinkError {

        /** RecordLinkError recordUid */
        recordUid?: (Uint8Array|null);

        /** RecordLinkError status */
        status?: (Records.RecordModifyResult|null);

        /** RecordLinkError message */
        message?: (string|null);
    }

    /** Represents a RecordLinkError. */
    class RecordLinkError implements IRecordLinkError {

        /**
         * Constructs a new RecordLinkError.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordLinkError);

        /** RecordLinkError recordUid. */
        public recordUid: Uint8Array;

        /** RecordLinkError status. */
        public status: Records.RecordModifyResult;

        /** RecordLinkError message. */
        public message: string;

        /**
         * Creates a new RecordLinkError instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordLinkError instance
         */
        public static create(properties?: Records.IRecordLinkError): Records.RecordLinkError;

        /**
         * Encodes the specified RecordLinkError message. Does not implicitly {@link Records.RecordLinkError.verify|verify} messages.
         * @param message RecordLinkError message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordLinkError, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordLinkError message, length delimited. Does not implicitly {@link Records.RecordLinkError.verify|verify} messages.
         * @param message RecordLinkError message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordLinkError, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordLinkError message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordLinkError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordLinkError;

        /**
         * Decodes a RecordLinkError message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordLinkError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordLinkError;

        /**
         * Verifies a RecordLinkError message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordLinkError message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordLinkError
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordLinkError;

        /**
         * Creates a plain object from a RecordLinkError message. Also converts values to other types if specified.
         * @param message RecordLinkError
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordLinkError, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordLinkError to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordModifyStatus. */
    interface IRecordModifyStatus {

        /** RecordModifyStatus recordUid */
        recordUid?: (Uint8Array|null);

        /** RecordModifyStatus status */
        status?: (Records.RecordModifyResult|null);

        /** RecordModifyStatus message */
        message?: (string|null);

        /** RecordModifyStatus linkErrors */
        linkErrors?: (Records.IRecordLinkError[]|null);
    }

    /** Represents a RecordModifyStatus. */
    class RecordModifyStatus implements IRecordModifyStatus {

        /**
         * Constructs a new RecordModifyStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordModifyStatus);

        /** RecordModifyStatus recordUid. */
        public recordUid: Uint8Array;

        /** RecordModifyStatus status. */
        public status: Records.RecordModifyResult;

        /** RecordModifyStatus message. */
        public message: string;

        /** RecordModifyStatus linkErrors. */
        public linkErrors: Records.IRecordLinkError[];

        /**
         * Creates a new RecordModifyStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordModifyStatus instance
         */
        public static create(properties?: Records.IRecordModifyStatus): Records.RecordModifyStatus;

        /**
         * Encodes the specified RecordModifyStatus message. Does not implicitly {@link Records.RecordModifyStatus.verify|verify} messages.
         * @param message RecordModifyStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordModifyStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordModifyStatus message, length delimited. Does not implicitly {@link Records.RecordModifyStatus.verify|verify} messages.
         * @param message RecordModifyStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordModifyStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordModifyStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordModifyStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordModifyStatus;

        /**
         * Decodes a RecordModifyStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordModifyStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordModifyStatus;

        /**
         * Verifies a RecordModifyStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordModifyStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordModifyStatus
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordModifyStatus;

        /**
         * Creates a plain object from a RecordModifyStatus message. Also converts values to other types if specified.
         * @param message RecordModifyStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordModifyStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordModifyStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordsModifyResponse. */
    interface IRecordsModifyResponse {

        /** RecordsModifyResponse records */
        records?: (Records.IRecordModifyStatus[]|null);

        /** RecordsModifyResponse revision */
        revision?: (number|Long|null);
    }

    /** Represents a RecordsModifyResponse. */
    class RecordsModifyResponse implements IRecordsModifyResponse {

        /**
         * Constructs a new RecordsModifyResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordsModifyResponse);

        /** RecordsModifyResponse records. */
        public records: Records.IRecordModifyStatus[];

        /** RecordsModifyResponse revision. */
        public revision: (number|Long);

        /**
         * Creates a new RecordsModifyResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordsModifyResponse instance
         */
        public static create(properties?: Records.IRecordsModifyResponse): Records.RecordsModifyResponse;

        /**
         * Encodes the specified RecordsModifyResponse message. Does not implicitly {@link Records.RecordsModifyResponse.verify|verify} messages.
         * @param message RecordsModifyResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordsModifyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordsModifyResponse message, length delimited. Does not implicitly {@link Records.RecordsModifyResponse.verify|verify} messages.
         * @param message RecordsModifyResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordsModifyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordsModifyResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordsModifyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordsModifyResponse;

        /**
         * Decodes a RecordsModifyResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordsModifyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordsModifyResponse;

        /**
         * Verifies a RecordsModifyResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordsModifyResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordsModifyResponse
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordsModifyResponse;

        /**
         * Creates a plain object from a RecordsModifyResponse message. Also converts values to other types if specified.
         * @param message RecordsModifyResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordsModifyResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordsModifyResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordAddAuditData. */
    interface IRecordAddAuditData {

        /** RecordAddAuditData recordUid */
        recordUid?: (Uint8Array|null);

        /** RecordAddAuditData revision */
        revision?: (number|Long|null);

        /** RecordAddAuditData data */
        data?: (Uint8Array|null);

        /** RecordAddAuditData version */
        version?: (number|null);
    }

    /** Represents a RecordAddAuditData. */
    class RecordAddAuditData implements IRecordAddAuditData {

        /**
         * Constructs a new RecordAddAuditData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordAddAuditData);

        /** RecordAddAuditData recordUid. */
        public recordUid: Uint8Array;

        /** RecordAddAuditData revision. */
        public revision: (number|Long);

        /** RecordAddAuditData data. */
        public data: Uint8Array;

        /** RecordAddAuditData version. */
        public version: number;

        /**
         * Creates a new RecordAddAuditData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordAddAuditData instance
         */
        public static create(properties?: Records.IRecordAddAuditData): Records.RecordAddAuditData;

        /**
         * Encodes the specified RecordAddAuditData message. Does not implicitly {@link Records.RecordAddAuditData.verify|verify} messages.
         * @param message RecordAddAuditData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordAddAuditData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordAddAuditData message, length delimited. Does not implicitly {@link Records.RecordAddAuditData.verify|verify} messages.
         * @param message RecordAddAuditData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordAddAuditData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordAddAuditData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordAddAuditData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordAddAuditData;

        /**
         * Decodes a RecordAddAuditData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordAddAuditData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordAddAuditData;

        /**
         * Verifies a RecordAddAuditData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordAddAuditData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordAddAuditData
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordAddAuditData;

        /**
         * Creates a plain object from a RecordAddAuditData message. Also converts values to other types if specified.
         * @param message RecordAddAuditData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordAddAuditData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordAddAuditData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AddAuditDataRequest. */
    interface IAddAuditDataRequest {

        /** AddAuditDataRequest records */
        records?: (Records.IRecordAddAuditData[]|null);
    }

    /** Represents an AddAuditDataRequest. */
    class AddAuditDataRequest implements IAddAuditDataRequest {

        /**
         * Constructs a new AddAuditDataRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IAddAuditDataRequest);

        /** AddAuditDataRequest records. */
        public records: Records.IRecordAddAuditData[];

        /**
         * Creates a new AddAuditDataRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AddAuditDataRequest instance
         */
        public static create(properties?: Records.IAddAuditDataRequest): Records.AddAuditDataRequest;

        /**
         * Encodes the specified AddAuditDataRequest message. Does not implicitly {@link Records.AddAuditDataRequest.verify|verify} messages.
         * @param message AddAuditDataRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IAddAuditDataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AddAuditDataRequest message, length delimited. Does not implicitly {@link Records.AddAuditDataRequest.verify|verify} messages.
         * @param message AddAuditDataRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IAddAuditDataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AddAuditDataRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AddAuditDataRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.AddAuditDataRequest;

        /**
         * Decodes an AddAuditDataRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AddAuditDataRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.AddAuditDataRequest;

        /**
         * Verifies an AddAuditDataRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AddAuditDataRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AddAuditDataRequest
         */
        public static fromObject(object: { [k: string]: any }): Records.AddAuditDataRequest;

        /**
         * Creates a plain object from an AddAuditDataRequest message. Also converts values to other types if specified.
         * @param message AddAuditDataRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.AddAuditDataRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AddAuditDataRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a File. */
    interface IFile {

        /** File recordUid */
        recordUid?: (Uint8Array|null);

        /** File recordKey */
        recordKey?: (Uint8Array|null);

        /** File data */
        data?: (Uint8Array|null);

        /** File fileSize */
        fileSize?: (number|Long|null);

        /** File thumbSize */
        thumbSize?: (number|null);
    }

    /** Represents a File. */
    class File implements IFile {

        /**
         * Constructs a new File.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IFile);

        /** File recordUid. */
        public recordUid: Uint8Array;

        /** File recordKey. */
        public recordKey: Uint8Array;

        /** File data. */
        public data: Uint8Array;

        /** File fileSize. */
        public fileSize: (number|Long);

        /** File thumbSize. */
        public thumbSize: number;

        /**
         * Creates a new File instance using the specified properties.
         * @param [properties] Properties to set
         * @returns File instance
         */
        public static create(properties?: Records.IFile): Records.File;

        /**
         * Encodes the specified File message. Does not implicitly {@link Records.File.verify|verify} messages.
         * @param message File message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IFile, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified File message, length delimited. Does not implicitly {@link Records.File.verify|verify} messages.
         * @param message File message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IFile, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a File message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns File
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.File;

        /**
         * Decodes a File message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns File
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.File;

        /**
         * Verifies a File message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a File message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns File
         */
        public static fromObject(object: { [k: string]: any }): Records.File;

        /**
         * Creates a plain object from a File message. Also converts values to other types if specified.
         * @param message File
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.File, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this File to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FilesAddRequest. */
    interface IFilesAddRequest {

        /** FilesAddRequest files */
        files?: (Records.IFile[]|null);

        /** FilesAddRequest clientTime */
        clientTime?: (number|Long|null);
    }

    /** Represents a FilesAddRequest. */
    class FilesAddRequest implements IFilesAddRequest {

        /**
         * Constructs a new FilesAddRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IFilesAddRequest);

        /** FilesAddRequest files. */
        public files: Records.IFile[];

        /** FilesAddRequest clientTime. */
        public clientTime: (number|Long);

        /**
         * Creates a new FilesAddRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FilesAddRequest instance
         */
        public static create(properties?: Records.IFilesAddRequest): Records.FilesAddRequest;

        /**
         * Encodes the specified FilesAddRequest message. Does not implicitly {@link Records.FilesAddRequest.verify|verify} messages.
         * @param message FilesAddRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IFilesAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FilesAddRequest message, length delimited. Does not implicitly {@link Records.FilesAddRequest.verify|verify} messages.
         * @param message FilesAddRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IFilesAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FilesAddRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FilesAddRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.FilesAddRequest;

        /**
         * Decodes a FilesAddRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FilesAddRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.FilesAddRequest;

        /**
         * Verifies a FilesAddRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FilesAddRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FilesAddRequest
         */
        public static fromObject(object: { [k: string]: any }): Records.FilesAddRequest;

        /**
         * Creates a plain object from a FilesAddRequest message. Also converts values to other types if specified.
         * @param message FilesAddRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.FilesAddRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FilesAddRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** FileAddResult enum. */
    enum FileAddResult {
        FA_SUCCESS = 0,
        FA_ERROR = 1
    }

    /** Properties of a FileAddStatus. */
    interface IFileAddStatus {

        /** FileAddStatus recordUid */
        recordUid?: (Uint8Array|null);

        /** FileAddStatus status */
        status?: (Records.FileAddResult|null);

        /** FileAddStatus url */
        url?: (string|null);

        /** FileAddStatus parameters */
        parameters?: (string|null);

        /** FileAddStatus thumbnailParameters */
        thumbnailParameters?: (string|null);

        /** FileAddStatus successStatusCode */
        successStatusCode?: (number|null);
    }

    /** Represents a FileAddStatus. */
    class FileAddStatus implements IFileAddStatus {

        /**
         * Constructs a new FileAddStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IFileAddStatus);

        /** FileAddStatus recordUid. */
        public recordUid: Uint8Array;

        /** FileAddStatus status. */
        public status: Records.FileAddResult;

        /** FileAddStatus url. */
        public url: string;

        /** FileAddStatus parameters. */
        public parameters: string;

        /** FileAddStatus thumbnailParameters. */
        public thumbnailParameters: string;

        /** FileAddStatus successStatusCode. */
        public successStatusCode: number;

        /**
         * Creates a new FileAddStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FileAddStatus instance
         */
        public static create(properties?: Records.IFileAddStatus): Records.FileAddStatus;

        /**
         * Encodes the specified FileAddStatus message. Does not implicitly {@link Records.FileAddStatus.verify|verify} messages.
         * @param message FileAddStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IFileAddStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FileAddStatus message, length delimited. Does not implicitly {@link Records.FileAddStatus.verify|verify} messages.
         * @param message FileAddStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IFileAddStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FileAddStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FileAddStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.FileAddStatus;

        /**
         * Decodes a FileAddStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FileAddStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.FileAddStatus;

        /**
         * Verifies a FileAddStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FileAddStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FileAddStatus
         */
        public static fromObject(object: { [k: string]: any }): Records.FileAddStatus;

        /**
         * Creates a plain object from a FileAddStatus message. Also converts values to other types if specified.
         * @param message FileAddStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.FileAddStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FileAddStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FilesAddResponse. */
    interface IFilesAddResponse {

        /** FilesAddResponse files */
        files?: (Records.IFileAddStatus[]|null);

        /** FilesAddResponse revision */
        revision?: (number|Long|null);
    }

    /** Represents a FilesAddResponse. */
    class FilesAddResponse implements IFilesAddResponse {

        /**
         * Constructs a new FilesAddResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IFilesAddResponse);

        /** FilesAddResponse files. */
        public files: Records.IFileAddStatus[];

        /** FilesAddResponse revision. */
        public revision: (number|Long);

        /**
         * Creates a new FilesAddResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FilesAddResponse instance
         */
        public static create(properties?: Records.IFilesAddResponse): Records.FilesAddResponse;

        /**
         * Encodes the specified FilesAddResponse message. Does not implicitly {@link Records.FilesAddResponse.verify|verify} messages.
         * @param message FilesAddResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IFilesAddResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FilesAddResponse message, length delimited. Does not implicitly {@link Records.FilesAddResponse.verify|verify} messages.
         * @param message FilesAddResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IFilesAddResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FilesAddResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FilesAddResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.FilesAddResponse;

        /**
         * Decodes a FilesAddResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FilesAddResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.FilesAddResponse;

        /**
         * Verifies a FilesAddResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FilesAddResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FilesAddResponse
         */
        public static fromObject(object: { [k: string]: any }): Records.FilesAddResponse;

        /**
         * Creates a plain object from a FilesAddResponse message. Also converts values to other types if specified.
         * @param message FilesAddResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.FilesAddResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FilesAddResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FilesGetRequest. */
    interface IFilesGetRequest {

        /** FilesGetRequest recordUids */
        recordUids?: (Uint8Array[]|null);

        /** FilesGetRequest forThumbnails */
        forThumbnails?: (boolean|null);

        /** FilesGetRequest emergencyAccessAccountOwner */
        emergencyAccessAccountOwner?: (string|null);
    }

    /** Represents a FilesGetRequest. */
    class FilesGetRequest implements IFilesGetRequest {

        /**
         * Constructs a new FilesGetRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IFilesGetRequest);

        /** FilesGetRequest recordUids. */
        public recordUids: Uint8Array[];

        /** FilesGetRequest forThumbnails. */
        public forThumbnails: boolean;

        /** FilesGetRequest emergencyAccessAccountOwner. */
        public emergencyAccessAccountOwner: string;

        /**
         * Creates a new FilesGetRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FilesGetRequest instance
         */
        public static create(properties?: Records.IFilesGetRequest): Records.FilesGetRequest;

        /**
         * Encodes the specified FilesGetRequest message. Does not implicitly {@link Records.FilesGetRequest.verify|verify} messages.
         * @param message FilesGetRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IFilesGetRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FilesGetRequest message, length delimited. Does not implicitly {@link Records.FilesGetRequest.verify|verify} messages.
         * @param message FilesGetRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IFilesGetRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FilesGetRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FilesGetRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.FilesGetRequest;

        /**
         * Decodes a FilesGetRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FilesGetRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.FilesGetRequest;

        /**
         * Verifies a FilesGetRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FilesGetRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FilesGetRequest
         */
        public static fromObject(object: { [k: string]: any }): Records.FilesGetRequest;

        /**
         * Creates a plain object from a FilesGetRequest message. Also converts values to other types if specified.
         * @param message FilesGetRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.FilesGetRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FilesGetRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** FileGetResult enum. */
    enum FileGetResult {
        FG_SUCCESS = 0,
        FG_ERROR = 1,
        FG_ACCESS_DENIED = 2
    }

    /** Properties of a FileGetStatus. */
    interface IFileGetStatus {

        /** FileGetStatus recordUid */
        recordUid?: (Uint8Array|null);

        /** FileGetStatus status */
        status?: (Records.FileGetResult|null);

        /** FileGetStatus url */
        url?: (string|null);

        /** FileGetStatus successStatusCode */
        successStatusCode?: (number|null);

        /** FileGetStatus fileKeyType */
        fileKeyType?: (Records.RecordKeyType|null);
    }

    /** Represents a FileGetStatus. */
    class FileGetStatus implements IFileGetStatus {

        /**
         * Constructs a new FileGetStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IFileGetStatus);

        /** FileGetStatus recordUid. */
        public recordUid: Uint8Array;

        /** FileGetStatus status. */
        public status: Records.FileGetResult;

        /** FileGetStatus url. */
        public url: string;

        /** FileGetStatus successStatusCode. */
        public successStatusCode: number;

        /** FileGetStatus fileKeyType. */
        public fileKeyType: Records.RecordKeyType;

        /**
         * Creates a new FileGetStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FileGetStatus instance
         */
        public static create(properties?: Records.IFileGetStatus): Records.FileGetStatus;

        /**
         * Encodes the specified FileGetStatus message. Does not implicitly {@link Records.FileGetStatus.verify|verify} messages.
         * @param message FileGetStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IFileGetStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FileGetStatus message, length delimited. Does not implicitly {@link Records.FileGetStatus.verify|verify} messages.
         * @param message FileGetStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IFileGetStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FileGetStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FileGetStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.FileGetStatus;

        /**
         * Decodes a FileGetStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FileGetStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.FileGetStatus;

        /**
         * Verifies a FileGetStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FileGetStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FileGetStatus
         */
        public static fromObject(object: { [k: string]: any }): Records.FileGetStatus;

        /**
         * Creates a plain object from a FileGetStatus message. Also converts values to other types if specified.
         * @param message FileGetStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.FileGetStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FileGetStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FilesGetResponse. */
    interface IFilesGetResponse {

        /** FilesGetResponse files */
        files?: (Records.IFileGetStatus[]|null);
    }

    /** Represents a FilesGetResponse. */
    class FilesGetResponse implements IFilesGetResponse {

        /**
         * Constructs a new FilesGetResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IFilesGetResponse);

        /** FilesGetResponse files. */
        public files: Records.IFileGetStatus[];

        /**
         * Creates a new FilesGetResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FilesGetResponse instance
         */
        public static create(properties?: Records.IFilesGetResponse): Records.FilesGetResponse;

        /**
         * Encodes the specified FilesGetResponse message. Does not implicitly {@link Records.FilesGetResponse.verify|verify} messages.
         * @param message FilesGetResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IFilesGetResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FilesGetResponse message, length delimited. Does not implicitly {@link Records.FilesGetResponse.verify|verify} messages.
         * @param message FilesGetResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IFilesGetResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FilesGetResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FilesGetResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.FilesGetResponse;

        /**
         * Decodes a FilesGetResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FilesGetResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.FilesGetResponse;

        /**
         * Verifies a FilesGetResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FilesGetResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FilesGetResponse
         */
        public static fromObject(object: { [k: string]: any }): Records.FilesGetResponse;

        /**
         * Creates a plain object from a FilesGetResponse message. Also converts values to other types if specified.
         * @param message FilesGetResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.FilesGetResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FilesGetResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ApplicationAddRequest. */
    interface IApplicationAddRequest {

        /** ApplicationAddRequest appUid */
        appUid?: (Uint8Array|null);

        /** ApplicationAddRequest recordKey */
        recordKey?: (Uint8Array|null);

        /** ApplicationAddRequest clientModifiedTime */
        clientModifiedTime?: (number|Long|null);

        /** ApplicationAddRequest data */
        data?: (Uint8Array|null);
    }

    /** Represents an ApplicationAddRequest. */
    class ApplicationAddRequest implements IApplicationAddRequest {

        /**
         * Constructs a new ApplicationAddRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IApplicationAddRequest);

        /** ApplicationAddRequest appUid. */
        public appUid: Uint8Array;

        /** ApplicationAddRequest recordKey. */
        public recordKey: Uint8Array;

        /** ApplicationAddRequest clientModifiedTime. */
        public clientModifiedTime: (number|Long);

        /** ApplicationAddRequest data. */
        public data: Uint8Array;

        /**
         * Creates a new ApplicationAddRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApplicationAddRequest instance
         */
        public static create(properties?: Records.IApplicationAddRequest): Records.ApplicationAddRequest;

        /**
         * Encodes the specified ApplicationAddRequest message. Does not implicitly {@link Records.ApplicationAddRequest.verify|verify} messages.
         * @param message ApplicationAddRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IApplicationAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ApplicationAddRequest message, length delimited. Does not implicitly {@link Records.ApplicationAddRequest.verify|verify} messages.
         * @param message ApplicationAddRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IApplicationAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ApplicationAddRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApplicationAddRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.ApplicationAddRequest;

        /**
         * Decodes an ApplicationAddRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApplicationAddRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.ApplicationAddRequest;

        /**
         * Verifies an ApplicationAddRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ApplicationAddRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ApplicationAddRequest
         */
        public static fromObject(object: { [k: string]: any }): Records.ApplicationAddRequest;

        /**
         * Creates a plain object from an ApplicationAddRequest message. Also converts values to other types if specified.
         * @param message ApplicationAddRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.ApplicationAddRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ApplicationAddRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** RecordDetailsInclude enum. */
    enum RecordDetailsInclude {
        DATA_PLUS_SHARE = 0,
        DATA_ONLY = 1,
        SHARE_ONLY = 2
    }

    /** Properties of a GetRecordDataWithAccessInfoRequest. */
    interface IGetRecordDataWithAccessInfoRequest {

        /** GetRecordDataWithAccessInfoRequest clientTime */
        clientTime?: (number|Long|null);

        /** GetRecordDataWithAccessInfoRequest recordUid */
        recordUid?: (Uint8Array[]|null);

        /** GetRecordDataWithAccessInfoRequest recordDetailsInclude */
        recordDetailsInclude?: (Records.RecordDetailsInclude|null);
    }

    /** Represents a GetRecordDataWithAccessInfoRequest. */
    class GetRecordDataWithAccessInfoRequest implements IGetRecordDataWithAccessInfoRequest {

        /**
         * Constructs a new GetRecordDataWithAccessInfoRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IGetRecordDataWithAccessInfoRequest);

        /** GetRecordDataWithAccessInfoRequest clientTime. */
        public clientTime: (number|Long);

        /** GetRecordDataWithAccessInfoRequest recordUid. */
        public recordUid: Uint8Array[];

        /** GetRecordDataWithAccessInfoRequest recordDetailsInclude. */
        public recordDetailsInclude: Records.RecordDetailsInclude;

        /**
         * Creates a new GetRecordDataWithAccessInfoRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetRecordDataWithAccessInfoRequest instance
         */
        public static create(properties?: Records.IGetRecordDataWithAccessInfoRequest): Records.GetRecordDataWithAccessInfoRequest;

        /**
         * Encodes the specified GetRecordDataWithAccessInfoRequest message. Does not implicitly {@link Records.GetRecordDataWithAccessInfoRequest.verify|verify} messages.
         * @param message GetRecordDataWithAccessInfoRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IGetRecordDataWithAccessInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetRecordDataWithAccessInfoRequest message, length delimited. Does not implicitly {@link Records.GetRecordDataWithAccessInfoRequest.verify|verify} messages.
         * @param message GetRecordDataWithAccessInfoRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IGetRecordDataWithAccessInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetRecordDataWithAccessInfoRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetRecordDataWithAccessInfoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.GetRecordDataWithAccessInfoRequest;

        /**
         * Decodes a GetRecordDataWithAccessInfoRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetRecordDataWithAccessInfoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.GetRecordDataWithAccessInfoRequest;

        /**
         * Verifies a GetRecordDataWithAccessInfoRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetRecordDataWithAccessInfoRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetRecordDataWithAccessInfoRequest
         */
        public static fromObject(object: { [k: string]: any }): Records.GetRecordDataWithAccessInfoRequest;

        /**
         * Creates a plain object from a GetRecordDataWithAccessInfoRequest message. Also converts values to other types if specified.
         * @param message GetRecordDataWithAccessInfoRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.GetRecordDataWithAccessInfoRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetRecordDataWithAccessInfoRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserPermission. */
    interface IUserPermission {

        /** UserPermission username */
        username?: (string|null);

        /** UserPermission owner */
        owner?: (boolean|null);

        /** UserPermission shareAdmin */
        shareAdmin?: (boolean|null);

        /** UserPermission sharable */
        sharable?: (boolean|null);

        /** UserPermission editable */
        editable?: (boolean|null);

        /** UserPermission awaitingApproval */
        awaitingApproval?: (boolean|null);

        /** UserPermission expiration */
        expiration?: (number|Long|null);

        /** UserPermission accountUid */
        accountUid?: (Uint8Array|null);
    }

    /** Represents a UserPermission. */
    class UserPermission implements IUserPermission {

        /**
         * Constructs a new UserPermission.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IUserPermission);

        /** UserPermission username. */
        public username: string;

        /** UserPermission owner. */
        public owner: boolean;

        /** UserPermission shareAdmin. */
        public shareAdmin: boolean;

        /** UserPermission sharable. */
        public sharable: boolean;

        /** UserPermission editable. */
        public editable: boolean;

        /** UserPermission awaitingApproval. */
        public awaitingApproval: boolean;

        /** UserPermission expiration. */
        public expiration: (number|Long);

        /** UserPermission accountUid. */
        public accountUid: Uint8Array;

        /**
         * Creates a new UserPermission instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserPermission instance
         */
        public static create(properties?: Records.IUserPermission): Records.UserPermission;

        /**
         * Encodes the specified UserPermission message. Does not implicitly {@link Records.UserPermission.verify|verify} messages.
         * @param message UserPermission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IUserPermission, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserPermission message, length delimited. Does not implicitly {@link Records.UserPermission.verify|verify} messages.
         * @param message UserPermission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IUserPermission, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserPermission message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserPermission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.UserPermission;

        /**
         * Decodes a UserPermission message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserPermission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.UserPermission;

        /**
         * Verifies a UserPermission message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserPermission message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserPermission
         */
        public static fromObject(object: { [k: string]: any }): Records.UserPermission;

        /**
         * Creates a plain object from a UserPermission message. Also converts values to other types if specified.
         * @param message UserPermission
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.UserPermission, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserPermission to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderPermission. */
    interface ISharedFolderPermission {

        /** SharedFolderPermission sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** SharedFolderPermission resharable */
        resharable?: (boolean|null);

        /** SharedFolderPermission editable */
        editable?: (boolean|null);

        /** SharedFolderPermission revision */
        revision?: (number|Long|null);

        /** SharedFolderPermission expiration */
        expiration?: (number|Long|null);
    }

    /** Represents a SharedFolderPermission. */
    class SharedFolderPermission implements ISharedFolderPermission {

        /**
         * Constructs a new SharedFolderPermission.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.ISharedFolderPermission);

        /** SharedFolderPermission sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** SharedFolderPermission resharable. */
        public resharable: boolean;

        /** SharedFolderPermission editable. */
        public editable: boolean;

        /** SharedFolderPermission revision. */
        public revision: (number|Long);

        /** SharedFolderPermission expiration. */
        public expiration: (number|Long);

        /**
         * Creates a new SharedFolderPermission instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderPermission instance
         */
        public static create(properties?: Records.ISharedFolderPermission): Records.SharedFolderPermission;

        /**
         * Encodes the specified SharedFolderPermission message. Does not implicitly {@link Records.SharedFolderPermission.verify|verify} messages.
         * @param message SharedFolderPermission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.ISharedFolderPermission, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderPermission message, length delimited. Does not implicitly {@link Records.SharedFolderPermission.verify|verify} messages.
         * @param message SharedFolderPermission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.ISharedFolderPermission, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderPermission message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderPermission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.SharedFolderPermission;

        /**
         * Decodes a SharedFolderPermission message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderPermission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.SharedFolderPermission;

        /**
         * Verifies a SharedFolderPermission message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderPermission message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderPermission
         */
        public static fromObject(object: { [k: string]: any }): Records.SharedFolderPermission;

        /**
         * Creates a plain object from a SharedFolderPermission message. Also converts values to other types if specified.
         * @param message SharedFolderPermission
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.SharedFolderPermission, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderPermission to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordData. */
    interface IRecordData {

        /** RecordData revision */
        revision?: (number|Long|null);

        /** RecordData version */
        version?: (number|null);

        /** RecordData shared */
        shared?: (boolean|null);

        /** RecordData encryptedRecordData */
        encryptedRecordData?: (string|null);

        /** RecordData encryptedExtraData */
        encryptedExtraData?: (string|null);

        /** RecordData clientModifiedTime */
        clientModifiedTime?: (number|Long|null);

        /** RecordData nonSharedData */
        nonSharedData?: (string|null);

        /** RecordData linkedRecordData */
        linkedRecordData?: (Records.IRecordData[]|null);

        /** RecordData fileId */
        fileId?: (Uint8Array[]|null);

        /** RecordData fileSize */
        fileSize?: (number|Long|null);

        /** RecordData thumbnailSize */
        thumbnailSize?: (number|Long|null);

        /** RecordData recordKeyType */
        recordKeyType?: (Records.RecordKeyType|null);

        /** RecordData recordKey */
        recordKey?: (Uint8Array|null);

        /** RecordData recordUid */
        recordUid?: (Uint8Array|null);
    }

    /** Represents a RecordData. */
    class RecordData implements IRecordData {

        /**
         * Constructs a new RecordData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordData);

        /** RecordData revision. */
        public revision: (number|Long);

        /** RecordData version. */
        public version: number;

        /** RecordData shared. */
        public shared: boolean;

        /** RecordData encryptedRecordData. */
        public encryptedRecordData: string;

        /** RecordData encryptedExtraData. */
        public encryptedExtraData: string;

        /** RecordData clientModifiedTime. */
        public clientModifiedTime: (number|Long);

        /** RecordData nonSharedData. */
        public nonSharedData: string;

        /** RecordData linkedRecordData. */
        public linkedRecordData: Records.IRecordData[];

        /** RecordData fileId. */
        public fileId: Uint8Array[];

        /** RecordData fileSize. */
        public fileSize: (number|Long);

        /** RecordData thumbnailSize. */
        public thumbnailSize: (number|Long);

        /** RecordData recordKeyType. */
        public recordKeyType: Records.RecordKeyType;

        /** RecordData recordKey. */
        public recordKey: Uint8Array;

        /** RecordData recordUid. */
        public recordUid: Uint8Array;

        /**
         * Creates a new RecordData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordData instance
         */
        public static create(properties?: Records.IRecordData): Records.RecordData;

        /**
         * Encodes the specified RecordData message. Does not implicitly {@link Records.RecordData.verify|verify} messages.
         * @param message RecordData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordData message, length delimited. Does not implicitly {@link Records.RecordData.verify|verify} messages.
         * @param message RecordData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordData;

        /**
         * Decodes a RecordData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordData;

        /**
         * Verifies a RecordData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordData
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordData;

        /**
         * Creates a plain object from a RecordData message. Also converts values to other types if specified.
         * @param message RecordData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordDataWithAccessInfo. */
    interface IRecordDataWithAccessInfo {

        /** RecordDataWithAccessInfo recordUid */
        recordUid?: (Uint8Array|null);

        /** RecordDataWithAccessInfo recordData */
        recordData?: (Records.IRecordData|null);

        /** RecordDataWithAccessInfo userPermission */
        userPermission?: (Records.IUserPermission[]|null);

        /** RecordDataWithAccessInfo sharedFolderPermission */
        sharedFolderPermission?: (Records.ISharedFolderPermission[]|null);
    }

    /** Represents a RecordDataWithAccessInfo. */
    class RecordDataWithAccessInfo implements IRecordDataWithAccessInfo {

        /**
         * Constructs a new RecordDataWithAccessInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordDataWithAccessInfo);

        /** RecordDataWithAccessInfo recordUid. */
        public recordUid: Uint8Array;

        /** RecordDataWithAccessInfo recordData. */
        public recordData?: (Records.IRecordData|null);

        /** RecordDataWithAccessInfo userPermission. */
        public userPermission: Records.IUserPermission[];

        /** RecordDataWithAccessInfo sharedFolderPermission. */
        public sharedFolderPermission: Records.ISharedFolderPermission[];

        /**
         * Creates a new RecordDataWithAccessInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordDataWithAccessInfo instance
         */
        public static create(properties?: Records.IRecordDataWithAccessInfo): Records.RecordDataWithAccessInfo;

        /**
         * Encodes the specified RecordDataWithAccessInfo message. Does not implicitly {@link Records.RecordDataWithAccessInfo.verify|verify} messages.
         * @param message RecordDataWithAccessInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordDataWithAccessInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordDataWithAccessInfo message, length delimited. Does not implicitly {@link Records.RecordDataWithAccessInfo.verify|verify} messages.
         * @param message RecordDataWithAccessInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordDataWithAccessInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordDataWithAccessInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordDataWithAccessInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordDataWithAccessInfo;

        /**
         * Decodes a RecordDataWithAccessInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordDataWithAccessInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordDataWithAccessInfo;

        /**
         * Verifies a RecordDataWithAccessInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordDataWithAccessInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordDataWithAccessInfo
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordDataWithAccessInfo;

        /**
         * Creates a plain object from a RecordDataWithAccessInfo message. Also converts values to other types if specified.
         * @param message RecordDataWithAccessInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordDataWithAccessInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordDataWithAccessInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetRecordDataWithAccessInfoResponse. */
    interface IGetRecordDataWithAccessInfoResponse {

        /** GetRecordDataWithAccessInfoResponse recordDataWithAccessInfo */
        recordDataWithAccessInfo?: (Records.IRecordDataWithAccessInfo[]|null);

        /** GetRecordDataWithAccessInfoResponse noPermissionRecordUid */
        noPermissionRecordUid?: (Uint8Array[]|null);
    }

    /** Represents a GetRecordDataWithAccessInfoResponse. */
    class GetRecordDataWithAccessInfoResponse implements IGetRecordDataWithAccessInfoResponse {

        /**
         * Constructs a new GetRecordDataWithAccessInfoResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IGetRecordDataWithAccessInfoResponse);

        /** GetRecordDataWithAccessInfoResponse recordDataWithAccessInfo. */
        public recordDataWithAccessInfo: Records.IRecordDataWithAccessInfo[];

        /** GetRecordDataWithAccessInfoResponse noPermissionRecordUid. */
        public noPermissionRecordUid: Uint8Array[];

        /**
         * Creates a new GetRecordDataWithAccessInfoResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetRecordDataWithAccessInfoResponse instance
         */
        public static create(properties?: Records.IGetRecordDataWithAccessInfoResponse): Records.GetRecordDataWithAccessInfoResponse;

        /**
         * Encodes the specified GetRecordDataWithAccessInfoResponse message. Does not implicitly {@link Records.GetRecordDataWithAccessInfoResponse.verify|verify} messages.
         * @param message GetRecordDataWithAccessInfoResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IGetRecordDataWithAccessInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetRecordDataWithAccessInfoResponse message, length delimited. Does not implicitly {@link Records.GetRecordDataWithAccessInfoResponse.verify|verify} messages.
         * @param message GetRecordDataWithAccessInfoResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IGetRecordDataWithAccessInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetRecordDataWithAccessInfoResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetRecordDataWithAccessInfoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.GetRecordDataWithAccessInfoResponse;

        /**
         * Decodes a GetRecordDataWithAccessInfoResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetRecordDataWithAccessInfoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.GetRecordDataWithAccessInfoResponse;

        /**
         * Verifies a GetRecordDataWithAccessInfoResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetRecordDataWithAccessInfoResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetRecordDataWithAccessInfoResponse
         */
        public static fromObject(object: { [k: string]: any }): Records.GetRecordDataWithAccessInfoResponse;

        /**
         * Creates a plain object from a GetRecordDataWithAccessInfoResponse message. Also converts values to other types if specified.
         * @param message GetRecordDataWithAccessInfoResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.GetRecordDataWithAccessInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetRecordDataWithAccessInfoResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** CheckShareAdminObjectType enum. */
    enum CheckShareAdminObjectType {
        CHECK_SA_INVALID_TYPE = 0,
        CHECK_SA_ON_SF = 1,
        CHECK_SA_ON_RECORD = 2
    }

    /** Properties of an IsObjectShareAdmin. */
    interface IIsObjectShareAdmin {

        /** IsObjectShareAdmin uid */
        uid?: (Uint8Array|null);

        /** IsObjectShareAdmin isAdmin */
        isAdmin?: (boolean|null);

        /** IsObjectShareAdmin objectType */
        objectType?: (Records.CheckShareAdminObjectType|null);
    }

    /** Represents an IsObjectShareAdmin. */
    class IsObjectShareAdmin implements IIsObjectShareAdmin {

        /**
         * Constructs a new IsObjectShareAdmin.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IIsObjectShareAdmin);

        /** IsObjectShareAdmin uid. */
        public uid: Uint8Array;

        /** IsObjectShareAdmin isAdmin. */
        public isAdmin: boolean;

        /** IsObjectShareAdmin objectType. */
        public objectType: Records.CheckShareAdminObjectType;

        /**
         * Creates a new IsObjectShareAdmin instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IsObjectShareAdmin instance
         */
        public static create(properties?: Records.IIsObjectShareAdmin): Records.IsObjectShareAdmin;

        /**
         * Encodes the specified IsObjectShareAdmin message. Does not implicitly {@link Records.IsObjectShareAdmin.verify|verify} messages.
         * @param message IsObjectShareAdmin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IIsObjectShareAdmin, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IsObjectShareAdmin message, length delimited. Does not implicitly {@link Records.IsObjectShareAdmin.verify|verify} messages.
         * @param message IsObjectShareAdmin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IIsObjectShareAdmin, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IsObjectShareAdmin message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IsObjectShareAdmin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.IsObjectShareAdmin;

        /**
         * Decodes an IsObjectShareAdmin message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IsObjectShareAdmin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.IsObjectShareAdmin;

        /**
         * Verifies an IsObjectShareAdmin message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IsObjectShareAdmin message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IsObjectShareAdmin
         */
        public static fromObject(object: { [k: string]: any }): Records.IsObjectShareAdmin;

        /**
         * Creates a plain object from an IsObjectShareAdmin message. Also converts values to other types if specified.
         * @param message IsObjectShareAdmin
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.IsObjectShareAdmin, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IsObjectShareAdmin to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AmIShareAdmin. */
    interface IAmIShareAdmin {

        /** AmIShareAdmin isObjectShareAdmin */
        isObjectShareAdmin?: (Records.IIsObjectShareAdmin[]|null);
    }

    /** Represents an AmIShareAdmin. */
    class AmIShareAdmin implements IAmIShareAdmin {

        /**
         * Constructs a new AmIShareAdmin.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IAmIShareAdmin);

        /** AmIShareAdmin isObjectShareAdmin. */
        public isObjectShareAdmin: Records.IIsObjectShareAdmin[];

        /**
         * Creates a new AmIShareAdmin instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AmIShareAdmin instance
         */
        public static create(properties?: Records.IAmIShareAdmin): Records.AmIShareAdmin;

        /**
         * Encodes the specified AmIShareAdmin message. Does not implicitly {@link Records.AmIShareAdmin.verify|verify} messages.
         * @param message AmIShareAdmin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IAmIShareAdmin, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AmIShareAdmin message, length delimited. Does not implicitly {@link Records.AmIShareAdmin.verify|verify} messages.
         * @param message AmIShareAdmin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IAmIShareAdmin, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AmIShareAdmin message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AmIShareAdmin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.AmIShareAdmin;

        /**
         * Decodes an AmIShareAdmin message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AmIShareAdmin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.AmIShareAdmin;

        /**
         * Verifies an AmIShareAdmin message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AmIShareAdmin message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AmIShareAdmin
         */
        public static fromObject(object: { [k: string]: any }): Records.AmIShareAdmin;

        /**
         * Creates a plain object from an AmIShareAdmin message. Also converts values to other types if specified.
         * @param message AmIShareAdmin
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.AmIShareAdmin, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AmIShareAdmin to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordShareUpdateRequest. */
    interface IRecordShareUpdateRequest {

        /** RecordShareUpdateRequest addSharedRecord */
        addSharedRecord?: (Records.ISharedRecord[]|null);

        /** RecordShareUpdateRequest updateSharedRecord */
        updateSharedRecord?: (Records.ISharedRecord[]|null);

        /** RecordShareUpdateRequest removeSharedRecord */
        removeSharedRecord?: (Records.ISharedRecord[]|null);

        /** RecordShareUpdateRequest pt */
        pt?: (string|null);
    }

    /** Represents a RecordShareUpdateRequest. */
    class RecordShareUpdateRequest implements IRecordShareUpdateRequest {

        /**
         * Constructs a new RecordShareUpdateRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordShareUpdateRequest);

        /** RecordShareUpdateRequest addSharedRecord. */
        public addSharedRecord: Records.ISharedRecord[];

        /** RecordShareUpdateRequest updateSharedRecord. */
        public updateSharedRecord: Records.ISharedRecord[];

        /** RecordShareUpdateRequest removeSharedRecord. */
        public removeSharedRecord: Records.ISharedRecord[];

        /** RecordShareUpdateRequest pt. */
        public pt: string;

        /**
         * Creates a new RecordShareUpdateRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordShareUpdateRequest instance
         */
        public static create(properties?: Records.IRecordShareUpdateRequest): Records.RecordShareUpdateRequest;

        /**
         * Encodes the specified RecordShareUpdateRequest message. Does not implicitly {@link Records.RecordShareUpdateRequest.verify|verify} messages.
         * @param message RecordShareUpdateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordShareUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordShareUpdateRequest message, length delimited. Does not implicitly {@link Records.RecordShareUpdateRequest.verify|verify} messages.
         * @param message RecordShareUpdateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordShareUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordShareUpdateRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordShareUpdateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordShareUpdateRequest;

        /**
         * Decodes a RecordShareUpdateRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordShareUpdateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordShareUpdateRequest;

        /**
         * Verifies a RecordShareUpdateRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordShareUpdateRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordShareUpdateRequest
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordShareUpdateRequest;

        /**
         * Creates a plain object from a RecordShareUpdateRequest message. Also converts values to other types if specified.
         * @param message RecordShareUpdateRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordShareUpdateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordShareUpdateRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedRecord. */
    interface ISharedRecord {

        /** SharedRecord toUsername */
        toUsername?: (string|null);

        /** SharedRecord recordUid */
        recordUid?: (Uint8Array|null);

        /** SharedRecord recordKey */
        recordKey?: (Uint8Array|null);

        /** SharedRecord sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** SharedRecord teamUid */
        teamUid?: (Uint8Array|null);

        /** SharedRecord editable */
        editable?: (boolean|null);

        /** SharedRecord shareable */
        shareable?: (boolean|null);

        /** SharedRecord transfer */
        transfer?: (boolean|null);

        /** SharedRecord useEccKey */
        useEccKey?: (boolean|null);

        /** SharedRecord removeVaultData */
        removeVaultData?: (boolean|null);

        /** SharedRecord expiration */
        expiration?: (number|Long|null);
    }

    /** Represents a SharedRecord. */
    class SharedRecord implements ISharedRecord {

        /**
         * Constructs a new SharedRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.ISharedRecord);

        /** SharedRecord toUsername. */
        public toUsername: string;

        /** SharedRecord recordUid. */
        public recordUid: Uint8Array;

        /** SharedRecord recordKey. */
        public recordKey: Uint8Array;

        /** SharedRecord sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** SharedRecord teamUid. */
        public teamUid: Uint8Array;

        /** SharedRecord editable. */
        public editable: boolean;

        /** SharedRecord shareable. */
        public shareable: boolean;

        /** SharedRecord transfer. */
        public transfer: boolean;

        /** SharedRecord useEccKey. */
        public useEccKey: boolean;

        /** SharedRecord removeVaultData. */
        public removeVaultData: boolean;

        /** SharedRecord expiration. */
        public expiration: (number|Long);

        /**
         * Creates a new SharedRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedRecord instance
         */
        public static create(properties?: Records.ISharedRecord): Records.SharedRecord;

        /**
         * Encodes the specified SharedRecord message. Does not implicitly {@link Records.SharedRecord.verify|verify} messages.
         * @param message SharedRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.ISharedRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedRecord message, length delimited. Does not implicitly {@link Records.SharedRecord.verify|verify} messages.
         * @param message SharedRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.ISharedRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.SharedRecord;

        /**
         * Decodes a SharedRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.SharedRecord;

        /**
         * Verifies a SharedRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedRecord
         */
        public static fromObject(object: { [k: string]: any }): Records.SharedRecord;

        /**
         * Creates a plain object from a SharedRecord message. Also converts values to other types if specified.
         * @param message SharedRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.SharedRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordShareUpdateResponse. */
    interface IRecordShareUpdateResponse {

        /** RecordShareUpdateResponse addSharedRecordStatus */
        addSharedRecordStatus?: (Records.ISharedRecordStatus[]|null);

        /** RecordShareUpdateResponse updateSharedRecordStatus */
        updateSharedRecordStatus?: (Records.ISharedRecordStatus[]|null);

        /** RecordShareUpdateResponse removeSharedRecordStatus */
        removeSharedRecordStatus?: (Records.ISharedRecordStatus[]|null);
    }

    /** Represents a RecordShareUpdateResponse. */
    class RecordShareUpdateResponse implements IRecordShareUpdateResponse {

        /**
         * Constructs a new RecordShareUpdateResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordShareUpdateResponse);

        /** RecordShareUpdateResponse addSharedRecordStatus. */
        public addSharedRecordStatus: Records.ISharedRecordStatus[];

        /** RecordShareUpdateResponse updateSharedRecordStatus. */
        public updateSharedRecordStatus: Records.ISharedRecordStatus[];

        /** RecordShareUpdateResponse removeSharedRecordStatus. */
        public removeSharedRecordStatus: Records.ISharedRecordStatus[];

        /**
         * Creates a new RecordShareUpdateResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordShareUpdateResponse instance
         */
        public static create(properties?: Records.IRecordShareUpdateResponse): Records.RecordShareUpdateResponse;

        /**
         * Encodes the specified RecordShareUpdateResponse message. Does not implicitly {@link Records.RecordShareUpdateResponse.verify|verify} messages.
         * @param message RecordShareUpdateResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordShareUpdateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordShareUpdateResponse message, length delimited. Does not implicitly {@link Records.RecordShareUpdateResponse.verify|verify} messages.
         * @param message RecordShareUpdateResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordShareUpdateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordShareUpdateResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordShareUpdateResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordShareUpdateResponse;

        /**
         * Decodes a RecordShareUpdateResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordShareUpdateResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordShareUpdateResponse;

        /**
         * Verifies a RecordShareUpdateResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordShareUpdateResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordShareUpdateResponse
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordShareUpdateResponse;

        /**
         * Creates a plain object from a RecordShareUpdateResponse message. Also converts values to other types if specified.
         * @param message RecordShareUpdateResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordShareUpdateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordShareUpdateResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedRecordStatus. */
    interface ISharedRecordStatus {

        /** SharedRecordStatus recordUid */
        recordUid?: (Uint8Array|null);

        /** SharedRecordStatus status */
        status?: (string|null);

        /** SharedRecordStatus message */
        message?: (string|null);

        /** SharedRecordStatus username */
        username?: (string|null);
    }

    /** Represents a SharedRecordStatus. */
    class SharedRecordStatus implements ISharedRecordStatus {

        /**
         * Constructs a new SharedRecordStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.ISharedRecordStatus);

        /** SharedRecordStatus recordUid. */
        public recordUid: Uint8Array;

        /** SharedRecordStatus status. */
        public status: string;

        /** SharedRecordStatus message. */
        public message: string;

        /** SharedRecordStatus username. */
        public username: string;

        /**
         * Creates a new SharedRecordStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedRecordStatus instance
         */
        public static create(properties?: Records.ISharedRecordStatus): Records.SharedRecordStatus;

        /**
         * Encodes the specified SharedRecordStatus message. Does not implicitly {@link Records.SharedRecordStatus.verify|verify} messages.
         * @param message SharedRecordStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.ISharedRecordStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedRecordStatus message, length delimited. Does not implicitly {@link Records.SharedRecordStatus.verify|verify} messages.
         * @param message SharedRecordStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.ISharedRecordStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedRecordStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedRecordStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.SharedRecordStatus;

        /**
         * Decodes a SharedRecordStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedRecordStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.SharedRecordStatus;

        /**
         * Verifies a SharedRecordStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedRecordStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedRecordStatus
         */
        public static fromObject(object: { [k: string]: any }): Records.SharedRecordStatus;

        /**
         * Creates a plain object from a SharedRecordStatus message. Also converts values to other types if specified.
         * @param message SharedRecordStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.SharedRecordStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedRecordStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetRecordPermissionsRequest. */
    interface IGetRecordPermissionsRequest {

        /** GetRecordPermissionsRequest recordUids */
        recordUids?: (Uint8Array[]|null);

        /** GetRecordPermissionsRequest isShareAdmin */
        isShareAdmin?: (boolean|null);
    }

    /** Represents a GetRecordPermissionsRequest. */
    class GetRecordPermissionsRequest implements IGetRecordPermissionsRequest {

        /**
         * Constructs a new GetRecordPermissionsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IGetRecordPermissionsRequest);

        /** GetRecordPermissionsRequest recordUids. */
        public recordUids: Uint8Array[];

        /** GetRecordPermissionsRequest isShareAdmin. */
        public isShareAdmin: boolean;

        /**
         * Creates a new GetRecordPermissionsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetRecordPermissionsRequest instance
         */
        public static create(properties?: Records.IGetRecordPermissionsRequest): Records.GetRecordPermissionsRequest;

        /**
         * Encodes the specified GetRecordPermissionsRequest message. Does not implicitly {@link Records.GetRecordPermissionsRequest.verify|verify} messages.
         * @param message GetRecordPermissionsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IGetRecordPermissionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetRecordPermissionsRequest message, length delimited. Does not implicitly {@link Records.GetRecordPermissionsRequest.verify|verify} messages.
         * @param message GetRecordPermissionsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IGetRecordPermissionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetRecordPermissionsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetRecordPermissionsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.GetRecordPermissionsRequest;

        /**
         * Decodes a GetRecordPermissionsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetRecordPermissionsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.GetRecordPermissionsRequest;

        /**
         * Verifies a GetRecordPermissionsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetRecordPermissionsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetRecordPermissionsRequest
         */
        public static fromObject(object: { [k: string]: any }): Records.GetRecordPermissionsRequest;

        /**
         * Creates a plain object from a GetRecordPermissionsRequest message. Also converts values to other types if specified.
         * @param message GetRecordPermissionsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.GetRecordPermissionsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetRecordPermissionsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetRecordPermissionsResponse. */
    interface IGetRecordPermissionsResponse {

        /** GetRecordPermissionsResponse recordPermissions */
        recordPermissions?: (Records.IRecordPermission[]|null);
    }

    /** Represents a GetRecordPermissionsResponse. */
    class GetRecordPermissionsResponse implements IGetRecordPermissionsResponse {

        /**
         * Constructs a new GetRecordPermissionsResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IGetRecordPermissionsResponse);

        /** GetRecordPermissionsResponse recordPermissions. */
        public recordPermissions: Records.IRecordPermission[];

        /**
         * Creates a new GetRecordPermissionsResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetRecordPermissionsResponse instance
         */
        public static create(properties?: Records.IGetRecordPermissionsResponse): Records.GetRecordPermissionsResponse;

        /**
         * Encodes the specified GetRecordPermissionsResponse message. Does not implicitly {@link Records.GetRecordPermissionsResponse.verify|verify} messages.
         * @param message GetRecordPermissionsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IGetRecordPermissionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetRecordPermissionsResponse message, length delimited. Does not implicitly {@link Records.GetRecordPermissionsResponse.verify|verify} messages.
         * @param message GetRecordPermissionsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IGetRecordPermissionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetRecordPermissionsResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetRecordPermissionsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.GetRecordPermissionsResponse;

        /**
         * Decodes a GetRecordPermissionsResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetRecordPermissionsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.GetRecordPermissionsResponse;

        /**
         * Verifies a GetRecordPermissionsResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetRecordPermissionsResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetRecordPermissionsResponse
         */
        public static fromObject(object: { [k: string]: any }): Records.GetRecordPermissionsResponse;

        /**
         * Creates a plain object from a GetRecordPermissionsResponse message. Also converts values to other types if specified.
         * @param message GetRecordPermissionsResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.GetRecordPermissionsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetRecordPermissionsResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordPermission. */
    interface IRecordPermission {

        /** RecordPermission recordUid */
        recordUid?: (Uint8Array|null);

        /** RecordPermission owner */
        owner?: (boolean|null);

        /** RecordPermission canEdit */
        canEdit?: (boolean|null);

        /** RecordPermission canShare */
        canShare?: (boolean|null);

        /** RecordPermission canTransfer */
        canTransfer?: (boolean|null);
    }

    /** Represents a RecordPermission. */
    class RecordPermission implements IRecordPermission {

        /**
         * Constructs a new RecordPermission.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordPermission);

        /** RecordPermission recordUid. */
        public recordUid: Uint8Array;

        /** RecordPermission owner. */
        public owner: boolean;

        /** RecordPermission canEdit. */
        public canEdit: boolean;

        /** RecordPermission canShare. */
        public canShare: boolean;

        /** RecordPermission canTransfer. */
        public canTransfer: boolean;

        /**
         * Creates a new RecordPermission instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordPermission instance
         */
        public static create(properties?: Records.IRecordPermission): Records.RecordPermission;

        /**
         * Encodes the specified RecordPermission message. Does not implicitly {@link Records.RecordPermission.verify|verify} messages.
         * @param message RecordPermission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordPermission, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordPermission message, length delimited. Does not implicitly {@link Records.RecordPermission.verify|verify} messages.
         * @param message RecordPermission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordPermission, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordPermission message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordPermission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordPermission;

        /**
         * Decodes a RecordPermission message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordPermission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordPermission;

        /**
         * Verifies a RecordPermission message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordPermission message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordPermission
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordPermission;

        /**
         * Creates a plain object from a RecordPermission message. Also converts values to other types if specified.
         * @param message RecordPermission
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordPermission, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordPermission to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetShareObjectsRequest. */
    interface IGetShareObjectsRequest {

        /** GetShareObjectsRequest startWith */
        startWith?: (string|null);

        /** GetShareObjectsRequest contains */
        contains?: (string|null);

        /** GetShareObjectsRequest filtered */
        filtered?: (boolean|null);

        /** GetShareObjectsRequest sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);
    }

    /** Represents a GetShareObjectsRequest. */
    class GetShareObjectsRequest implements IGetShareObjectsRequest {

        /**
         * Constructs a new GetShareObjectsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IGetShareObjectsRequest);

        /** GetShareObjectsRequest startWith. */
        public startWith: string;

        /** GetShareObjectsRequest contains. */
        public contains: string;

        /** GetShareObjectsRequest filtered. */
        public filtered: boolean;

        /** GetShareObjectsRequest sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /**
         * Creates a new GetShareObjectsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetShareObjectsRequest instance
         */
        public static create(properties?: Records.IGetShareObjectsRequest): Records.GetShareObjectsRequest;

        /**
         * Encodes the specified GetShareObjectsRequest message. Does not implicitly {@link Records.GetShareObjectsRequest.verify|verify} messages.
         * @param message GetShareObjectsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IGetShareObjectsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetShareObjectsRequest message, length delimited. Does not implicitly {@link Records.GetShareObjectsRequest.verify|verify} messages.
         * @param message GetShareObjectsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IGetShareObjectsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetShareObjectsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetShareObjectsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.GetShareObjectsRequest;

        /**
         * Decodes a GetShareObjectsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetShareObjectsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.GetShareObjectsRequest;

        /**
         * Verifies a GetShareObjectsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetShareObjectsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetShareObjectsRequest
         */
        public static fromObject(object: { [k: string]: any }): Records.GetShareObjectsRequest;

        /**
         * Creates a plain object from a GetShareObjectsRequest message. Also converts values to other types if specified.
         * @param message GetShareObjectsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.GetShareObjectsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetShareObjectsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetShareObjectsResponse. */
    interface IGetShareObjectsResponse {

        /** GetShareObjectsResponse shareRelationships */
        shareRelationships?: (Records.IShareUser[]|null);

        /** GetShareObjectsResponse shareFamilyUsers */
        shareFamilyUsers?: (Records.IShareUser[]|null);

        /** GetShareObjectsResponse shareEnterpriseUsers */
        shareEnterpriseUsers?: (Records.IShareUser[]|null);

        /** GetShareObjectsResponse shareTeams */
        shareTeams?: (Records.IShareTeam[]|null);

        /** GetShareObjectsResponse shareMCTeams */
        shareMCTeams?: (Records.IShareTeam[]|null);

        /** GetShareObjectsResponse shareMCEnterpriseUsers */
        shareMCEnterpriseUsers?: (Records.IShareUser[]|null);

        /** GetShareObjectsResponse shareEnterpriseNames */
        shareEnterpriseNames?: (Records.IShareEnterprise[]|null);
    }

    /** Represents a GetShareObjectsResponse. */
    class GetShareObjectsResponse implements IGetShareObjectsResponse {

        /**
         * Constructs a new GetShareObjectsResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IGetShareObjectsResponse);

        /** GetShareObjectsResponse shareRelationships. */
        public shareRelationships: Records.IShareUser[];

        /** GetShareObjectsResponse shareFamilyUsers. */
        public shareFamilyUsers: Records.IShareUser[];

        /** GetShareObjectsResponse shareEnterpriseUsers. */
        public shareEnterpriseUsers: Records.IShareUser[];

        /** GetShareObjectsResponse shareTeams. */
        public shareTeams: Records.IShareTeam[];

        /** GetShareObjectsResponse shareMCTeams. */
        public shareMCTeams: Records.IShareTeam[];

        /** GetShareObjectsResponse shareMCEnterpriseUsers. */
        public shareMCEnterpriseUsers: Records.IShareUser[];

        /** GetShareObjectsResponse shareEnterpriseNames. */
        public shareEnterpriseNames: Records.IShareEnterprise[];

        /**
         * Creates a new GetShareObjectsResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetShareObjectsResponse instance
         */
        public static create(properties?: Records.IGetShareObjectsResponse): Records.GetShareObjectsResponse;

        /**
         * Encodes the specified GetShareObjectsResponse message. Does not implicitly {@link Records.GetShareObjectsResponse.verify|verify} messages.
         * @param message GetShareObjectsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IGetShareObjectsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetShareObjectsResponse message, length delimited. Does not implicitly {@link Records.GetShareObjectsResponse.verify|verify} messages.
         * @param message GetShareObjectsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IGetShareObjectsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetShareObjectsResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetShareObjectsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.GetShareObjectsResponse;

        /**
         * Decodes a GetShareObjectsResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetShareObjectsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.GetShareObjectsResponse;

        /**
         * Verifies a GetShareObjectsResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetShareObjectsResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetShareObjectsResponse
         */
        public static fromObject(object: { [k: string]: any }): Records.GetShareObjectsResponse;

        /**
         * Creates a plain object from a GetShareObjectsResponse message. Also converts values to other types if specified.
         * @param message GetShareObjectsResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.GetShareObjectsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetShareObjectsResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShareUser. */
    interface IShareUser {

        /** ShareUser username */
        username?: (string|null);

        /** ShareUser fullname */
        fullname?: (string|null);

        /** ShareUser enterpriseId */
        enterpriseId?: (number|null);

        /** ShareUser status */
        status?: (Records.ShareStatus|null);

        /** ShareUser isShareAdmin */
        isShareAdmin?: (boolean|null);

        /** ShareUser isAdminOfSharedFolderOwner */
        isAdminOfSharedFolderOwner?: (boolean|null);
    }

    /** Represents a ShareUser. */
    class ShareUser implements IShareUser {

        /**
         * Constructs a new ShareUser.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IShareUser);

        /** ShareUser username. */
        public username: string;

        /** ShareUser fullname. */
        public fullname: string;

        /** ShareUser enterpriseId. */
        public enterpriseId: number;

        /** ShareUser status. */
        public status: Records.ShareStatus;

        /** ShareUser isShareAdmin. */
        public isShareAdmin: boolean;

        /** ShareUser isAdminOfSharedFolderOwner. */
        public isAdminOfSharedFolderOwner: boolean;

        /**
         * Creates a new ShareUser instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShareUser instance
         */
        public static create(properties?: Records.IShareUser): Records.ShareUser;

        /**
         * Encodes the specified ShareUser message. Does not implicitly {@link Records.ShareUser.verify|verify} messages.
         * @param message ShareUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IShareUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShareUser message, length delimited. Does not implicitly {@link Records.ShareUser.verify|verify} messages.
         * @param message ShareUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IShareUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShareUser message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShareUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.ShareUser;

        /**
         * Decodes a ShareUser message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShareUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.ShareUser;

        /**
         * Verifies a ShareUser message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShareUser message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShareUser
         */
        public static fromObject(object: { [k: string]: any }): Records.ShareUser;

        /**
         * Creates a plain object from a ShareUser message. Also converts values to other types if specified.
         * @param message ShareUser
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.ShareUser, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShareUser to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShareTeam. */
    interface IShareTeam {

        /** ShareTeam teamname */
        teamname?: (string|null);

        /** ShareTeam enterpriseId */
        enterpriseId?: (number|null);

        /** ShareTeam teamUid */
        teamUid?: (Uint8Array|null);
    }

    /** Represents a ShareTeam. */
    class ShareTeam implements IShareTeam {

        /**
         * Constructs a new ShareTeam.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IShareTeam);

        /** ShareTeam teamname. */
        public teamname: string;

        /** ShareTeam enterpriseId. */
        public enterpriseId: number;

        /** ShareTeam teamUid. */
        public teamUid: Uint8Array;

        /**
         * Creates a new ShareTeam instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShareTeam instance
         */
        public static create(properties?: Records.IShareTeam): Records.ShareTeam;

        /**
         * Encodes the specified ShareTeam message. Does not implicitly {@link Records.ShareTeam.verify|verify} messages.
         * @param message ShareTeam message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IShareTeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShareTeam message, length delimited. Does not implicitly {@link Records.ShareTeam.verify|verify} messages.
         * @param message ShareTeam message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IShareTeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShareTeam message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShareTeam
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.ShareTeam;

        /**
         * Decodes a ShareTeam message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShareTeam
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.ShareTeam;

        /**
         * Verifies a ShareTeam message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShareTeam message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShareTeam
         */
        public static fromObject(object: { [k: string]: any }): Records.ShareTeam;

        /**
         * Creates a plain object from a ShareTeam message. Also converts values to other types if specified.
         * @param message ShareTeam
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.ShareTeam, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShareTeam to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShareEnterprise. */
    interface IShareEnterprise {

        /** ShareEnterprise enterprisename */
        enterprisename?: (string|null);

        /** ShareEnterprise enterpriseId */
        enterpriseId?: (number|null);
    }

    /** Represents a ShareEnterprise. */
    class ShareEnterprise implements IShareEnterprise {

        /**
         * Constructs a new ShareEnterprise.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IShareEnterprise);

        /** ShareEnterprise enterprisename. */
        public enterprisename: string;

        /** ShareEnterprise enterpriseId. */
        public enterpriseId: number;

        /**
         * Creates a new ShareEnterprise instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShareEnterprise instance
         */
        public static create(properties?: Records.IShareEnterprise): Records.ShareEnterprise;

        /**
         * Encodes the specified ShareEnterprise message. Does not implicitly {@link Records.ShareEnterprise.verify|verify} messages.
         * @param message ShareEnterprise message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IShareEnterprise, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShareEnterprise message, length delimited. Does not implicitly {@link Records.ShareEnterprise.verify|verify} messages.
         * @param message ShareEnterprise message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IShareEnterprise, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShareEnterprise message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShareEnterprise
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.ShareEnterprise;

        /**
         * Decodes a ShareEnterprise message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShareEnterprise
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.ShareEnterprise;

        /**
         * Verifies a ShareEnterprise message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShareEnterprise message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShareEnterprise
         */
        public static fromObject(object: { [k: string]: any }): Records.ShareEnterprise;

        /**
         * Creates a plain object from a ShareEnterprise message. Also converts values to other types if specified.
         * @param message ShareEnterprise
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.ShareEnterprise, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShareEnterprise to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** ShareStatus enum. */
    enum ShareStatus {
        ACTIVE = 0,
        BLOCK = 1,
        INVITED = 2
    }

    /** Properties of a RecordsOnwershipTransferRequest. */
    interface IRecordsOnwershipTransferRequest {

        /** RecordsOnwershipTransferRequest transferRecords */
        transferRecords?: (Records.ITransferRecord[]|null);
    }

    /** Represents a RecordsOnwershipTransferRequest. */
    class RecordsOnwershipTransferRequest implements IRecordsOnwershipTransferRequest {

        /**
         * Constructs a new RecordsOnwershipTransferRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordsOnwershipTransferRequest);

        /** RecordsOnwershipTransferRequest transferRecords. */
        public transferRecords: Records.ITransferRecord[];

        /**
         * Creates a new RecordsOnwershipTransferRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordsOnwershipTransferRequest instance
         */
        public static create(properties?: Records.IRecordsOnwershipTransferRequest): Records.RecordsOnwershipTransferRequest;

        /**
         * Encodes the specified RecordsOnwershipTransferRequest message. Does not implicitly {@link Records.RecordsOnwershipTransferRequest.verify|verify} messages.
         * @param message RecordsOnwershipTransferRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordsOnwershipTransferRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordsOnwershipTransferRequest message, length delimited. Does not implicitly {@link Records.RecordsOnwershipTransferRequest.verify|verify} messages.
         * @param message RecordsOnwershipTransferRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordsOnwershipTransferRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordsOnwershipTransferRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordsOnwershipTransferRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordsOnwershipTransferRequest;

        /**
         * Decodes a RecordsOnwershipTransferRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordsOnwershipTransferRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordsOnwershipTransferRequest;

        /**
         * Verifies a RecordsOnwershipTransferRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordsOnwershipTransferRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordsOnwershipTransferRequest
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordsOnwershipTransferRequest;

        /**
         * Creates a plain object from a RecordsOnwershipTransferRequest message. Also converts values to other types if specified.
         * @param message RecordsOnwershipTransferRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordsOnwershipTransferRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordsOnwershipTransferRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TransferRecord. */
    interface ITransferRecord {

        /** TransferRecord username */
        username?: (string|null);

        /** TransferRecord recordUid */
        recordUid?: (Uint8Array|null);

        /** TransferRecord recordKey */
        recordKey?: (Uint8Array|null);

        /** TransferRecord useEccKey */
        useEccKey?: (boolean|null);
    }

    /** Represents a TransferRecord. */
    class TransferRecord implements ITransferRecord {

        /**
         * Constructs a new TransferRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.ITransferRecord);

        /** TransferRecord username. */
        public username: string;

        /** TransferRecord recordUid. */
        public recordUid: Uint8Array;

        /** TransferRecord recordKey. */
        public recordKey: Uint8Array;

        /** TransferRecord useEccKey. */
        public useEccKey: boolean;

        /**
         * Creates a new TransferRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TransferRecord instance
         */
        public static create(properties?: Records.ITransferRecord): Records.TransferRecord;

        /**
         * Encodes the specified TransferRecord message. Does not implicitly {@link Records.TransferRecord.verify|verify} messages.
         * @param message TransferRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.ITransferRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TransferRecord message, length delimited. Does not implicitly {@link Records.TransferRecord.verify|verify} messages.
         * @param message TransferRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.ITransferRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TransferRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TransferRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.TransferRecord;

        /**
         * Decodes a TransferRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TransferRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.TransferRecord;

        /**
         * Verifies a TransferRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TransferRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TransferRecord
         */
        public static fromObject(object: { [k: string]: any }): Records.TransferRecord;

        /**
         * Creates a plain object from a TransferRecord message. Also converts values to other types if specified.
         * @param message TransferRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.TransferRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TransferRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordsOnwershipTransferResponse. */
    interface IRecordsOnwershipTransferResponse {

        /** RecordsOnwershipTransferResponse transferRecordStatus */
        transferRecordStatus?: (Records.ITransferRecordStatus[]|null);
    }

    /** Represents a RecordsOnwershipTransferResponse. */
    class RecordsOnwershipTransferResponse implements IRecordsOnwershipTransferResponse {

        /**
         * Constructs a new RecordsOnwershipTransferResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.IRecordsOnwershipTransferResponse);

        /** RecordsOnwershipTransferResponse transferRecordStatus. */
        public transferRecordStatus: Records.ITransferRecordStatus[];

        /**
         * Creates a new RecordsOnwershipTransferResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordsOnwershipTransferResponse instance
         */
        public static create(properties?: Records.IRecordsOnwershipTransferResponse): Records.RecordsOnwershipTransferResponse;

        /**
         * Encodes the specified RecordsOnwershipTransferResponse message. Does not implicitly {@link Records.RecordsOnwershipTransferResponse.verify|verify} messages.
         * @param message RecordsOnwershipTransferResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.IRecordsOnwershipTransferResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordsOnwershipTransferResponse message, length delimited. Does not implicitly {@link Records.RecordsOnwershipTransferResponse.verify|verify} messages.
         * @param message RecordsOnwershipTransferResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.IRecordsOnwershipTransferResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordsOnwershipTransferResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordsOnwershipTransferResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.RecordsOnwershipTransferResponse;

        /**
         * Decodes a RecordsOnwershipTransferResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordsOnwershipTransferResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.RecordsOnwershipTransferResponse;

        /**
         * Verifies a RecordsOnwershipTransferResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordsOnwershipTransferResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordsOnwershipTransferResponse
         */
        public static fromObject(object: { [k: string]: any }): Records.RecordsOnwershipTransferResponse;

        /**
         * Creates a plain object from a RecordsOnwershipTransferResponse message. Also converts values to other types if specified.
         * @param message RecordsOnwershipTransferResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.RecordsOnwershipTransferResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordsOnwershipTransferResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TransferRecordStatus. */
    interface ITransferRecordStatus {

        /** TransferRecordStatus username */
        username?: (string|null);

        /** TransferRecordStatus recordUid */
        recordUid?: (Uint8Array|null);

        /** TransferRecordStatus status */
        status?: (string|null);

        /** TransferRecordStatus message */
        message?: (string|null);
    }

    /** Represents a TransferRecordStatus. */
    class TransferRecordStatus implements ITransferRecordStatus {

        /**
         * Constructs a new TransferRecordStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: Records.ITransferRecordStatus);

        /** TransferRecordStatus username. */
        public username: string;

        /** TransferRecordStatus recordUid. */
        public recordUid: Uint8Array;

        /** TransferRecordStatus status. */
        public status: string;

        /** TransferRecordStatus message. */
        public message: string;

        /**
         * Creates a new TransferRecordStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TransferRecordStatus instance
         */
        public static create(properties?: Records.ITransferRecordStatus): Records.TransferRecordStatus;

        /**
         * Encodes the specified TransferRecordStatus message. Does not implicitly {@link Records.TransferRecordStatus.verify|verify} messages.
         * @param message TransferRecordStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Records.ITransferRecordStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TransferRecordStatus message, length delimited. Does not implicitly {@link Records.TransferRecordStatus.verify|verify} messages.
         * @param message TransferRecordStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Records.ITransferRecordStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TransferRecordStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TransferRecordStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Records.TransferRecordStatus;

        /**
         * Decodes a TransferRecordStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TransferRecordStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Records.TransferRecordStatus;

        /**
         * Verifies a TransferRecordStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TransferRecordStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TransferRecordStatus
         */
        public static fromObject(object: { [k: string]: any }): Records.TransferRecordStatus;

        /**
         * Creates a plain object from a TransferRecordStatus message. Also converts values to other types if specified.
         * @param message TransferRecordStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Records.TransferRecordStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TransferRecordStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Push. */
export namespace Push {

    /** Properties of a UserRegistrationRequest. */
    interface IUserRegistrationRequest {

        /** UserRegistrationRequest messageSessionUid */
        messageSessionUid?: (Uint8Array|null);

        /** UserRegistrationRequest userId */
        userId?: (number|null);

        /** UserRegistrationRequest enterpriseId */
        enterpriseId?: (number|null);
    }

    /** Represents a UserRegistrationRequest. */
    class UserRegistrationRequest implements IUserRegistrationRequest {

        /**
         * Constructs a new UserRegistrationRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Push.IUserRegistrationRequest);

        /** UserRegistrationRequest messageSessionUid. */
        public messageSessionUid: Uint8Array;

        /** UserRegistrationRequest userId. */
        public userId: number;

        /** UserRegistrationRequest enterpriseId. */
        public enterpriseId: number;

        /**
         * Creates a new UserRegistrationRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserRegistrationRequest instance
         */
        public static create(properties?: Push.IUserRegistrationRequest): Push.UserRegistrationRequest;

        /**
         * Encodes the specified UserRegistrationRequest message. Does not implicitly {@link Push.UserRegistrationRequest.verify|verify} messages.
         * @param message UserRegistrationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Push.IUserRegistrationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserRegistrationRequest message, length delimited. Does not implicitly {@link Push.UserRegistrationRequest.verify|verify} messages.
         * @param message UserRegistrationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Push.IUserRegistrationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserRegistrationRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserRegistrationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Push.UserRegistrationRequest;

        /**
         * Decodes a UserRegistrationRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserRegistrationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Push.UserRegistrationRequest;

        /**
         * Verifies a UserRegistrationRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserRegistrationRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserRegistrationRequest
         */
        public static fromObject(object: { [k: string]: any }): Push.UserRegistrationRequest;

        /**
         * Creates a plain object from a UserRegistrationRequest message. Also converts values to other types if specified.
         * @param message UserRegistrationRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Push.UserRegistrationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserRegistrationRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** MessageType enum. */
    enum MessageType {
        UNKNOWN = 0,
        DNA = 1,
        SSO = 2,
        CHAT = 3,
        USER = 4,
        ENTERPRISE = 5,
        KEEPER = 6,
        SESSION = 7,
        DEVICE = 8,
        TOTP = 9
    }

    /** Properties of a KAToPushServerRequest. */
    interface IKAToPushServerRequest {

        /** KAToPushServerRequest messageType */
        messageType?: (Push.MessageType|null);

        /** KAToPushServerRequest message */
        message?: (string|null);

        /** KAToPushServerRequest messageSessionUid */
        messageSessionUid?: (Uint8Array|null);

        /** KAToPushServerRequest encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array[]|null);

        /** KAToPushServerRequest userId */
        userId?: (number[]|null);

        /** KAToPushServerRequest enterpriseId */
        enterpriseId?: (number[]|null);
    }

    /** Represents a KAToPushServerRequest. */
    class KAToPushServerRequest implements IKAToPushServerRequest {

        /**
         * Constructs a new KAToPushServerRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Push.IKAToPushServerRequest);

        /** KAToPushServerRequest messageType. */
        public messageType: Push.MessageType;

        /** KAToPushServerRequest message. */
        public message: string;

        /** KAToPushServerRequest messageSessionUid. */
        public messageSessionUid: Uint8Array;

        /** KAToPushServerRequest encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array[];

        /** KAToPushServerRequest userId. */
        public userId: number[];

        /** KAToPushServerRequest enterpriseId. */
        public enterpriseId: number[];

        /**
         * Creates a new KAToPushServerRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KAToPushServerRequest instance
         */
        public static create(properties?: Push.IKAToPushServerRequest): Push.KAToPushServerRequest;

        /**
         * Encodes the specified KAToPushServerRequest message. Does not implicitly {@link Push.KAToPushServerRequest.verify|verify} messages.
         * @param message KAToPushServerRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Push.IKAToPushServerRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KAToPushServerRequest message, length delimited. Does not implicitly {@link Push.KAToPushServerRequest.verify|verify} messages.
         * @param message KAToPushServerRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Push.IKAToPushServerRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KAToPushServerRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KAToPushServerRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Push.KAToPushServerRequest;

        /**
         * Decodes a KAToPushServerRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KAToPushServerRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Push.KAToPushServerRequest;

        /**
         * Verifies a KAToPushServerRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KAToPushServerRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KAToPushServerRequest
         */
        public static fromObject(object: { [k: string]: any }): Push.KAToPushServerRequest;

        /**
         * Creates a plain object from a KAToPushServerRequest message. Also converts values to other types if specified.
         * @param message KAToPushServerRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Push.KAToPushServerRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KAToPushServerRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WssConnectionRequest. */
    interface IWssConnectionRequest {

        /** WssConnectionRequest messageSessionUid */
        messageSessionUid?: (Uint8Array|null);

        /** WssConnectionRequest encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);

        /** WssConnectionRequest deviceTimeStamp */
        deviceTimeStamp?: (number|Long|null);
    }

    /** Represents a WssConnectionRequest. */
    class WssConnectionRequest implements IWssConnectionRequest {

        /**
         * Constructs a new WssConnectionRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Push.IWssConnectionRequest);

        /** WssConnectionRequest messageSessionUid. */
        public messageSessionUid: Uint8Array;

        /** WssConnectionRequest encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /** WssConnectionRequest deviceTimeStamp. */
        public deviceTimeStamp: (number|Long);

        /**
         * Creates a new WssConnectionRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WssConnectionRequest instance
         */
        public static create(properties?: Push.IWssConnectionRequest): Push.WssConnectionRequest;

        /**
         * Encodes the specified WssConnectionRequest message. Does not implicitly {@link Push.WssConnectionRequest.verify|verify} messages.
         * @param message WssConnectionRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Push.IWssConnectionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WssConnectionRequest message, length delimited. Does not implicitly {@link Push.WssConnectionRequest.verify|verify} messages.
         * @param message WssConnectionRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Push.IWssConnectionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WssConnectionRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WssConnectionRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Push.WssConnectionRequest;

        /**
         * Decodes a WssConnectionRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WssConnectionRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Push.WssConnectionRequest;

        /**
         * Verifies a WssConnectionRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WssConnectionRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WssConnectionRequest
         */
        public static fromObject(object: { [k: string]: any }): Push.WssConnectionRequest;

        /**
         * Creates a plain object from a WssConnectionRequest message. Also converts values to other types if specified.
         * @param message WssConnectionRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Push.WssConnectionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WssConnectionRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WssClientResponse. */
    interface IWssClientResponse {

        /** WssClientResponse messageType */
        messageType?: (Push.MessageType|null);

        /** WssClientResponse message */
        message?: (string|null);
    }

    /** Represents a WssClientResponse. */
    class WssClientResponse implements IWssClientResponse {

        /**
         * Constructs a new WssClientResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Push.IWssClientResponse);

        /** WssClientResponse messageType. */
        public messageType: Push.MessageType;

        /** WssClientResponse message. */
        public message: string;

        /**
         * Creates a new WssClientResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WssClientResponse instance
         */
        public static create(properties?: Push.IWssClientResponse): Push.WssClientResponse;

        /**
         * Encodes the specified WssClientResponse message. Does not implicitly {@link Push.WssClientResponse.verify|verify} messages.
         * @param message WssClientResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Push.IWssClientResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WssClientResponse message, length delimited. Does not implicitly {@link Push.WssClientResponse.verify|verify} messages.
         * @param message WssClientResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Push.IWssClientResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WssClientResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WssClientResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Push.WssClientResponse;

        /**
         * Decodes a WssClientResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WssClientResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Push.WssClientResponse;

        /**
         * Verifies a WssClientResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WssClientResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WssClientResponse
         */
        public static fromObject(object: { [k: string]: any }): Push.WssClientResponse;

        /**
         * Creates a plain object from a WssClientResponse message. Also converts values to other types if specified.
         * @param message WssClientResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Push.WssClientResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WssClientResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PushServerDeviceRegistrationRequest. */
    interface IPushServerDeviceRegistrationRequest {

        /** PushServerDeviceRegistrationRequest encryptedDeviceToken */
        encryptedDeviceToken?: (Uint8Array|null);

        /** PushServerDeviceRegistrationRequest pushToken */
        pushToken?: (string|null);

        /** PushServerDeviceRegistrationRequest mobilePushPlatform */
        mobilePushPlatform?: (string|null);

        /** PushServerDeviceRegistrationRequest transmissionKey */
        transmissionKey?: (Uint8Array|null);
    }

    /** Represents a PushServerDeviceRegistrationRequest. */
    class PushServerDeviceRegistrationRequest implements IPushServerDeviceRegistrationRequest {

        /**
         * Constructs a new PushServerDeviceRegistrationRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Push.IPushServerDeviceRegistrationRequest);

        /** PushServerDeviceRegistrationRequest encryptedDeviceToken. */
        public encryptedDeviceToken: Uint8Array;

        /** PushServerDeviceRegistrationRequest pushToken. */
        public pushToken: string;

        /** PushServerDeviceRegistrationRequest mobilePushPlatform. */
        public mobilePushPlatform: string;

        /** PushServerDeviceRegistrationRequest transmissionKey. */
        public transmissionKey: Uint8Array;

        /**
         * Creates a new PushServerDeviceRegistrationRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PushServerDeviceRegistrationRequest instance
         */
        public static create(properties?: Push.IPushServerDeviceRegistrationRequest): Push.PushServerDeviceRegistrationRequest;

        /**
         * Encodes the specified PushServerDeviceRegistrationRequest message. Does not implicitly {@link Push.PushServerDeviceRegistrationRequest.verify|verify} messages.
         * @param message PushServerDeviceRegistrationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Push.IPushServerDeviceRegistrationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PushServerDeviceRegistrationRequest message, length delimited. Does not implicitly {@link Push.PushServerDeviceRegistrationRequest.verify|verify} messages.
         * @param message PushServerDeviceRegistrationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Push.IPushServerDeviceRegistrationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PushServerDeviceRegistrationRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PushServerDeviceRegistrationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Push.PushServerDeviceRegistrationRequest;

        /**
         * Decodes a PushServerDeviceRegistrationRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PushServerDeviceRegistrationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Push.PushServerDeviceRegistrationRequest;

        /**
         * Verifies a PushServerDeviceRegistrationRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PushServerDeviceRegistrationRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PushServerDeviceRegistrationRequest
         */
        public static fromObject(object: { [k: string]: any }): Push.PushServerDeviceRegistrationRequest;

        /**
         * Creates a plain object from a PushServerDeviceRegistrationRequest message. Also converts values to other types if specified.
         * @param message PushServerDeviceRegistrationRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Push.PushServerDeviceRegistrationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PushServerDeviceRegistrationRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SnsMessage. */
    interface ISnsMessage {

        /** SnsMessage messageType */
        messageType?: (Push.MessageType|null);

        /** SnsMessage message */
        message?: (Uint8Array|null);
    }

    /** Represents a SnsMessage. */
    class SnsMessage implements ISnsMessage {

        /**
         * Constructs a new SnsMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: Push.ISnsMessage);

        /** SnsMessage messageType. */
        public messageType: Push.MessageType;

        /** SnsMessage message. */
        public message: Uint8Array;

        /**
         * Creates a new SnsMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SnsMessage instance
         */
        public static create(properties?: Push.ISnsMessage): Push.SnsMessage;

        /**
         * Encodes the specified SnsMessage message. Does not implicitly {@link Push.SnsMessage.verify|verify} messages.
         * @param message SnsMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Push.ISnsMessage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SnsMessage message, length delimited. Does not implicitly {@link Push.SnsMessage.verify|verify} messages.
         * @param message SnsMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Push.ISnsMessage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SnsMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SnsMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Push.SnsMessage;

        /**
         * Decodes a SnsMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SnsMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Push.SnsMessage;

        /**
         * Verifies a SnsMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SnsMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SnsMessage
         */
        public static fromObject(object: { [k: string]: any }): Push.SnsMessage;

        /**
         * Creates a plain object from a SnsMessage message. Also converts values to other types if specified.
         * @param message SnsMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Push.SnsMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SnsMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace ServiceLogger. */
export namespace ServiceLogger {

    /** Properties of an IdRange. */
    interface IIdRange {

        /** IdRange startingId */
        startingId?: (number|Long|null);

        /** IdRange endingId */
        endingId?: (number|Long|null);
    }

    /** Specifies the first and last IDs of a range of IDs so that a Request can ask for information about a range of IDs. */
    class IdRange implements IIdRange {

        /**
         * Constructs a new IdRange.
         * @param [properties] Properties to set
         */
        constructor(properties?: ServiceLogger.IIdRange);

        /** IdRange startingId. */
        public startingId: (number|Long);

        /** IdRange endingId. */
        public endingId: (number|Long);

        /**
         * Creates a new IdRange instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IdRange instance
         */
        public static create(properties?: ServiceLogger.IIdRange): ServiceLogger.IdRange;

        /**
         * Encodes the specified IdRange message. Does not implicitly {@link ServiceLogger.IdRange.verify|verify} messages.
         * @param message IdRange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ServiceLogger.IIdRange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IdRange message, length delimited. Does not implicitly {@link ServiceLogger.IdRange.verify|verify} messages.
         * @param message IdRange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ServiceLogger.IIdRange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IdRange message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IdRange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServiceLogger.IdRange;

        /**
         * Decodes an IdRange message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IdRange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServiceLogger.IdRange;

        /**
         * Verifies an IdRange message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IdRange message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IdRange
         */
        public static fromObject(object: { [k: string]: any }): ServiceLogger.IdRange;

        /**
         * Creates a plain object from an IdRange message. Also converts values to other types if specified.
         * @param message IdRange
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ServiceLogger.IdRange, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IdRange to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ServiceInfoSpecifier. */
    interface IServiceInfoSpecifier {

        /** ServiceInfoSpecifier all */
        all?: (boolean|null);

        /** ServiceInfoSpecifier serviceInfoId */
        serviceInfoId?: (number|Long|null);

        /** ServiceInfoSpecifier name */
        name?: (string|null);
    }

    /** Used in ServiceInfoRequest */
    class ServiceInfoSpecifier implements IServiceInfoSpecifier {

        /**
         * Constructs a new ServiceInfoSpecifier.
         * @param [properties] Properties to set
         */
        constructor(properties?: ServiceLogger.IServiceInfoSpecifier);

        /** ServiceInfoSpecifier all. */
        public all: boolean;

        /** ServiceInfoSpecifier serviceInfoId. */
        public serviceInfoId: (number|Long);

        /** ServiceInfoSpecifier name. */
        public name: string;

        /**
         * Creates a new ServiceInfoSpecifier instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ServiceInfoSpecifier instance
         */
        public static create(properties?: ServiceLogger.IServiceInfoSpecifier): ServiceLogger.ServiceInfoSpecifier;

        /**
         * Encodes the specified ServiceInfoSpecifier message. Does not implicitly {@link ServiceLogger.ServiceInfoSpecifier.verify|verify} messages.
         * @param message ServiceInfoSpecifier message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ServiceLogger.IServiceInfoSpecifier, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ServiceInfoSpecifier message, length delimited. Does not implicitly {@link ServiceLogger.ServiceInfoSpecifier.verify|verify} messages.
         * @param message ServiceInfoSpecifier message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ServiceLogger.IServiceInfoSpecifier, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ServiceInfoSpecifier message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ServiceInfoSpecifier
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServiceLogger.ServiceInfoSpecifier;

        /**
         * Decodes a ServiceInfoSpecifier message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ServiceInfoSpecifier
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServiceLogger.ServiceInfoSpecifier;

        /**
         * Verifies a ServiceInfoSpecifier message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ServiceInfoSpecifier message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ServiceInfoSpecifier
         */
        public static fromObject(object: { [k: string]: any }): ServiceLogger.ServiceInfoSpecifier;

        /**
         * Creates a plain object from a ServiceInfoSpecifier message. Also converts values to other types if specified.
         * @param message ServiceInfoSpecifier
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ServiceLogger.ServiceInfoSpecifier, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ServiceInfoSpecifier to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ServiceInfoRequest. */
    interface IServiceInfoRequest {

        /** ServiceInfoRequest serviceInfoSpecifier */
        serviceInfoSpecifier?: (ServiceLogger.IServiceInfoSpecifier[]|null);
    }

    /** Request information about one or more services by ID or name, or retrieve all. */
    class ServiceInfoRequest implements IServiceInfoRequest {

        /**
         * Constructs a new ServiceInfoRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: ServiceLogger.IServiceInfoRequest);

        /** ServiceInfoRequest serviceInfoSpecifier. */
        public serviceInfoSpecifier: ServiceLogger.IServiceInfoSpecifier[];

        /**
         * Creates a new ServiceInfoRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ServiceInfoRequest instance
         */
        public static create(properties?: ServiceLogger.IServiceInfoRequest): ServiceLogger.ServiceInfoRequest;

        /**
         * Encodes the specified ServiceInfoRequest message. Does not implicitly {@link ServiceLogger.ServiceInfoRequest.verify|verify} messages.
         * @param message ServiceInfoRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ServiceLogger.IServiceInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ServiceInfoRequest message, length delimited. Does not implicitly {@link ServiceLogger.ServiceInfoRequest.verify|verify} messages.
         * @param message ServiceInfoRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ServiceLogger.IServiceInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ServiceInfoRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ServiceInfoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServiceLogger.ServiceInfoRequest;

        /**
         * Decodes a ServiceInfoRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ServiceInfoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServiceLogger.ServiceInfoRequest;

        /**
         * Verifies a ServiceInfoRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ServiceInfoRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ServiceInfoRequest
         */
        public static fromObject(object: { [k: string]: any }): ServiceLogger.ServiceInfoRequest;

        /**
         * Creates a plain object from a ServiceInfoRequest message. Also converts values to other types if specified.
         * @param message ServiceInfoRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ServiceLogger.ServiceInfoRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ServiceInfoRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ServiceInfoRecord. */
    interface IServiceInfoRecord {

        /** ServiceInfoRecord serviceInfoId */
        serviceInfoId?: (number|Long|null);

        /** ServiceInfoRecord name */
        name?: (string|null);

        /** ServiceInfoRecord deleteAfter */
        deleteAfter?: (number|null);

        /** ServiceInfoRecord deleteAfterTimeUnits */
        deleteAfterTimeUnits?: (string|null);

        /** ServiceInfoRecord isShortTermLogging */
        isShortTermLogging?: (boolean|null);
    }

    /** Used in ServiceInfoResponse */
    class ServiceInfoRecord implements IServiceInfoRecord {

        /**
         * Constructs a new ServiceInfoRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: ServiceLogger.IServiceInfoRecord);

        /** ServiceInfoRecord serviceInfoId. */
        public serviceInfoId: (number|Long);

        /** ServiceInfoRecord name. */
        public name: string;

        /** ServiceInfoRecord deleteAfter. */
        public deleteAfter: number;

        /** ServiceInfoRecord deleteAfterTimeUnits. */
        public deleteAfterTimeUnits: string;

        /** ServiceInfoRecord isShortTermLogging. */
        public isShortTermLogging: boolean;

        /**
         * Creates a new ServiceInfoRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ServiceInfoRecord instance
         */
        public static create(properties?: ServiceLogger.IServiceInfoRecord): ServiceLogger.ServiceInfoRecord;

        /**
         * Encodes the specified ServiceInfoRecord message. Does not implicitly {@link ServiceLogger.ServiceInfoRecord.verify|verify} messages.
         * @param message ServiceInfoRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ServiceLogger.IServiceInfoRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ServiceInfoRecord message, length delimited. Does not implicitly {@link ServiceLogger.ServiceInfoRecord.verify|verify} messages.
         * @param message ServiceInfoRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ServiceLogger.IServiceInfoRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ServiceInfoRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ServiceInfoRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServiceLogger.ServiceInfoRecord;

        /**
         * Decodes a ServiceInfoRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ServiceInfoRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServiceLogger.ServiceInfoRecord;

        /**
         * Verifies a ServiceInfoRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ServiceInfoRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ServiceInfoRecord
         */
        public static fromObject(object: { [k: string]: any }): ServiceLogger.ServiceInfoRecord;

        /**
         * Creates a plain object from a ServiceInfoRecord message. Also converts values to other types if specified.
         * @param message ServiceInfoRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ServiceLogger.ServiceInfoRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ServiceInfoRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ServiceInfoResponse. */
    interface IServiceInfoResponse {

        /** ServiceInfoResponse serviceInfoRecord */
        serviceInfoRecord?: (ServiceLogger.IServiceInfoRecord[]|null);
    }

    /** Returns information about Services */
    class ServiceInfoResponse implements IServiceInfoResponse {

        /**
         * Constructs a new ServiceInfoResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: ServiceLogger.IServiceInfoResponse);

        /** ServiceInfoResponse serviceInfoRecord. */
        public serviceInfoRecord: ServiceLogger.IServiceInfoRecord[];

        /**
         * Creates a new ServiceInfoResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ServiceInfoResponse instance
         */
        public static create(properties?: ServiceLogger.IServiceInfoResponse): ServiceLogger.ServiceInfoResponse;

        /**
         * Encodes the specified ServiceInfoResponse message. Does not implicitly {@link ServiceLogger.ServiceInfoResponse.verify|verify} messages.
         * @param message ServiceInfoResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ServiceLogger.IServiceInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ServiceInfoResponse message, length delimited. Does not implicitly {@link ServiceLogger.ServiceInfoResponse.verify|verify} messages.
         * @param message ServiceInfoResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ServiceLogger.IServiceInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ServiceInfoResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ServiceInfoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServiceLogger.ServiceInfoResponse;

        /**
         * Decodes a ServiceInfoResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ServiceInfoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServiceLogger.ServiceInfoResponse;

        /**
         * Verifies a ServiceInfoResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ServiceInfoResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ServiceInfoResponse
         */
        public static fromObject(object: { [k: string]: any }): ServiceLogger.ServiceInfoResponse;

        /**
         * Creates a plain object from a ServiceInfoResponse message. Also converts values to other types if specified.
         * @param message ServiceInfoResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ServiceLogger.ServiceInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ServiceInfoResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ServiceInfoUpdateRequest. */
    interface IServiceInfoUpdateRequest {

        /** ServiceInfoUpdateRequest serviceInfoRecord */
        serviceInfoRecord?: (ServiceLogger.IServiceInfoRecord[]|null);
    }

    /** Update one or more ServiceInfo records by their IDs */
    class ServiceInfoUpdateRequest implements IServiceInfoUpdateRequest {

        /**
         * Constructs a new ServiceInfoUpdateRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: ServiceLogger.IServiceInfoUpdateRequest);

        /** ServiceInfoUpdateRequest serviceInfoRecord. */
        public serviceInfoRecord: ServiceLogger.IServiceInfoRecord[];

        /**
         * Creates a new ServiceInfoUpdateRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ServiceInfoUpdateRequest instance
         */
        public static create(properties?: ServiceLogger.IServiceInfoUpdateRequest): ServiceLogger.ServiceInfoUpdateRequest;

        /**
         * Encodes the specified ServiceInfoUpdateRequest message. Does not implicitly {@link ServiceLogger.ServiceInfoUpdateRequest.verify|verify} messages.
         * @param message ServiceInfoUpdateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ServiceLogger.IServiceInfoUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ServiceInfoUpdateRequest message, length delimited. Does not implicitly {@link ServiceLogger.ServiceInfoUpdateRequest.verify|verify} messages.
         * @param message ServiceInfoUpdateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ServiceLogger.IServiceInfoUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ServiceInfoUpdateRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ServiceInfoUpdateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServiceLogger.ServiceInfoUpdateRequest;

        /**
         * Decodes a ServiceInfoUpdateRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ServiceInfoUpdateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServiceLogger.ServiceInfoUpdateRequest;

        /**
         * Verifies a ServiceInfoUpdateRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ServiceInfoUpdateRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ServiceInfoUpdateRequest
         */
        public static fromObject(object: { [k: string]: any }): ServiceLogger.ServiceInfoUpdateRequest;

        /**
         * Creates a plain object from a ServiceInfoUpdateRequest message. Also converts values to other types if specified.
         * @param message ServiceInfoUpdateRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ServiceLogger.ServiceInfoUpdateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ServiceInfoUpdateRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ServiceRuleSpecifier. */
    interface IServiceRuleSpecifier {

        /** ServiceRuleSpecifier all */
        all?: (boolean|null);

        /** ServiceRuleSpecifier serviceRuleId */
        serviceRuleId?: (number|Long|null);

        /** ServiceRuleSpecifier serviceInfoId */
        serviceInfoId?: (number|Long|null);

        /** ServiceRuleSpecifier resourceIdRange */
        resourceIdRange?: (ServiceLogger.IIdRange[]|null);
    }

    /** Represents a ServiceRuleSpecifier. */
    class ServiceRuleSpecifier implements IServiceRuleSpecifier {

        /**
         * Constructs a new ServiceRuleSpecifier.
         * @param [properties] Properties to set
         */
        constructor(properties?: ServiceLogger.IServiceRuleSpecifier);

        /** ServiceRuleSpecifier all. */
        public all: boolean;

        /** ServiceRuleSpecifier serviceRuleId. */
        public serviceRuleId: (number|Long);

        /** ServiceRuleSpecifier serviceInfoId. */
        public serviceInfoId: (number|Long);

        /** ServiceRuleSpecifier resourceIdRange. */
        public resourceIdRange: ServiceLogger.IIdRange[];

        /**
         * Creates a new ServiceRuleSpecifier instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ServiceRuleSpecifier instance
         */
        public static create(properties?: ServiceLogger.IServiceRuleSpecifier): ServiceLogger.ServiceRuleSpecifier;

        /**
         * Encodes the specified ServiceRuleSpecifier message. Does not implicitly {@link ServiceLogger.ServiceRuleSpecifier.verify|verify} messages.
         * @param message ServiceRuleSpecifier message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ServiceLogger.IServiceRuleSpecifier, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ServiceRuleSpecifier message, length delimited. Does not implicitly {@link ServiceLogger.ServiceRuleSpecifier.verify|verify} messages.
         * @param message ServiceRuleSpecifier message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ServiceLogger.IServiceRuleSpecifier, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ServiceRuleSpecifier message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ServiceRuleSpecifier
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServiceLogger.ServiceRuleSpecifier;

        /**
         * Decodes a ServiceRuleSpecifier message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ServiceRuleSpecifier
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServiceLogger.ServiceRuleSpecifier;

        /**
         * Verifies a ServiceRuleSpecifier message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ServiceRuleSpecifier message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ServiceRuleSpecifier
         */
        public static fromObject(object: { [k: string]: any }): ServiceLogger.ServiceRuleSpecifier;

        /**
         * Creates a plain object from a ServiceRuleSpecifier message. Also converts values to other types if specified.
         * @param message ServiceRuleSpecifier
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ServiceLogger.ServiceRuleSpecifier, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ServiceRuleSpecifier to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ServiceRuleRequest. */
    interface IServiceRuleRequest {

        /** ServiceRuleRequest serviceRuleSpecifier */
        serviceRuleSpecifier?: (ServiceLogger.IServiceRuleSpecifier[]|null);
    }

    /** Represents a ServiceRuleRequest. */
    class ServiceRuleRequest implements IServiceRuleRequest {

        /**
         * Constructs a new ServiceRuleRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: ServiceLogger.IServiceRuleRequest);

        /** ServiceRuleRequest serviceRuleSpecifier. */
        public serviceRuleSpecifier: ServiceLogger.IServiceRuleSpecifier[];

        /**
         * Creates a new ServiceRuleRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ServiceRuleRequest instance
         */
        public static create(properties?: ServiceLogger.IServiceRuleRequest): ServiceLogger.ServiceRuleRequest;

        /**
         * Encodes the specified ServiceRuleRequest message. Does not implicitly {@link ServiceLogger.ServiceRuleRequest.verify|verify} messages.
         * @param message ServiceRuleRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ServiceLogger.IServiceRuleRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ServiceRuleRequest message, length delimited. Does not implicitly {@link ServiceLogger.ServiceRuleRequest.verify|verify} messages.
         * @param message ServiceRuleRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ServiceLogger.IServiceRuleRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ServiceRuleRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ServiceRuleRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServiceLogger.ServiceRuleRequest;

        /**
         * Decodes a ServiceRuleRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ServiceRuleRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServiceLogger.ServiceRuleRequest;

        /**
         * Verifies a ServiceRuleRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ServiceRuleRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ServiceRuleRequest
         */
        public static fromObject(object: { [k: string]: any }): ServiceLogger.ServiceRuleRequest;

        /**
         * Creates a plain object from a ServiceRuleRequest message. Also converts values to other types if specified.
         * @param message ServiceRuleRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ServiceLogger.ServiceRuleRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ServiceRuleRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ServiceRuleRecord. */
    interface IServiceRuleRecord {

        /** ServiceRuleRecord serviceRuleId */
        serviceRuleId?: (number|Long|null);

        /** ServiceRuleRecord serviceInfoId */
        serviceInfoId?: (number|Long|null);

        /** ServiceRuleRecord resourceId */
        resourceId?: (number|Long|null);

        /** ServiceRuleRecord isLoggingEnabled */
        isLoggingEnabled?: (boolean|null);

        /** ServiceRuleRecord logLevel */
        logLevel?: (string|null);

        /** ServiceRuleRecord ruleStart */
        ruleStart?: (string|null);

        /** ServiceRuleRecord ruleEnd */
        ruleEnd?: (string|null);

        /** ServiceRuleRecord dateModified */
        dateModified?: (string|null);
    }

    /** Represents a ServiceRuleRecord. */
    class ServiceRuleRecord implements IServiceRuleRecord {

        /**
         * Constructs a new ServiceRuleRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: ServiceLogger.IServiceRuleRecord);

        /** ServiceRuleRecord serviceRuleId. */
        public serviceRuleId: (number|Long);

        /** ServiceRuleRecord serviceInfoId. */
        public serviceInfoId: (number|Long);

        /** ServiceRuleRecord resourceId. */
        public resourceId: (number|Long);

        /** ServiceRuleRecord isLoggingEnabled. */
        public isLoggingEnabled: boolean;

        /** ServiceRuleRecord logLevel. */
        public logLevel: string;

        /** ServiceRuleRecord ruleStart. */
        public ruleStart: string;

        /** ServiceRuleRecord ruleEnd. */
        public ruleEnd: string;

        /** ServiceRuleRecord dateModified. */
        public dateModified: string;

        /**
         * Creates a new ServiceRuleRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ServiceRuleRecord instance
         */
        public static create(properties?: ServiceLogger.IServiceRuleRecord): ServiceLogger.ServiceRuleRecord;

        /**
         * Encodes the specified ServiceRuleRecord message. Does not implicitly {@link ServiceLogger.ServiceRuleRecord.verify|verify} messages.
         * @param message ServiceRuleRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ServiceLogger.IServiceRuleRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ServiceRuleRecord message, length delimited. Does not implicitly {@link ServiceLogger.ServiceRuleRecord.verify|verify} messages.
         * @param message ServiceRuleRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ServiceLogger.IServiceRuleRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ServiceRuleRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ServiceRuleRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServiceLogger.ServiceRuleRecord;

        /**
         * Decodes a ServiceRuleRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ServiceRuleRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServiceLogger.ServiceRuleRecord;

        /**
         * Verifies a ServiceRuleRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ServiceRuleRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ServiceRuleRecord
         */
        public static fromObject(object: { [k: string]: any }): ServiceLogger.ServiceRuleRecord;

        /**
         * Creates a plain object from a ServiceRuleRecord message. Also converts values to other types if specified.
         * @param message ServiceRuleRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ServiceLogger.ServiceRuleRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ServiceRuleRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ServiceRuleResponse. */
    interface IServiceRuleResponse {

        /** ServiceRuleResponse serviceRule */
        serviceRule?: (ServiceLogger.IServiceRuleRecord[]|null);
    }

    /** Represents a ServiceRuleResponse. */
    class ServiceRuleResponse implements IServiceRuleResponse {

        /**
         * Constructs a new ServiceRuleResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: ServiceLogger.IServiceRuleResponse);

        /** ServiceRuleResponse serviceRule. */
        public serviceRule: ServiceLogger.IServiceRuleRecord[];

        /**
         * Creates a new ServiceRuleResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ServiceRuleResponse instance
         */
        public static create(properties?: ServiceLogger.IServiceRuleResponse): ServiceLogger.ServiceRuleResponse;

        /**
         * Encodes the specified ServiceRuleResponse message. Does not implicitly {@link ServiceLogger.ServiceRuleResponse.verify|verify} messages.
         * @param message ServiceRuleResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ServiceLogger.IServiceRuleResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ServiceRuleResponse message, length delimited. Does not implicitly {@link ServiceLogger.ServiceRuleResponse.verify|verify} messages.
         * @param message ServiceRuleResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ServiceLogger.IServiceRuleResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ServiceRuleResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ServiceRuleResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServiceLogger.ServiceRuleResponse;

        /**
         * Decodes a ServiceRuleResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ServiceRuleResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServiceLogger.ServiceRuleResponse;

        /**
         * Verifies a ServiceRuleResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ServiceRuleResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ServiceRuleResponse
         */
        public static fromObject(object: { [k: string]: any }): ServiceLogger.ServiceRuleResponse;

        /**
         * Creates a plain object from a ServiceRuleResponse message. Also converts values to other types if specified.
         * @param message ServiceRuleResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ServiceLogger.ServiceRuleResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ServiceRuleResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ServiceRuleUpdateRequest. */
    interface IServiceRuleUpdateRequest {

        /** ServiceRuleUpdateRequest serviceRuleRecord */
        serviceRuleRecord?: (ServiceLogger.IServiceRuleRecord[]|null);
    }

    /** Update one or more ServiceRule records by their IDs */
    class ServiceRuleUpdateRequest implements IServiceRuleUpdateRequest {

        /**
         * Constructs a new ServiceRuleUpdateRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: ServiceLogger.IServiceRuleUpdateRequest);

        /** ServiceRuleUpdateRequest serviceRuleRecord. */
        public serviceRuleRecord: ServiceLogger.IServiceRuleRecord[];

        /**
         * Creates a new ServiceRuleUpdateRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ServiceRuleUpdateRequest instance
         */
        public static create(properties?: ServiceLogger.IServiceRuleUpdateRequest): ServiceLogger.ServiceRuleUpdateRequest;

        /**
         * Encodes the specified ServiceRuleUpdateRequest message. Does not implicitly {@link ServiceLogger.ServiceRuleUpdateRequest.verify|verify} messages.
         * @param message ServiceRuleUpdateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ServiceLogger.IServiceRuleUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ServiceRuleUpdateRequest message, length delimited. Does not implicitly {@link ServiceLogger.ServiceRuleUpdateRequest.verify|verify} messages.
         * @param message ServiceRuleUpdateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ServiceLogger.IServiceRuleUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ServiceRuleUpdateRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ServiceRuleUpdateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServiceLogger.ServiceRuleUpdateRequest;

        /**
         * Decodes a ServiceRuleUpdateRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ServiceRuleUpdateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServiceLogger.ServiceRuleUpdateRequest;

        /**
         * Verifies a ServiceRuleUpdateRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ServiceRuleUpdateRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ServiceRuleUpdateRequest
         */
        public static fromObject(object: { [k: string]: any }): ServiceLogger.ServiceRuleUpdateRequest;

        /**
         * Creates a plain object from a ServiceRuleUpdateRequest message. Also converts values to other types if specified.
         * @param message ServiceRuleUpdateRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ServiceLogger.ServiceRuleUpdateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ServiceRuleUpdateRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ServiceLogSpecifier. */
    interface IServiceLogSpecifier {

        /** ServiceLogSpecifier all */
        all?: (boolean|null);

        /** ServiceLogSpecifier serviceLogId */
        serviceLogId?: (number|Long|null);

        /** ServiceLogSpecifier serviceIdRange */
        serviceIdRange?: (ServiceLogger.IIdRange[]|null);

        /** ServiceLogSpecifier resourceIdRange */
        resourceIdRange?: (ServiceLogger.IIdRange[]|null);

        /** ServiceLogSpecifier startDateTime */
        startDateTime?: (string|null);

        /** ServiceLogSpecifier endDateTime */
        endDateTime?: (string|null);
    }

    /** Represents a ServiceLogSpecifier. */
    class ServiceLogSpecifier implements IServiceLogSpecifier {

        /**
         * Constructs a new ServiceLogSpecifier.
         * @param [properties] Properties to set
         */
        constructor(properties?: ServiceLogger.IServiceLogSpecifier);

        /** ServiceLogSpecifier all. */
        public all: boolean;

        /** ServiceLogSpecifier serviceLogId. */
        public serviceLogId: (number|Long);

        /** ServiceLogSpecifier serviceIdRange. */
        public serviceIdRange: ServiceLogger.IIdRange[];

        /** ServiceLogSpecifier resourceIdRange. */
        public resourceIdRange: ServiceLogger.IIdRange[];

        /** ServiceLogSpecifier startDateTime. */
        public startDateTime: string;

        /** ServiceLogSpecifier endDateTime. */
        public endDateTime: string;

        /**
         * Creates a new ServiceLogSpecifier instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ServiceLogSpecifier instance
         */
        public static create(properties?: ServiceLogger.IServiceLogSpecifier): ServiceLogger.ServiceLogSpecifier;

        /**
         * Encodes the specified ServiceLogSpecifier message. Does not implicitly {@link ServiceLogger.ServiceLogSpecifier.verify|verify} messages.
         * @param message ServiceLogSpecifier message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ServiceLogger.IServiceLogSpecifier, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ServiceLogSpecifier message, length delimited. Does not implicitly {@link ServiceLogger.ServiceLogSpecifier.verify|verify} messages.
         * @param message ServiceLogSpecifier message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ServiceLogger.IServiceLogSpecifier, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ServiceLogSpecifier message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ServiceLogSpecifier
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServiceLogger.ServiceLogSpecifier;

        /**
         * Decodes a ServiceLogSpecifier message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ServiceLogSpecifier
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServiceLogger.ServiceLogSpecifier;

        /**
         * Verifies a ServiceLogSpecifier message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ServiceLogSpecifier message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ServiceLogSpecifier
         */
        public static fromObject(object: { [k: string]: any }): ServiceLogger.ServiceLogSpecifier;

        /**
         * Creates a plain object from a ServiceLogSpecifier message. Also converts values to other types if specified.
         * @param message ServiceLogSpecifier
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ServiceLogger.ServiceLogSpecifier, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ServiceLogSpecifier to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ServiceLogGetRequest. */
    interface IServiceLogGetRequest {

        /** ServiceLogGetRequest serviceLogSpecifier */
        serviceLogSpecifier?: (ServiceLogger.IServiceLogSpecifier[]|null);
    }

    /** Represents a ServiceLogGetRequest. */
    class ServiceLogGetRequest implements IServiceLogGetRequest {

        /**
         * Constructs a new ServiceLogGetRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: ServiceLogger.IServiceLogGetRequest);

        /** ServiceLogGetRequest serviceLogSpecifier. */
        public serviceLogSpecifier: ServiceLogger.IServiceLogSpecifier[];

        /**
         * Creates a new ServiceLogGetRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ServiceLogGetRequest instance
         */
        public static create(properties?: ServiceLogger.IServiceLogGetRequest): ServiceLogger.ServiceLogGetRequest;

        /**
         * Encodes the specified ServiceLogGetRequest message. Does not implicitly {@link ServiceLogger.ServiceLogGetRequest.verify|verify} messages.
         * @param message ServiceLogGetRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ServiceLogger.IServiceLogGetRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ServiceLogGetRequest message, length delimited. Does not implicitly {@link ServiceLogger.ServiceLogGetRequest.verify|verify} messages.
         * @param message ServiceLogGetRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ServiceLogger.IServiceLogGetRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ServiceLogGetRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ServiceLogGetRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServiceLogger.ServiceLogGetRequest;

        /**
         * Decodes a ServiceLogGetRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ServiceLogGetRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServiceLogger.ServiceLogGetRequest;

        /**
         * Verifies a ServiceLogGetRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ServiceLogGetRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ServiceLogGetRequest
         */
        public static fromObject(object: { [k: string]: any }): ServiceLogger.ServiceLogGetRequest;

        /**
         * Creates a plain object from a ServiceLogGetRequest message. Also converts values to other types if specified.
         * @param message ServiceLogGetRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ServiceLogger.ServiceLogGetRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ServiceLogGetRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ServiceLogRecord. */
    interface IServiceLogRecord {

        /** ServiceLogRecord serviceLogId */
        serviceLogId?: (number|Long|null);

        /** ServiceLogRecord serviceInfoId */
        serviceInfoId?: (number|Long|null);

        /** ServiceLogRecord resourceId */
        resourceId?: (number|Long|null);

        /** ServiceLogRecord logger */
        logger?: (string|null);

        /** ServiceLogRecord logLevel */
        logLevel?: (string|null);

        /** ServiceLogRecord message */
        message?: (string|null);

        /** ServiceLogRecord exception */
        exception?: (string|null);

        /** ServiceLogRecord dateCreated */
        dateCreated?: (string|null);
    }

    /** Represents a ServiceLogRecord. */
    class ServiceLogRecord implements IServiceLogRecord {

        /**
         * Constructs a new ServiceLogRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: ServiceLogger.IServiceLogRecord);

        /** ServiceLogRecord serviceLogId. */
        public serviceLogId: (number|Long);

        /** ServiceLogRecord serviceInfoId. */
        public serviceInfoId: (number|Long);

        /** ServiceLogRecord resourceId. */
        public resourceId: (number|Long);

        /** ServiceLogRecord logger. */
        public logger: string;

        /** ServiceLogRecord logLevel. */
        public logLevel: string;

        /** ServiceLogRecord message. */
        public message: string;

        /** ServiceLogRecord exception. */
        public exception: string;

        /** ServiceLogRecord dateCreated. */
        public dateCreated: string;

        /**
         * Creates a new ServiceLogRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ServiceLogRecord instance
         */
        public static create(properties?: ServiceLogger.IServiceLogRecord): ServiceLogger.ServiceLogRecord;

        /**
         * Encodes the specified ServiceLogRecord message. Does not implicitly {@link ServiceLogger.ServiceLogRecord.verify|verify} messages.
         * @param message ServiceLogRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ServiceLogger.IServiceLogRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ServiceLogRecord message, length delimited. Does not implicitly {@link ServiceLogger.ServiceLogRecord.verify|verify} messages.
         * @param message ServiceLogRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ServiceLogger.IServiceLogRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ServiceLogRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ServiceLogRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServiceLogger.ServiceLogRecord;

        /**
         * Decodes a ServiceLogRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ServiceLogRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServiceLogger.ServiceLogRecord;

        /**
         * Verifies a ServiceLogRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ServiceLogRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ServiceLogRecord
         */
        public static fromObject(object: { [k: string]: any }): ServiceLogger.ServiceLogRecord;

        /**
         * Creates a plain object from a ServiceLogRecord message. Also converts values to other types if specified.
         * @param message ServiceLogRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ServiceLogger.ServiceLogRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ServiceLogRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ServiceLogAddRequest. */
    interface IServiceLogAddRequest {

        /** ServiceLogAddRequest entry */
        entry?: (ServiceLogger.IServiceLogRecord[]|null);
    }

    /** Represents a ServiceLogAddRequest. */
    class ServiceLogAddRequest implements IServiceLogAddRequest {

        /**
         * Constructs a new ServiceLogAddRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: ServiceLogger.IServiceLogAddRequest);

        /** ServiceLogAddRequest entry. */
        public entry: ServiceLogger.IServiceLogRecord[];

        /**
         * Creates a new ServiceLogAddRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ServiceLogAddRequest instance
         */
        public static create(properties?: ServiceLogger.IServiceLogAddRequest): ServiceLogger.ServiceLogAddRequest;

        /**
         * Encodes the specified ServiceLogAddRequest message. Does not implicitly {@link ServiceLogger.ServiceLogAddRequest.verify|verify} messages.
         * @param message ServiceLogAddRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ServiceLogger.IServiceLogAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ServiceLogAddRequest message, length delimited. Does not implicitly {@link ServiceLogger.ServiceLogAddRequest.verify|verify} messages.
         * @param message ServiceLogAddRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ServiceLogger.IServiceLogAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ServiceLogAddRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ServiceLogAddRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServiceLogger.ServiceLogAddRequest;

        /**
         * Decodes a ServiceLogAddRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ServiceLogAddRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServiceLogger.ServiceLogAddRequest;

        /**
         * Verifies a ServiceLogAddRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ServiceLogAddRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ServiceLogAddRequest
         */
        public static fromObject(object: { [k: string]: any }): ServiceLogger.ServiceLogAddRequest;

        /**
         * Creates a plain object from a ServiceLogAddRequest message. Also converts values to other types if specified.
         * @param message ServiceLogAddRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ServiceLogger.ServiceLogAddRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ServiceLogAddRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ServiceLogResponse. */
    interface IServiceLogResponse {

        /** ServiceLogResponse entry */
        entry?: (ServiceLogger.IServiceLogRecord[]|null);
    }

    /** Represents a ServiceLogResponse. */
    class ServiceLogResponse implements IServiceLogResponse {

        /**
         * Constructs a new ServiceLogResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: ServiceLogger.IServiceLogResponse);

        /** ServiceLogResponse entry. */
        public entry: ServiceLogger.IServiceLogRecord[];

        /**
         * Creates a new ServiceLogResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ServiceLogResponse instance
         */
        public static create(properties?: ServiceLogger.IServiceLogResponse): ServiceLogger.ServiceLogResponse;

        /**
         * Encodes the specified ServiceLogResponse message. Does not implicitly {@link ServiceLogger.ServiceLogResponse.verify|verify} messages.
         * @param message ServiceLogResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ServiceLogger.IServiceLogResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ServiceLogResponse message, length delimited. Does not implicitly {@link ServiceLogger.ServiceLogResponse.verify|verify} messages.
         * @param message ServiceLogResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ServiceLogger.IServiceLogResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ServiceLogResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ServiceLogResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServiceLogger.ServiceLogResponse;

        /**
         * Decodes a ServiceLogResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ServiceLogResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServiceLogger.ServiceLogResponse;

        /**
         * Verifies a ServiceLogResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ServiceLogResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ServiceLogResponse
         */
        public static fromObject(object: { [k: string]: any }): ServiceLogger.ServiceLogResponse;

        /**
         * Creates a plain object from a ServiceLogResponse message. Also converts values to other types if specified.
         * @param message ServiceLogResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ServiceLogger.ServiceLogResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ServiceLogResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ServiceLogClearRequest. */
    interface IServiceLogClearRequest {

        /** ServiceLogClearRequest useDefaults */
        useDefaults?: (boolean|null);

        /** ServiceLogClearRequest serviceTypeId */
        serviceTypeId?: (number|Long|null);

        /** ServiceLogClearRequest daysOld */
        daysOld?: (number|null);

        /** ServiceLogClearRequest hoursOld */
        hoursOld?: (number|null);

        /** ServiceLogClearRequest resourceIdRange */
        resourceIdRange?: (ServiceLogger.IIdRange[]|null);
    }

    /** This is a request to clear the SSO Service Provider log */
    class ServiceLogClearRequest implements IServiceLogClearRequest {

        /**
         * Constructs a new ServiceLogClearRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: ServiceLogger.IServiceLogClearRequest);

        /** ServiceLogClearRequest useDefaults. */
        public useDefaults: boolean;

        /** ServiceLogClearRequest serviceTypeId. */
        public serviceTypeId: (number|Long);

        /** ServiceLogClearRequest daysOld. */
        public daysOld: number;

        /** ServiceLogClearRequest hoursOld. */
        public hoursOld: number;

        /** ServiceLogClearRequest resourceIdRange. */
        public resourceIdRange: ServiceLogger.IIdRange[];

        /**
         * Creates a new ServiceLogClearRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ServiceLogClearRequest instance
         */
        public static create(properties?: ServiceLogger.IServiceLogClearRequest): ServiceLogger.ServiceLogClearRequest;

        /**
         * Encodes the specified ServiceLogClearRequest message. Does not implicitly {@link ServiceLogger.ServiceLogClearRequest.verify|verify} messages.
         * @param message ServiceLogClearRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ServiceLogger.IServiceLogClearRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ServiceLogClearRequest message, length delimited. Does not implicitly {@link ServiceLogger.ServiceLogClearRequest.verify|verify} messages.
         * @param message ServiceLogClearRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ServiceLogger.IServiceLogClearRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ServiceLogClearRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ServiceLogClearRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServiceLogger.ServiceLogClearRequest;

        /**
         * Decodes a ServiceLogClearRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ServiceLogClearRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServiceLogger.ServiceLogClearRequest;

        /**
         * Verifies a ServiceLogClearRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ServiceLogClearRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ServiceLogClearRequest
         */
        public static fromObject(object: { [k: string]: any }): ServiceLogger.ServiceLogClearRequest;

        /**
         * Creates a plain object from a ServiceLogClearRequest message. Also converts values to other types if specified.
         * @param message ServiceLogClearRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ServiceLogger.ServiceLogClearRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ServiceLogClearRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ServiceLogClearResponse. */
    interface IServiceLogClearResponse {

        /** ServiceLogClearResponse serviceTypeId */
        serviceTypeId?: (number|Long|null);

        /** ServiceLogClearResponse serviceName */
        serviceName?: (string|null);

        /** ServiceLogClearResponse resourceIdRange */
        resourceIdRange?: (ServiceLogger.IIdRange[]|null);

        /** ServiceLogClearResponse numDeleted */
        numDeleted?: (number|null);

        /** ServiceLogClearResponse numRemaining */
        numRemaining?: (number|null);
    }

    /** This is the response from the sso_log_clear command */
    class ServiceLogClearResponse implements IServiceLogClearResponse {

        /**
         * Constructs a new ServiceLogClearResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: ServiceLogger.IServiceLogClearResponse);

        /** ServiceLogClearResponse serviceTypeId. */
        public serviceTypeId: (number|Long);

        /** ServiceLogClearResponse serviceName. */
        public serviceName: string;

        /** ServiceLogClearResponse resourceIdRange. */
        public resourceIdRange: ServiceLogger.IIdRange[];

        /** ServiceLogClearResponse numDeleted. */
        public numDeleted: number;

        /** ServiceLogClearResponse numRemaining. */
        public numRemaining: number;

        /**
         * Creates a new ServiceLogClearResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ServiceLogClearResponse instance
         */
        public static create(properties?: ServiceLogger.IServiceLogClearResponse): ServiceLogger.ServiceLogClearResponse;

        /**
         * Encodes the specified ServiceLogClearResponse message. Does not implicitly {@link ServiceLogger.ServiceLogClearResponse.verify|verify} messages.
         * @param message ServiceLogClearResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ServiceLogger.IServiceLogClearResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ServiceLogClearResponse message, length delimited. Does not implicitly {@link ServiceLogger.ServiceLogClearResponse.verify|verify} messages.
         * @param message ServiceLogClearResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ServiceLogger.IServiceLogClearResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ServiceLogClearResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ServiceLogClearResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServiceLogger.ServiceLogClearResponse;

        /**
         * Decodes a ServiceLogClearResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ServiceLogClearResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServiceLogger.ServiceLogClearResponse;

        /**
         * Verifies a ServiceLogClearResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ServiceLogClearResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ServiceLogClearResponse
         */
        public static fromObject(object: { [k: string]: any }): ServiceLogger.ServiceLogClearResponse;

        /**
         * Creates a plain object from a ServiceLogClearResponse message. Also converts values to other types if specified.
         * @param message ServiceLogClearResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ServiceLogger.ServiceLogClearResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ServiceLogClearResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Vault. */
export namespace Vault {

    /** CacheStatus enum. */
    enum CacheStatus {
        KEEP = 0,
        CLEAR = 1
    }

    /** Properties of a SyncDownRequest. */
    interface ISyncDownRequest {

        /** SyncDownRequest continuationToken */
        continuationToken?: (Uint8Array|null);
    }

    /** Represents a SyncDownRequest. */
    class SyncDownRequest implements ISyncDownRequest {

        /**
         * Constructs a new SyncDownRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.ISyncDownRequest);

        /** SyncDownRequest continuationToken. */
        public continuationToken: Uint8Array;

        /**
         * Creates a new SyncDownRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SyncDownRequest instance
         */
        public static create(properties?: Vault.ISyncDownRequest): Vault.SyncDownRequest;

        /**
         * Encodes the specified SyncDownRequest message. Does not implicitly {@link Vault.SyncDownRequest.verify|verify} messages.
         * @param message SyncDownRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.ISyncDownRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SyncDownRequest message, length delimited. Does not implicitly {@link Vault.SyncDownRequest.verify|verify} messages.
         * @param message SyncDownRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.ISyncDownRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SyncDownRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SyncDownRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.SyncDownRequest;

        /**
         * Decodes a SyncDownRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SyncDownRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.SyncDownRequest;

        /**
         * Verifies a SyncDownRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SyncDownRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SyncDownRequest
         */
        public static fromObject(object: { [k: string]: any }): Vault.SyncDownRequest;

        /**
         * Creates a plain object from a SyncDownRequest message. Also converts values to other types if specified.
         * @param message SyncDownRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.SyncDownRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SyncDownRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SyncDownResponse. */
    interface ISyncDownResponse {

        /** SyncDownResponse continuationToken */
        continuationToken?: (Uint8Array|null);

        /** SyncDownResponse hasMore */
        hasMore?: (boolean|null);

        /** SyncDownResponse cacheStatus */
        cacheStatus?: (Vault.CacheStatus|null);

        /** SyncDownResponse userFolders */
        userFolders?: (Vault.IUserFolder[]|null);

        /** SyncDownResponse sharedFolders */
        sharedFolders?: (Vault.ISharedFolder[]|null);

        /** SyncDownResponse userFolderSharedFolders */
        userFolderSharedFolders?: (Vault.IUserFolderSharedFolder[]|null);

        /** SyncDownResponse sharedFolderFolders */
        sharedFolderFolders?: (Vault.ISharedFolderFolder[]|null);

        /** SyncDownResponse records */
        records?: (Vault.IRecord[]|null);

        /** SyncDownResponse recordMetaData */
        recordMetaData?: (Vault.IRecordMetaData[]|null);

        /** SyncDownResponse nonSharedData */
        nonSharedData?: (Vault.INonSharedData[]|null);

        /** SyncDownResponse recordLinks */
        recordLinks?: (Vault.IRecordLink[]|null);

        /** SyncDownResponse userFolderRecords */
        userFolderRecords?: (Vault.IUserFolderRecord[]|null);

        /** SyncDownResponse sharedFolderRecords */
        sharedFolderRecords?: (Vault.ISharedFolderRecord[]|null);

        /** SyncDownResponse sharedFolderFolderRecords */
        sharedFolderFolderRecords?: (Vault.ISharedFolderFolderRecord[]|null);

        /** SyncDownResponse sharedFolderUsers */
        sharedFolderUsers?: (Vault.ISharedFolderUser[]|null);

        /** SyncDownResponse sharedFolderTeams */
        sharedFolderTeams?: (Vault.ISharedFolderTeam[]|null);

        /** SyncDownResponse recordAddAuditData */
        recordAddAuditData?: (Uint8Array[]|null);

        /** SyncDownResponse teams */
        teams?: (Vault.ITeam[]|null);

        /** SyncDownResponse sharingChanges */
        sharingChanges?: (Vault.ISharingChange[]|null);

        /** SyncDownResponse profile */
        profile?: (Vault.IProfile|null);

        /** SyncDownResponse profilePic */
        profilePic?: (Vault.IProfilePic|null);

        /** SyncDownResponse pendingTeamMembers */
        pendingTeamMembers?: (Vault.IPendingTeamMember[]|null);

        /** SyncDownResponse breachWatchRecords */
        breachWatchRecords?: (Vault.IBreachWatchRecord[]|null);

        /** SyncDownResponse userAuths */
        userAuths?: (Vault.IUserAuth[]|null);

        /** SyncDownResponse breachWatchSecurityData */
        breachWatchSecurityData?: (Vault.IBreachWatchSecurityData[]|null);

        /** SyncDownResponse reusedPasswords */
        reusedPasswords?: (Vault.IReusedPasswords|null);

        /** SyncDownResponse removedUserFolders */
        removedUserFolders?: (Uint8Array[]|null);

        /** SyncDownResponse removedSharedFolders */
        removedSharedFolders?: (Uint8Array[]|null);

        /** SyncDownResponse removedUserFolderSharedFolders */
        removedUserFolderSharedFolders?: (Vault.IUserFolderSharedFolder[]|null);

        /** SyncDownResponse removedSharedFolderFolders */
        removedSharedFolderFolders?: (Vault.ISharedFolderFolder[]|null);

        /** SyncDownResponse removedRecords */
        removedRecords?: (Uint8Array[]|null);

        /** SyncDownResponse removedRecordLinks */
        removedRecordLinks?: (Vault.IRecordLink[]|null);

        /** SyncDownResponse removedUserFolderRecords */
        removedUserFolderRecords?: (Vault.IUserFolderRecord[]|null);

        /** SyncDownResponse removedSharedFolderRecords */
        removedSharedFolderRecords?: (Vault.ISharedFolderRecord[]|null);

        /** SyncDownResponse removedSharedFolderFolderRecords */
        removedSharedFolderFolderRecords?: (Vault.ISharedFolderFolderRecord[]|null);

        /** SyncDownResponse removedSharedFolderUsers */
        removedSharedFolderUsers?: (Vault.ISharedFolderUser[]|null);

        /** SyncDownResponse removedSharedFolderTeams */
        removedSharedFolderTeams?: (Vault.ISharedFolderTeam[]|null);

        /** SyncDownResponse removedTeams */
        removedTeams?: (Uint8Array[]|null);

        /** SyncDownResponse ksmAppShares */
        ksmAppShares?: (Vault.IKsmChange[]|null);

        /** SyncDownResponse ksmAppClients */
        ksmAppClients?: (Vault.IKsmChange[]|null);

        /** SyncDownResponse shareInvitations */
        shareInvitations?: (Vault.IShareInvitation[]|null);

        /** SyncDownResponse diagnostics */
        diagnostics?: (Vault.ISyncDiagnostics|null);

        /** SyncDownResponse recordRotations */
        recordRotations?: (Vault.IRecordRotation[]|null);

        /** SyncDownResponse users */
        users?: (Vault.IUser[]|null);

        /** SyncDownResponse removedUsers */
        removedUsers?: (Uint8Array[]|null);
    }

    /** Represents a SyncDownResponse. */
    class SyncDownResponse implements ISyncDownResponse {

        /**
         * Constructs a new SyncDownResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.ISyncDownResponse);

        /** SyncDownResponse continuationToken. */
        public continuationToken: Uint8Array;

        /** SyncDownResponse hasMore. */
        public hasMore: boolean;

        /** SyncDownResponse cacheStatus. */
        public cacheStatus: Vault.CacheStatus;

        /** SyncDownResponse userFolders. */
        public userFolders: Vault.IUserFolder[];

        /** SyncDownResponse sharedFolders. */
        public sharedFolders: Vault.ISharedFolder[];

        /** SyncDownResponse userFolderSharedFolders. */
        public userFolderSharedFolders: Vault.IUserFolderSharedFolder[];

        /** SyncDownResponse sharedFolderFolders. */
        public sharedFolderFolders: Vault.ISharedFolderFolder[];

        /** SyncDownResponse records. */
        public records: Vault.IRecord[];

        /** SyncDownResponse recordMetaData. */
        public recordMetaData: Vault.IRecordMetaData[];

        /** SyncDownResponse nonSharedData. */
        public nonSharedData: Vault.INonSharedData[];

        /** SyncDownResponse recordLinks. */
        public recordLinks: Vault.IRecordLink[];

        /** SyncDownResponse userFolderRecords. */
        public userFolderRecords: Vault.IUserFolderRecord[];

        /** SyncDownResponse sharedFolderRecords. */
        public sharedFolderRecords: Vault.ISharedFolderRecord[];

        /** SyncDownResponse sharedFolderFolderRecords. */
        public sharedFolderFolderRecords: Vault.ISharedFolderFolderRecord[];

        /** SyncDownResponse sharedFolderUsers. */
        public sharedFolderUsers: Vault.ISharedFolderUser[];

        /** SyncDownResponse sharedFolderTeams. */
        public sharedFolderTeams: Vault.ISharedFolderTeam[];

        /** SyncDownResponse recordAddAuditData. */
        public recordAddAuditData: Uint8Array[];

        /** SyncDownResponse teams. */
        public teams: Vault.ITeam[];

        /** SyncDownResponse sharingChanges. */
        public sharingChanges: Vault.ISharingChange[];

        /** SyncDownResponse profile. */
        public profile?: (Vault.IProfile|null);

        /** SyncDownResponse profilePic. */
        public profilePic?: (Vault.IProfilePic|null);

        /** SyncDownResponse pendingTeamMembers. */
        public pendingTeamMembers: Vault.IPendingTeamMember[];

        /** SyncDownResponse breachWatchRecords. */
        public breachWatchRecords: Vault.IBreachWatchRecord[];

        /** SyncDownResponse userAuths. */
        public userAuths: Vault.IUserAuth[];

        /** SyncDownResponse breachWatchSecurityData. */
        public breachWatchSecurityData: Vault.IBreachWatchSecurityData[];

        /** SyncDownResponse reusedPasswords. */
        public reusedPasswords?: (Vault.IReusedPasswords|null);

        /** SyncDownResponse removedUserFolders. */
        public removedUserFolders: Uint8Array[];

        /** SyncDownResponse removedSharedFolders. */
        public removedSharedFolders: Uint8Array[];

        /** SyncDownResponse removedUserFolderSharedFolders. */
        public removedUserFolderSharedFolders: Vault.IUserFolderSharedFolder[];

        /** SyncDownResponse removedSharedFolderFolders. */
        public removedSharedFolderFolders: Vault.ISharedFolderFolder[];

        /** SyncDownResponse removedRecords. */
        public removedRecords: Uint8Array[];

        /** SyncDownResponse removedRecordLinks. */
        public removedRecordLinks: Vault.IRecordLink[];

        /** SyncDownResponse removedUserFolderRecords. */
        public removedUserFolderRecords: Vault.IUserFolderRecord[];

        /** SyncDownResponse removedSharedFolderRecords. */
        public removedSharedFolderRecords: Vault.ISharedFolderRecord[];

        /** SyncDownResponse removedSharedFolderFolderRecords. */
        public removedSharedFolderFolderRecords: Vault.ISharedFolderFolderRecord[];

        /** SyncDownResponse removedSharedFolderUsers. */
        public removedSharedFolderUsers: Vault.ISharedFolderUser[];

        /** SyncDownResponse removedSharedFolderTeams. */
        public removedSharedFolderTeams: Vault.ISharedFolderTeam[];

        /** SyncDownResponse removedTeams. */
        public removedTeams: Uint8Array[];

        /** SyncDownResponse ksmAppShares. */
        public ksmAppShares: Vault.IKsmChange[];

        /** SyncDownResponse ksmAppClients. */
        public ksmAppClients: Vault.IKsmChange[];

        /** SyncDownResponse shareInvitations. */
        public shareInvitations: Vault.IShareInvitation[];

        /** SyncDownResponse diagnostics. */
        public diagnostics?: (Vault.ISyncDiagnostics|null);

        /** SyncDownResponse recordRotations. */
        public recordRotations: Vault.IRecordRotation[];

        /** SyncDownResponse users. */
        public users: Vault.IUser[];

        /** SyncDownResponse removedUsers. */
        public removedUsers: Uint8Array[];

        /**
         * Creates a new SyncDownResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SyncDownResponse instance
         */
        public static create(properties?: Vault.ISyncDownResponse): Vault.SyncDownResponse;

        /**
         * Encodes the specified SyncDownResponse message. Does not implicitly {@link Vault.SyncDownResponse.verify|verify} messages.
         * @param message SyncDownResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.ISyncDownResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SyncDownResponse message, length delimited. Does not implicitly {@link Vault.SyncDownResponse.verify|verify} messages.
         * @param message SyncDownResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.ISyncDownResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SyncDownResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SyncDownResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.SyncDownResponse;

        /**
         * Decodes a SyncDownResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SyncDownResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.SyncDownResponse;

        /**
         * Verifies a SyncDownResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SyncDownResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SyncDownResponse
         */
        public static fromObject(object: { [k: string]: any }): Vault.SyncDownResponse;

        /**
         * Creates a plain object from a SyncDownResponse message. Also converts values to other types if specified.
         * @param message SyncDownResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.SyncDownResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SyncDownResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserFolder. */
    interface IUserFolder {

        /** UserFolder folderUid */
        folderUid?: (Uint8Array|null);

        /** UserFolder parentUid */
        parentUid?: (Uint8Array|null);

        /** UserFolder userFolderKey */
        userFolderKey?: (Uint8Array|null);

        /** UserFolder keyType */
        keyType?: (Records.RecordKeyType|null);

        /** UserFolder revision */
        revision?: (number|Long|null);

        /** UserFolder data */
        data?: (Uint8Array|null);
    }

    /** Represents a UserFolder. */
    class UserFolder implements IUserFolder {

        /**
         * Constructs a new UserFolder.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.IUserFolder);

        /** UserFolder folderUid. */
        public folderUid: Uint8Array;

        /** UserFolder parentUid. */
        public parentUid: Uint8Array;

        /** UserFolder userFolderKey. */
        public userFolderKey: Uint8Array;

        /** UserFolder keyType. */
        public keyType: Records.RecordKeyType;

        /** UserFolder revision. */
        public revision: (number|Long);

        /** UserFolder data. */
        public data: Uint8Array;

        /**
         * Creates a new UserFolder instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserFolder instance
         */
        public static create(properties?: Vault.IUserFolder): Vault.UserFolder;

        /**
         * Encodes the specified UserFolder message. Does not implicitly {@link Vault.UserFolder.verify|verify} messages.
         * @param message UserFolder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.IUserFolder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserFolder message, length delimited. Does not implicitly {@link Vault.UserFolder.verify|verify} messages.
         * @param message UserFolder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.IUserFolder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserFolder message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserFolder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.UserFolder;

        /**
         * Decodes a UserFolder message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserFolder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.UserFolder;

        /**
         * Verifies a UserFolder message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserFolder message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserFolder
         */
        public static fromObject(object: { [k: string]: any }): Vault.UserFolder;

        /**
         * Creates a plain object from a UserFolder message. Also converts values to other types if specified.
         * @param message UserFolder
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.UserFolder, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserFolder to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolder. */
    interface ISharedFolder {

        /** SharedFolder sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** SharedFolder revision */
        revision?: (number|Long|null);

        /** SharedFolder sharedFolderKey */
        sharedFolderKey?: (Uint8Array|null);

        /** SharedFolder keyType */
        keyType?: (Records.RecordKeyType|null);

        /** SharedFolder data */
        data?: (Uint8Array|null);

        /** SharedFolder defaultManageRecords */
        defaultManageRecords?: (boolean|null);

        /** SharedFolder defaultManageUsers */
        defaultManageUsers?: (boolean|null);

        /** SharedFolder defaultCanEdit */
        defaultCanEdit?: (boolean|null);

        /** SharedFolder defaultCanReshare */
        defaultCanReshare?: (boolean|null);

        /** SharedFolder cacheStatus */
        cacheStatus?: (Vault.CacheStatus|null);

        /** SharedFolder owner */
        owner?: (string|null);

        /** SharedFolder ownerAccountUid */
        ownerAccountUid?: (Uint8Array|null);

        /** SharedFolder name */
        name?: (Uint8Array|null);
    }

    /** Represents a SharedFolder. */
    class SharedFolder implements ISharedFolder {

        /**
         * Constructs a new SharedFolder.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.ISharedFolder);

        /** SharedFolder sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** SharedFolder revision. */
        public revision: (number|Long);

        /** SharedFolder sharedFolderKey. */
        public sharedFolderKey: Uint8Array;

        /** SharedFolder keyType. */
        public keyType: Records.RecordKeyType;

        /** SharedFolder data. */
        public data: Uint8Array;

        /** SharedFolder defaultManageRecords. */
        public defaultManageRecords: boolean;

        /** SharedFolder defaultManageUsers. */
        public defaultManageUsers: boolean;

        /** SharedFolder defaultCanEdit. */
        public defaultCanEdit: boolean;

        /** SharedFolder defaultCanReshare. */
        public defaultCanReshare: boolean;

        /** SharedFolder cacheStatus. */
        public cacheStatus: Vault.CacheStatus;

        /** SharedFolder owner. */
        public owner: string;

        /** SharedFolder ownerAccountUid. */
        public ownerAccountUid: Uint8Array;

        /** SharedFolder name. */
        public name: Uint8Array;

        /**
         * Creates a new SharedFolder instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolder instance
         */
        public static create(properties?: Vault.ISharedFolder): Vault.SharedFolder;

        /**
         * Encodes the specified SharedFolder message. Does not implicitly {@link Vault.SharedFolder.verify|verify} messages.
         * @param message SharedFolder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.ISharedFolder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolder message, length delimited. Does not implicitly {@link Vault.SharedFolder.verify|verify} messages.
         * @param message SharedFolder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.ISharedFolder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolder message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.SharedFolder;

        /**
         * Decodes a SharedFolder message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.SharedFolder;

        /**
         * Verifies a SharedFolder message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolder message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolder
         */
        public static fromObject(object: { [k: string]: any }): Vault.SharedFolder;

        /**
         * Creates a plain object from a SharedFolder message. Also converts values to other types if specified.
         * @param message SharedFolder
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.SharedFolder, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolder to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserFolderSharedFolder. */
    interface IUserFolderSharedFolder {

        /** UserFolderSharedFolder folderUid */
        folderUid?: (Uint8Array|null);

        /** UserFolderSharedFolder sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** UserFolderSharedFolder revision */
        revision?: (number|Long|null);
    }

    /** Represents a UserFolderSharedFolder. */
    class UserFolderSharedFolder implements IUserFolderSharedFolder {

        /**
         * Constructs a new UserFolderSharedFolder.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.IUserFolderSharedFolder);

        /** UserFolderSharedFolder folderUid. */
        public folderUid: Uint8Array;

        /** UserFolderSharedFolder sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** UserFolderSharedFolder revision. */
        public revision: (number|Long);

        /**
         * Creates a new UserFolderSharedFolder instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserFolderSharedFolder instance
         */
        public static create(properties?: Vault.IUserFolderSharedFolder): Vault.UserFolderSharedFolder;

        /**
         * Encodes the specified UserFolderSharedFolder message. Does not implicitly {@link Vault.UserFolderSharedFolder.verify|verify} messages.
         * @param message UserFolderSharedFolder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.IUserFolderSharedFolder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserFolderSharedFolder message, length delimited. Does not implicitly {@link Vault.UserFolderSharedFolder.verify|verify} messages.
         * @param message UserFolderSharedFolder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.IUserFolderSharedFolder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserFolderSharedFolder message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserFolderSharedFolder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.UserFolderSharedFolder;

        /**
         * Decodes a UserFolderSharedFolder message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserFolderSharedFolder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.UserFolderSharedFolder;

        /**
         * Verifies a UserFolderSharedFolder message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserFolderSharedFolder message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserFolderSharedFolder
         */
        public static fromObject(object: { [k: string]: any }): Vault.UserFolderSharedFolder;

        /**
         * Creates a plain object from a UserFolderSharedFolder message. Also converts values to other types if specified.
         * @param message UserFolderSharedFolder
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.UserFolderSharedFolder, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserFolderSharedFolder to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderFolder. */
    interface ISharedFolderFolder {

        /** SharedFolderFolder sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** SharedFolderFolder folderUid */
        folderUid?: (Uint8Array|null);

        /** SharedFolderFolder parentUid */
        parentUid?: (Uint8Array|null);

        /** SharedFolderFolder sharedFolderFolderKey */
        sharedFolderFolderKey?: (Uint8Array|null);

        /** SharedFolderFolder keyType */
        keyType?: (Records.RecordKeyType|null);

        /** SharedFolderFolder revision */
        revision?: (number|Long|null);

        /** SharedFolderFolder data */
        data?: (Uint8Array|null);
    }

    /** Represents a SharedFolderFolder. */
    class SharedFolderFolder implements ISharedFolderFolder {

        /**
         * Constructs a new SharedFolderFolder.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.ISharedFolderFolder);

        /** SharedFolderFolder sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** SharedFolderFolder folderUid. */
        public folderUid: Uint8Array;

        /** SharedFolderFolder parentUid. */
        public parentUid: Uint8Array;

        /** SharedFolderFolder sharedFolderFolderKey. */
        public sharedFolderFolderKey: Uint8Array;

        /** SharedFolderFolder keyType. */
        public keyType: Records.RecordKeyType;

        /** SharedFolderFolder revision. */
        public revision: (number|Long);

        /** SharedFolderFolder data. */
        public data: Uint8Array;

        /**
         * Creates a new SharedFolderFolder instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderFolder instance
         */
        public static create(properties?: Vault.ISharedFolderFolder): Vault.SharedFolderFolder;

        /**
         * Encodes the specified SharedFolderFolder message. Does not implicitly {@link Vault.SharedFolderFolder.verify|verify} messages.
         * @param message SharedFolderFolder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.ISharedFolderFolder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderFolder message, length delimited. Does not implicitly {@link Vault.SharedFolderFolder.verify|verify} messages.
         * @param message SharedFolderFolder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.ISharedFolderFolder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderFolder message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderFolder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.SharedFolderFolder;

        /**
         * Decodes a SharedFolderFolder message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderFolder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.SharedFolderFolder;

        /**
         * Verifies a SharedFolderFolder message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderFolder message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderFolder
         */
        public static fromObject(object: { [k: string]: any }): Vault.SharedFolderFolder;

        /**
         * Creates a plain object from a SharedFolderFolder message. Also converts values to other types if specified.
         * @param message SharedFolderFolder
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.SharedFolderFolder, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderFolder to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderKey. */
    interface ISharedFolderKey {

        /** SharedFolderKey sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** SharedFolderKey sharedFolderKey */
        sharedFolderKey?: (Uint8Array|null);

        /** SharedFolderKey keyType */
        keyType?: (Records.RecordKeyType|null);
    }

    /** Represents a SharedFolderKey. */
    class SharedFolderKey implements ISharedFolderKey {

        /**
         * Constructs a new SharedFolderKey.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.ISharedFolderKey);

        /** SharedFolderKey sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** SharedFolderKey sharedFolderKey. */
        public sharedFolderKey: Uint8Array;

        /** SharedFolderKey keyType. */
        public keyType: Records.RecordKeyType;

        /**
         * Creates a new SharedFolderKey instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderKey instance
         */
        public static create(properties?: Vault.ISharedFolderKey): Vault.SharedFolderKey;

        /**
         * Encodes the specified SharedFolderKey message. Does not implicitly {@link Vault.SharedFolderKey.verify|verify} messages.
         * @param message SharedFolderKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.ISharedFolderKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderKey message, length delimited. Does not implicitly {@link Vault.SharedFolderKey.verify|verify} messages.
         * @param message SharedFolderKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.ISharedFolderKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderKey message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.SharedFolderKey;

        /**
         * Decodes a SharedFolderKey message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.SharedFolderKey;

        /**
         * Verifies a SharedFolderKey message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderKey message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderKey
         */
        public static fromObject(object: { [k: string]: any }): Vault.SharedFolderKey;

        /**
         * Creates a plain object from a SharedFolderKey message. Also converts values to other types if specified.
         * @param message SharedFolderKey
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.SharedFolderKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderKey to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Team. */
    interface ITeam {

        /** Team teamUid */
        teamUid?: (Uint8Array|null);

        /** Team name */
        name?: (string|null);

        /** Team teamKey */
        teamKey?: (Uint8Array|null);

        /** Team teamKeyType */
        teamKeyType?: (Records.RecordKeyType|null);

        /** Team teamPrivateKey */
        teamPrivateKey?: (Uint8Array|null);

        /** Team restrictEdit */
        restrictEdit?: (boolean|null);

        /** Team restrictShare */
        restrictShare?: (boolean|null);

        /** Team restrictView */
        restrictView?: (boolean|null);

        /** Team removedSharedFolders */
        removedSharedFolders?: (Uint8Array[]|null);

        /** Team sharedFolderKeys */
        sharedFolderKeys?: (Vault.ISharedFolderKey[]|null);
    }

    /** Represents a Team. */
    class Team implements ITeam {

        /**
         * Constructs a new Team.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.ITeam);

        /** Team teamUid. */
        public teamUid: Uint8Array;

        /** Team name. */
        public name: string;

        /** Team teamKey. */
        public teamKey: Uint8Array;

        /** Team teamKeyType. */
        public teamKeyType: Records.RecordKeyType;

        /** Team teamPrivateKey. */
        public teamPrivateKey: Uint8Array;

        /** Team restrictEdit. */
        public restrictEdit: boolean;

        /** Team restrictShare. */
        public restrictShare: boolean;

        /** Team restrictView. */
        public restrictView: boolean;

        /** Team removedSharedFolders. */
        public removedSharedFolders: Uint8Array[];

        /** Team sharedFolderKeys. */
        public sharedFolderKeys: Vault.ISharedFolderKey[];

        /**
         * Creates a new Team instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Team instance
         */
        public static create(properties?: Vault.ITeam): Vault.Team;

        /**
         * Encodes the specified Team message. Does not implicitly {@link Vault.Team.verify|verify} messages.
         * @param message Team message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.ITeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Team message, length delimited. Does not implicitly {@link Vault.Team.verify|verify} messages.
         * @param message Team message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.ITeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Team message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Team
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.Team;

        /**
         * Decodes a Team message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Team
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.Team;

        /**
         * Verifies a Team message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Team message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Team
         */
        public static fromObject(object: { [k: string]: any }): Vault.Team;

        /**
         * Creates a plain object from a Team message. Also converts values to other types if specified.
         * @param message Team
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.Team, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Team to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Record. */
    interface IRecord {

        /** Record recordUid */
        recordUid?: (Uint8Array|null);

        /** Record revision */
        revision?: (number|Long|null);

        /** Record version */
        version?: (number|null);

        /** Record shared */
        shared?: (boolean|null);

        /** Record clientModifiedTime */
        clientModifiedTime?: (number|Long|null);

        /** Record data */
        data?: (Uint8Array|null);

        /** Record extra */
        extra?: (Uint8Array|null);

        /** Record udata */
        udata?: (string|null);

        /** Record fileSize */
        fileSize?: (number|Long|null);

        /** Record thumbnailSize */
        thumbnailSize?: (number|Long|null);
    }

    /** Represents a Record. */
    class Record implements IRecord {

        /**
         * Constructs a new Record.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.IRecord);

        /** Record recordUid. */
        public recordUid: Uint8Array;

        /** Record revision. */
        public revision: (number|Long);

        /** Record version. */
        public version: number;

        /** Record shared. */
        public shared: boolean;

        /** Record clientModifiedTime. */
        public clientModifiedTime: (number|Long);

        /** Record data. */
        public data: Uint8Array;

        /** Record extra. */
        public extra: Uint8Array;

        /** Record udata. */
        public udata: string;

        /** Record fileSize. */
        public fileSize: (number|Long);

        /** Record thumbnailSize. */
        public thumbnailSize: (number|Long);

        /**
         * Creates a new Record instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Record instance
         */
        public static create(properties?: Vault.IRecord): Vault.Record;

        /**
         * Encodes the specified Record message. Does not implicitly {@link Vault.Record.verify|verify} messages.
         * @param message Record message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.IRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Record message, length delimited. Does not implicitly {@link Vault.Record.verify|verify} messages.
         * @param message Record message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.IRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Record message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Record
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.Record;

        /**
         * Decodes a Record message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Record
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.Record;

        /**
         * Verifies a Record message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Record message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Record
         */
        public static fromObject(object: { [k: string]: any }): Vault.Record;

        /**
         * Creates a plain object from a Record message. Also converts values to other types if specified.
         * @param message Record
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.Record, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Record to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordLink. */
    interface IRecordLink {

        /** RecordLink parentRecordUid */
        parentRecordUid?: (Uint8Array|null);

        /** RecordLink childRecordUid */
        childRecordUid?: (Uint8Array|null);

        /** RecordLink recordKey */
        recordKey?: (Uint8Array|null);

        /** RecordLink revision */
        revision?: (number|Long|null);
    }

    /** Represents a RecordLink. */
    class RecordLink implements IRecordLink {

        /**
         * Constructs a new RecordLink.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.IRecordLink);

        /** RecordLink parentRecordUid. */
        public parentRecordUid: Uint8Array;

        /** RecordLink childRecordUid. */
        public childRecordUid: Uint8Array;

        /** RecordLink recordKey. */
        public recordKey: Uint8Array;

        /** RecordLink revision. */
        public revision: (number|Long);

        /**
         * Creates a new RecordLink instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordLink instance
         */
        public static create(properties?: Vault.IRecordLink): Vault.RecordLink;

        /**
         * Encodes the specified RecordLink message. Does not implicitly {@link Vault.RecordLink.verify|verify} messages.
         * @param message RecordLink message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.IRecordLink, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordLink message, length delimited. Does not implicitly {@link Vault.RecordLink.verify|verify} messages.
         * @param message RecordLink message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.IRecordLink, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordLink message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordLink
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.RecordLink;

        /**
         * Decodes a RecordLink message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordLink
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.RecordLink;

        /**
         * Verifies a RecordLink message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordLink message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordLink
         */
        public static fromObject(object: { [k: string]: any }): Vault.RecordLink;

        /**
         * Creates a plain object from a RecordLink message. Also converts values to other types if specified.
         * @param message RecordLink
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.RecordLink, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordLink to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserFolderRecord. */
    interface IUserFolderRecord {

        /** UserFolderRecord folderUid */
        folderUid?: (Uint8Array|null);

        /** UserFolderRecord recordUid */
        recordUid?: (Uint8Array|null);

        /** UserFolderRecord revision */
        revision?: (number|Long|null);
    }

    /** Represents a UserFolderRecord. */
    class UserFolderRecord implements IUserFolderRecord {

        /**
         * Constructs a new UserFolderRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.IUserFolderRecord);

        /** UserFolderRecord folderUid. */
        public folderUid: Uint8Array;

        /** UserFolderRecord recordUid. */
        public recordUid: Uint8Array;

        /** UserFolderRecord revision. */
        public revision: (number|Long);

        /**
         * Creates a new UserFolderRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserFolderRecord instance
         */
        public static create(properties?: Vault.IUserFolderRecord): Vault.UserFolderRecord;

        /**
         * Encodes the specified UserFolderRecord message. Does not implicitly {@link Vault.UserFolderRecord.verify|verify} messages.
         * @param message UserFolderRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.IUserFolderRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserFolderRecord message, length delimited. Does not implicitly {@link Vault.UserFolderRecord.verify|verify} messages.
         * @param message UserFolderRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.IUserFolderRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserFolderRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserFolderRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.UserFolderRecord;

        /**
         * Decodes a UserFolderRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserFolderRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.UserFolderRecord;

        /**
         * Verifies a UserFolderRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserFolderRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserFolderRecord
         */
        public static fromObject(object: { [k: string]: any }): Vault.UserFolderRecord;

        /**
         * Creates a plain object from a UserFolderRecord message. Also converts values to other types if specified.
         * @param message UserFolderRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.UserFolderRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserFolderRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderFolderRecord. */
    interface ISharedFolderFolderRecord {

        /** SharedFolderFolderRecord sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** SharedFolderFolderRecord folderUid */
        folderUid?: (Uint8Array|null);

        /** SharedFolderFolderRecord recordUid */
        recordUid?: (Uint8Array|null);
    }

    /** Represents a SharedFolderFolderRecord. */
    class SharedFolderFolderRecord implements ISharedFolderFolderRecord {

        /**
         * Constructs a new SharedFolderFolderRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.ISharedFolderFolderRecord);

        /** SharedFolderFolderRecord sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** SharedFolderFolderRecord folderUid. */
        public folderUid: Uint8Array;

        /** SharedFolderFolderRecord recordUid. */
        public recordUid: Uint8Array;

        /**
         * Creates a new SharedFolderFolderRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderFolderRecord instance
         */
        public static create(properties?: Vault.ISharedFolderFolderRecord): Vault.SharedFolderFolderRecord;

        /**
         * Encodes the specified SharedFolderFolderRecord message. Does not implicitly {@link Vault.SharedFolderFolderRecord.verify|verify} messages.
         * @param message SharedFolderFolderRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.ISharedFolderFolderRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderFolderRecord message, length delimited. Does not implicitly {@link Vault.SharedFolderFolderRecord.verify|verify} messages.
         * @param message SharedFolderFolderRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.ISharedFolderFolderRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderFolderRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderFolderRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.SharedFolderFolderRecord;

        /**
         * Decodes a SharedFolderFolderRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderFolderRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.SharedFolderFolderRecord;

        /**
         * Verifies a SharedFolderFolderRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderFolderRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderFolderRecord
         */
        public static fromObject(object: { [k: string]: any }): Vault.SharedFolderFolderRecord;

        /**
         * Creates a plain object from a SharedFolderFolderRecord message. Also converts values to other types if specified.
         * @param message SharedFolderFolderRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.SharedFolderFolderRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderFolderRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NonSharedData. */
    interface INonSharedData {

        /** NonSharedData recordUid */
        recordUid?: (Uint8Array|null);

        /** NonSharedData data */
        data?: (Uint8Array|null);
    }

    /** Represents a NonSharedData. */
    class NonSharedData implements INonSharedData {

        /**
         * Constructs a new NonSharedData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.INonSharedData);

        /** NonSharedData recordUid. */
        public recordUid: Uint8Array;

        /** NonSharedData data. */
        public data: Uint8Array;

        /**
         * Creates a new NonSharedData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NonSharedData instance
         */
        public static create(properties?: Vault.INonSharedData): Vault.NonSharedData;

        /**
         * Encodes the specified NonSharedData message. Does not implicitly {@link Vault.NonSharedData.verify|verify} messages.
         * @param message NonSharedData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.INonSharedData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NonSharedData message, length delimited. Does not implicitly {@link Vault.NonSharedData.verify|verify} messages.
         * @param message NonSharedData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.INonSharedData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NonSharedData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NonSharedData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.NonSharedData;

        /**
         * Decodes a NonSharedData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NonSharedData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.NonSharedData;

        /**
         * Verifies a NonSharedData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NonSharedData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NonSharedData
         */
        public static fromObject(object: { [k: string]: any }): Vault.NonSharedData;

        /**
         * Creates a plain object from a NonSharedData message. Also converts values to other types if specified.
         * @param message NonSharedData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.NonSharedData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NonSharedData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordMetaData. */
    interface IRecordMetaData {

        /** RecordMetaData recordUid */
        recordUid?: (Uint8Array|null);

        /** RecordMetaData owner */
        owner?: (boolean|null);

        /** RecordMetaData recordKey */
        recordKey?: (Uint8Array|null);

        /** RecordMetaData recordKeyType */
        recordKeyType?: (Records.RecordKeyType|null);

        /** RecordMetaData canShare */
        canShare?: (boolean|null);

        /** RecordMetaData canEdit */
        canEdit?: (boolean|null);

        /** RecordMetaData ownerAccountUid */
        ownerAccountUid?: (Uint8Array|null);

        /** RecordMetaData expiration */
        expiration?: (number|Long|null);
    }

    /** Represents a RecordMetaData. */
    class RecordMetaData implements IRecordMetaData {

        /**
         * Constructs a new RecordMetaData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.IRecordMetaData);

        /** RecordMetaData recordUid. */
        public recordUid: Uint8Array;

        /** RecordMetaData owner. */
        public owner: boolean;

        /** RecordMetaData recordKey. */
        public recordKey: Uint8Array;

        /** RecordMetaData recordKeyType. */
        public recordKeyType: Records.RecordKeyType;

        /** RecordMetaData canShare. */
        public canShare: boolean;

        /** RecordMetaData canEdit. */
        public canEdit: boolean;

        /** RecordMetaData ownerAccountUid. */
        public ownerAccountUid: Uint8Array;

        /** RecordMetaData expiration. */
        public expiration: (number|Long);

        /**
         * Creates a new RecordMetaData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordMetaData instance
         */
        public static create(properties?: Vault.IRecordMetaData): Vault.RecordMetaData;

        /**
         * Encodes the specified RecordMetaData message. Does not implicitly {@link Vault.RecordMetaData.verify|verify} messages.
         * @param message RecordMetaData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.IRecordMetaData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordMetaData message, length delimited. Does not implicitly {@link Vault.RecordMetaData.verify|verify} messages.
         * @param message RecordMetaData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.IRecordMetaData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordMetaData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordMetaData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.RecordMetaData;

        /**
         * Decodes a RecordMetaData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordMetaData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.RecordMetaData;

        /**
         * Verifies a RecordMetaData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordMetaData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordMetaData
         */
        public static fromObject(object: { [k: string]: any }): Vault.RecordMetaData;

        /**
         * Creates a plain object from a RecordMetaData message. Also converts values to other types if specified.
         * @param message RecordMetaData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.RecordMetaData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordMetaData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharingChange. */
    interface ISharingChange {

        /** SharingChange recordUid */
        recordUid?: (Uint8Array|null);

        /** SharingChange shared */
        shared?: (boolean|null);
    }

    /** Represents a SharingChange. */
    class SharingChange implements ISharingChange {

        /**
         * Constructs a new SharingChange.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.ISharingChange);

        /** SharingChange recordUid. */
        public recordUid: Uint8Array;

        /** SharingChange shared. */
        public shared: boolean;

        /**
         * Creates a new SharingChange instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharingChange instance
         */
        public static create(properties?: Vault.ISharingChange): Vault.SharingChange;

        /**
         * Encodes the specified SharingChange message. Does not implicitly {@link Vault.SharingChange.verify|verify} messages.
         * @param message SharingChange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.ISharingChange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharingChange message, length delimited. Does not implicitly {@link Vault.SharingChange.verify|verify} messages.
         * @param message SharingChange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.ISharingChange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharingChange message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharingChange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.SharingChange;

        /**
         * Decodes a SharingChange message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharingChange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.SharingChange;

        /**
         * Verifies a SharingChange message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharingChange message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharingChange
         */
        public static fromObject(object: { [k: string]: any }): Vault.SharingChange;

        /**
         * Creates a plain object from a SharingChange message. Also converts values to other types if specified.
         * @param message SharingChange
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.SharingChange, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharingChange to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Profile. */
    interface IProfile {

        /** Profile data */
        data?: (Uint8Array|null);

        /** Profile profileName */
        profileName?: (string|null);

        /** Profile revision */
        revision?: (number|Long|null);
    }

    /** Represents a Profile. */
    class Profile implements IProfile {

        /**
         * Constructs a new Profile.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.IProfile);

        /** Profile data. */
        public data: Uint8Array;

        /** Profile profileName. */
        public profileName: string;

        /** Profile revision. */
        public revision: (number|Long);

        /**
         * Creates a new Profile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Profile instance
         */
        public static create(properties?: Vault.IProfile): Vault.Profile;

        /**
         * Encodes the specified Profile message. Does not implicitly {@link Vault.Profile.verify|verify} messages.
         * @param message Profile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.IProfile, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Profile message, length delimited. Does not implicitly {@link Vault.Profile.verify|verify} messages.
         * @param message Profile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.IProfile, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Profile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Profile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.Profile;

        /**
         * Decodes a Profile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Profile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.Profile;

        /**
         * Verifies a Profile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Profile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Profile
         */
        public static fromObject(object: { [k: string]: any }): Vault.Profile;

        /**
         * Creates a plain object from a Profile message. Also converts values to other types if specified.
         * @param message Profile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.Profile, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Profile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ProfilePic. */
    interface IProfilePic {

        /** ProfilePic url */
        url?: (string|null);

        /** ProfilePic revision */
        revision?: (number|Long|null);
    }

    /** Represents a ProfilePic. */
    class ProfilePic implements IProfilePic {

        /**
         * Constructs a new ProfilePic.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.IProfilePic);

        /** ProfilePic url. */
        public url: string;

        /** ProfilePic revision. */
        public revision: (number|Long);

        /**
         * Creates a new ProfilePic instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ProfilePic instance
         */
        public static create(properties?: Vault.IProfilePic): Vault.ProfilePic;

        /**
         * Encodes the specified ProfilePic message. Does not implicitly {@link Vault.ProfilePic.verify|verify} messages.
         * @param message ProfilePic message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.IProfilePic, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ProfilePic message, length delimited. Does not implicitly {@link Vault.ProfilePic.verify|verify} messages.
         * @param message ProfilePic message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.IProfilePic, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ProfilePic message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ProfilePic
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.ProfilePic;

        /**
         * Decodes a ProfilePic message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ProfilePic
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.ProfilePic;

        /**
         * Verifies a ProfilePic message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ProfilePic message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ProfilePic
         */
        public static fromObject(object: { [k: string]: any }): Vault.ProfilePic;

        /**
         * Creates a plain object from a ProfilePic message. Also converts values to other types if specified.
         * @param message ProfilePic
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.ProfilePic, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ProfilePic to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PendingTeamMember. */
    interface IPendingTeamMember {

        /** PendingTeamMember enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** PendingTeamMember userPublicKey */
        userPublicKey?: (Uint8Array|null);

        /** PendingTeamMember teamUids */
        teamUids?: (Uint8Array[]|null);
    }

    /** Represents a PendingTeamMember. */
    class PendingTeamMember implements IPendingTeamMember {

        /**
         * Constructs a new PendingTeamMember.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.IPendingTeamMember);

        /** PendingTeamMember enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** PendingTeamMember userPublicKey. */
        public userPublicKey: Uint8Array;

        /** PendingTeamMember teamUids. */
        public teamUids: Uint8Array[];

        /**
         * Creates a new PendingTeamMember instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PendingTeamMember instance
         */
        public static create(properties?: Vault.IPendingTeamMember): Vault.PendingTeamMember;

        /**
         * Encodes the specified PendingTeamMember message. Does not implicitly {@link Vault.PendingTeamMember.verify|verify} messages.
         * @param message PendingTeamMember message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.IPendingTeamMember, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PendingTeamMember message, length delimited. Does not implicitly {@link Vault.PendingTeamMember.verify|verify} messages.
         * @param message PendingTeamMember message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.IPendingTeamMember, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PendingTeamMember message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PendingTeamMember
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.PendingTeamMember;

        /**
         * Decodes a PendingTeamMember message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PendingTeamMember
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.PendingTeamMember;

        /**
         * Verifies a PendingTeamMember message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PendingTeamMember message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PendingTeamMember
         */
        public static fromObject(object: { [k: string]: any }): Vault.PendingTeamMember;

        /**
         * Creates a plain object from a PendingTeamMember message. Also converts values to other types if specified.
         * @param message PendingTeamMember
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.PendingTeamMember, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PendingTeamMember to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BreachWatchRecord. */
    interface IBreachWatchRecord {

        /** BreachWatchRecord recordUid */
        recordUid?: (Uint8Array|null);

        /** BreachWatchRecord data */
        data?: (Uint8Array|null);

        /** BreachWatchRecord type */
        type?: (BreachWatch.BreachWatchInfoType|null);

        /** BreachWatchRecord scannedBy */
        scannedBy?: (string|null);

        /** BreachWatchRecord revision */
        revision?: (number|Long|null);

        /** BreachWatchRecord scannedByAccountUid */
        scannedByAccountUid?: (Uint8Array|null);
    }

    /** Represents a BreachWatchRecord. */
    class BreachWatchRecord implements IBreachWatchRecord {

        /**
         * Constructs a new BreachWatchRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.IBreachWatchRecord);

        /** BreachWatchRecord recordUid. */
        public recordUid: Uint8Array;

        /** BreachWatchRecord data. */
        public data: Uint8Array;

        /** BreachWatchRecord type. */
        public type: BreachWatch.BreachWatchInfoType;

        /** BreachWatchRecord scannedBy. */
        public scannedBy: string;

        /** BreachWatchRecord revision. */
        public revision: (number|Long);

        /** BreachWatchRecord scannedByAccountUid. */
        public scannedByAccountUid: Uint8Array;

        /**
         * Creates a new BreachWatchRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BreachWatchRecord instance
         */
        public static create(properties?: Vault.IBreachWatchRecord): Vault.BreachWatchRecord;

        /**
         * Encodes the specified BreachWatchRecord message. Does not implicitly {@link Vault.BreachWatchRecord.verify|verify} messages.
         * @param message BreachWatchRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.IBreachWatchRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BreachWatchRecord message, length delimited. Does not implicitly {@link Vault.BreachWatchRecord.verify|verify} messages.
         * @param message BreachWatchRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.IBreachWatchRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BreachWatchRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BreachWatchRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.BreachWatchRecord;

        /**
         * Decodes a BreachWatchRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BreachWatchRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.BreachWatchRecord;

        /**
         * Verifies a BreachWatchRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BreachWatchRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BreachWatchRecord
         */
        public static fromObject(object: { [k: string]: any }): Vault.BreachWatchRecord;

        /**
         * Creates a plain object from a BreachWatchRecord message. Also converts values to other types if specified.
         * @param message BreachWatchRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.BreachWatchRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BreachWatchRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserAuth. */
    interface IUserAuth {

        /** UserAuth uid */
        uid?: (Uint8Array|null);

        /** UserAuth loginType */
        loginType?: (Authentication.LoginType|null);

        /** UserAuth deleted */
        deleted?: (boolean|null);

        /** UserAuth iterations */
        iterations?: (number|null);

        /** UserAuth salt */
        salt?: (Uint8Array|null);

        /** UserAuth encryptedClientKey */
        encryptedClientKey?: (Uint8Array|null);

        /** UserAuth revision */
        revision?: (number|Long|null);

        /** UserAuth name */
        name?: (string|null);
    }

    /** Represents a UserAuth. */
    class UserAuth implements IUserAuth {

        /**
         * Constructs a new UserAuth.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.IUserAuth);

        /** UserAuth uid. */
        public uid: Uint8Array;

        /** UserAuth loginType. */
        public loginType: Authentication.LoginType;

        /** UserAuth deleted. */
        public deleted: boolean;

        /** UserAuth iterations. */
        public iterations: number;

        /** UserAuth salt. */
        public salt: Uint8Array;

        /** UserAuth encryptedClientKey. */
        public encryptedClientKey: Uint8Array;

        /** UserAuth revision. */
        public revision: (number|Long);

        /** UserAuth name. */
        public name: string;

        /**
         * Creates a new UserAuth instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserAuth instance
         */
        public static create(properties?: Vault.IUserAuth): Vault.UserAuth;

        /**
         * Encodes the specified UserAuth message. Does not implicitly {@link Vault.UserAuth.verify|verify} messages.
         * @param message UserAuth message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.IUserAuth, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserAuth message, length delimited. Does not implicitly {@link Vault.UserAuth.verify|verify} messages.
         * @param message UserAuth message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.IUserAuth, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserAuth message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserAuth
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.UserAuth;

        /**
         * Decodes a UserAuth message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserAuth
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.UserAuth;

        /**
         * Verifies a UserAuth message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserAuth message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserAuth
         */
        public static fromObject(object: { [k: string]: any }): Vault.UserAuth;

        /**
         * Creates a plain object from a UserAuth message. Also converts values to other types if specified.
         * @param message UserAuth
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.UserAuth, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserAuth to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BreachWatchSecurityData. */
    interface IBreachWatchSecurityData {

        /** BreachWatchSecurityData recordUid */
        recordUid?: (Uint8Array|null);

        /** BreachWatchSecurityData revision */
        revision?: (number|Long|null);
    }

    /** Represents a BreachWatchSecurityData. */
    class BreachWatchSecurityData implements IBreachWatchSecurityData {

        /**
         * Constructs a new BreachWatchSecurityData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.IBreachWatchSecurityData);

        /** BreachWatchSecurityData recordUid. */
        public recordUid: Uint8Array;

        /** BreachWatchSecurityData revision. */
        public revision: (number|Long);

        /**
         * Creates a new BreachWatchSecurityData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BreachWatchSecurityData instance
         */
        public static create(properties?: Vault.IBreachWatchSecurityData): Vault.BreachWatchSecurityData;

        /**
         * Encodes the specified BreachWatchSecurityData message. Does not implicitly {@link Vault.BreachWatchSecurityData.verify|verify} messages.
         * @param message BreachWatchSecurityData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.IBreachWatchSecurityData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BreachWatchSecurityData message, length delimited. Does not implicitly {@link Vault.BreachWatchSecurityData.verify|verify} messages.
         * @param message BreachWatchSecurityData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.IBreachWatchSecurityData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BreachWatchSecurityData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BreachWatchSecurityData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.BreachWatchSecurityData;

        /**
         * Decodes a BreachWatchSecurityData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BreachWatchSecurityData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.BreachWatchSecurityData;

        /**
         * Verifies a BreachWatchSecurityData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BreachWatchSecurityData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BreachWatchSecurityData
         */
        public static fromObject(object: { [k: string]: any }): Vault.BreachWatchSecurityData;

        /**
         * Creates a plain object from a BreachWatchSecurityData message. Also converts values to other types if specified.
         * @param message BreachWatchSecurityData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.BreachWatchSecurityData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BreachWatchSecurityData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReusedPasswords. */
    interface IReusedPasswords {

        /** ReusedPasswords count */
        count?: (number|null);

        /** ReusedPasswords revision */
        revision?: (number|Long|null);
    }

    /** Represents a ReusedPasswords. */
    class ReusedPasswords implements IReusedPasswords {

        /**
         * Constructs a new ReusedPasswords.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.IReusedPasswords);

        /** ReusedPasswords count. */
        public count: number;

        /** ReusedPasswords revision. */
        public revision: (number|Long);

        /**
         * Creates a new ReusedPasswords instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReusedPasswords instance
         */
        public static create(properties?: Vault.IReusedPasswords): Vault.ReusedPasswords;

        /**
         * Encodes the specified ReusedPasswords message. Does not implicitly {@link Vault.ReusedPasswords.verify|verify} messages.
         * @param message ReusedPasswords message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.IReusedPasswords, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReusedPasswords message, length delimited. Does not implicitly {@link Vault.ReusedPasswords.verify|verify} messages.
         * @param message ReusedPasswords message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.IReusedPasswords, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReusedPasswords message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReusedPasswords
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.ReusedPasswords;

        /**
         * Decodes a ReusedPasswords message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReusedPasswords
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.ReusedPasswords;

        /**
         * Verifies a ReusedPasswords message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReusedPasswords message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReusedPasswords
         */
        public static fromObject(object: { [k: string]: any }): Vault.ReusedPasswords;

        /**
         * Creates a plain object from a ReusedPasswords message. Also converts values to other types if specified.
         * @param message ReusedPasswords
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.ReusedPasswords, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReusedPasswords to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderRecord. */
    interface ISharedFolderRecord {

        /** SharedFolderRecord sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** SharedFolderRecord recordUid */
        recordUid?: (Uint8Array|null);

        /** SharedFolderRecord recordKey */
        recordKey?: (Uint8Array|null);

        /** SharedFolderRecord canShare */
        canShare?: (boolean|null);

        /** SharedFolderRecord canEdit */
        canEdit?: (boolean|null);

        /** SharedFolderRecord ownerAccountUid */
        ownerAccountUid?: (Uint8Array|null);

        /** SharedFolderRecord expiration */
        expiration?: (number|Long|null);

        /** SharedFolderRecord owner */
        owner?: (boolean|null);
    }

    /** Represents a SharedFolderRecord. */
    class SharedFolderRecord implements ISharedFolderRecord {

        /**
         * Constructs a new SharedFolderRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.ISharedFolderRecord);

        /** SharedFolderRecord sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** SharedFolderRecord recordUid. */
        public recordUid: Uint8Array;

        /** SharedFolderRecord recordKey. */
        public recordKey: Uint8Array;

        /** SharedFolderRecord canShare. */
        public canShare: boolean;

        /** SharedFolderRecord canEdit. */
        public canEdit: boolean;

        /** SharedFolderRecord ownerAccountUid. */
        public ownerAccountUid: Uint8Array;

        /** SharedFolderRecord expiration. */
        public expiration: (number|Long);

        /** SharedFolderRecord owner. */
        public owner: boolean;

        /**
         * Creates a new SharedFolderRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderRecord instance
         */
        public static create(properties?: Vault.ISharedFolderRecord): Vault.SharedFolderRecord;

        /**
         * Encodes the specified SharedFolderRecord message. Does not implicitly {@link Vault.SharedFolderRecord.verify|verify} messages.
         * @param message SharedFolderRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.ISharedFolderRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderRecord message, length delimited. Does not implicitly {@link Vault.SharedFolderRecord.verify|verify} messages.
         * @param message SharedFolderRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.ISharedFolderRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.SharedFolderRecord;

        /**
         * Decodes a SharedFolderRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.SharedFolderRecord;

        /**
         * Verifies a SharedFolderRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderRecord
         */
        public static fromObject(object: { [k: string]: any }): Vault.SharedFolderRecord;

        /**
         * Creates a plain object from a SharedFolderRecord message. Also converts values to other types if specified.
         * @param message SharedFolderRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.SharedFolderRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderUser. */
    interface ISharedFolderUser {

        /** SharedFolderUser sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** SharedFolderUser username */
        username?: (string|null);

        /** SharedFolderUser manageRecords */
        manageRecords?: (boolean|null);

        /** SharedFolderUser manageUsers */
        manageUsers?: (boolean|null);

        /** SharedFolderUser accountUid */
        accountUid?: (Uint8Array|null);

        /** SharedFolderUser expiration */
        expiration?: (number|Long|null);
    }

    /** Represents a SharedFolderUser. */
    class SharedFolderUser implements ISharedFolderUser {

        /**
         * Constructs a new SharedFolderUser.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.ISharedFolderUser);

        /** SharedFolderUser sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** SharedFolderUser username. */
        public username: string;

        /** SharedFolderUser manageRecords. */
        public manageRecords: boolean;

        /** SharedFolderUser manageUsers. */
        public manageUsers: boolean;

        /** SharedFolderUser accountUid. */
        public accountUid: Uint8Array;

        /** SharedFolderUser expiration. */
        public expiration: (number|Long);

        /**
         * Creates a new SharedFolderUser instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderUser instance
         */
        public static create(properties?: Vault.ISharedFolderUser): Vault.SharedFolderUser;

        /**
         * Encodes the specified SharedFolderUser message. Does not implicitly {@link Vault.SharedFolderUser.verify|verify} messages.
         * @param message SharedFolderUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.ISharedFolderUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderUser message, length delimited. Does not implicitly {@link Vault.SharedFolderUser.verify|verify} messages.
         * @param message SharedFolderUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.ISharedFolderUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderUser message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.SharedFolderUser;

        /**
         * Decodes a SharedFolderUser message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.SharedFolderUser;

        /**
         * Verifies a SharedFolderUser message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderUser message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderUser
         */
        public static fromObject(object: { [k: string]: any }): Vault.SharedFolderUser;

        /**
         * Creates a plain object from a SharedFolderUser message. Also converts values to other types if specified.
         * @param message SharedFolderUser
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.SharedFolderUser, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderUser to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SharedFolderTeam. */
    interface ISharedFolderTeam {

        /** SharedFolderTeam sharedFolderUid */
        sharedFolderUid?: (Uint8Array|null);

        /** SharedFolderTeam teamUid */
        teamUid?: (Uint8Array|null);

        /** SharedFolderTeam name */
        name?: (string|null);

        /** SharedFolderTeam manageRecords */
        manageRecords?: (boolean|null);

        /** SharedFolderTeam manageUsers */
        manageUsers?: (boolean|null);

        /** SharedFolderTeam expiration */
        expiration?: (number|Long|null);
    }

    /** Represents a SharedFolderTeam. */
    class SharedFolderTeam implements ISharedFolderTeam {

        /**
         * Constructs a new SharedFolderTeam.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.ISharedFolderTeam);

        /** SharedFolderTeam sharedFolderUid. */
        public sharedFolderUid: Uint8Array;

        /** SharedFolderTeam teamUid. */
        public teamUid: Uint8Array;

        /** SharedFolderTeam name. */
        public name: string;

        /** SharedFolderTeam manageRecords. */
        public manageRecords: boolean;

        /** SharedFolderTeam manageUsers. */
        public manageUsers: boolean;

        /** SharedFolderTeam expiration. */
        public expiration: (number|Long);

        /**
         * Creates a new SharedFolderTeam instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SharedFolderTeam instance
         */
        public static create(properties?: Vault.ISharedFolderTeam): Vault.SharedFolderTeam;

        /**
         * Encodes the specified SharedFolderTeam message. Does not implicitly {@link Vault.SharedFolderTeam.verify|verify} messages.
         * @param message SharedFolderTeam message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.ISharedFolderTeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SharedFolderTeam message, length delimited. Does not implicitly {@link Vault.SharedFolderTeam.verify|verify} messages.
         * @param message SharedFolderTeam message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.ISharedFolderTeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SharedFolderTeam message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SharedFolderTeam
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.SharedFolderTeam;

        /**
         * Decodes a SharedFolderTeam message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SharedFolderTeam
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.SharedFolderTeam;

        /**
         * Verifies a SharedFolderTeam message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SharedFolderTeam message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SharedFolderTeam
         */
        public static fromObject(object: { [k: string]: any }): Vault.SharedFolderTeam;

        /**
         * Creates a plain object from a SharedFolderTeam message. Also converts values to other types if specified.
         * @param message SharedFolderTeam
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.SharedFolderTeam, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SharedFolderTeam to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KsmChange. */
    interface IKsmChange {

        /** KsmChange appRecordUid */
        appRecordUid?: (Uint8Array|null);

        /** KsmChange detailId */
        detailId?: (Uint8Array|null);

        /** KsmChange removed */
        removed?: (boolean|null);
    }

    /** Represents a KsmChange. */
    class KsmChange implements IKsmChange {

        /**
         * Constructs a new KsmChange.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.IKsmChange);

        /** KsmChange appRecordUid. */
        public appRecordUid: Uint8Array;

        /** KsmChange detailId. */
        public detailId: Uint8Array;

        /** KsmChange removed. */
        public removed: boolean;

        /**
         * Creates a new KsmChange instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KsmChange instance
         */
        public static create(properties?: Vault.IKsmChange): Vault.KsmChange;

        /**
         * Encodes the specified KsmChange message. Does not implicitly {@link Vault.KsmChange.verify|verify} messages.
         * @param message KsmChange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.IKsmChange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KsmChange message, length delimited. Does not implicitly {@link Vault.KsmChange.verify|verify} messages.
         * @param message KsmChange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.IKsmChange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KsmChange message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KsmChange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.KsmChange;

        /**
         * Decodes a KsmChange message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KsmChange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.KsmChange;

        /**
         * Verifies a KsmChange message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KsmChange message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KsmChange
         */
        public static fromObject(object: { [k: string]: any }): Vault.KsmChange;

        /**
         * Creates a plain object from a KsmChange message. Also converts values to other types if specified.
         * @param message KsmChange
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.KsmChange, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KsmChange to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShareInvitation. */
    interface IShareInvitation {

        /** ShareInvitation username */
        username?: (string|null);
    }

    /** Represents a ShareInvitation. */
    class ShareInvitation implements IShareInvitation {

        /**
         * Constructs a new ShareInvitation.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.IShareInvitation);

        /** ShareInvitation username. */
        public username: string;

        /**
         * Creates a new ShareInvitation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShareInvitation instance
         */
        public static create(properties?: Vault.IShareInvitation): Vault.ShareInvitation;

        /**
         * Encodes the specified ShareInvitation message. Does not implicitly {@link Vault.ShareInvitation.verify|verify} messages.
         * @param message ShareInvitation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.IShareInvitation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShareInvitation message, length delimited. Does not implicitly {@link Vault.ShareInvitation.verify|verify} messages.
         * @param message ShareInvitation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.IShareInvitation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShareInvitation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShareInvitation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.ShareInvitation;

        /**
         * Decodes a ShareInvitation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShareInvitation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.ShareInvitation;

        /**
         * Verifies a ShareInvitation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShareInvitation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShareInvitation
         */
        public static fromObject(object: { [k: string]: any }): Vault.ShareInvitation;

        /**
         * Creates a plain object from a ShareInvitation message. Also converts values to other types if specified.
         * @param message ShareInvitation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.ShareInvitation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShareInvitation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a User. */
    interface IUser {

        /** User accountUid */
        accountUid?: (Uint8Array|null);

        /** User username */
        username?: (string|null);
    }

    /** Represents a User. */
    class User implements IUser {

        /**
         * Constructs a new User.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.IUser);

        /** User accountUid. */
        public accountUid: Uint8Array;

        /** User username. */
        public username: string;

        /**
         * Creates a new User instance using the specified properties.
         * @param [properties] Properties to set
         * @returns User instance
         */
        public static create(properties?: Vault.IUser): Vault.User;

        /**
         * Encodes the specified User message. Does not implicitly {@link Vault.User.verify|verify} messages.
         * @param message User message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.IUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified User message, length delimited. Does not implicitly {@link Vault.User.verify|verify} messages.
         * @param message User message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.IUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a User message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns User
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.User;

        /**
         * Decodes a User message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns User
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.User;

        /**
         * Verifies a User message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a User message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns User
         */
        public static fromObject(object: { [k: string]: any }): Vault.User;

        /**
         * Creates a plain object from a User message. Also converts values to other types if specified.
         * @param message User
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.User, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this User to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SyncDiagnostics. */
    interface ISyncDiagnostics {

        /** SyncDiagnostics continuationToken */
        continuationToken?: (Uint8Array|null);

        /** SyncDiagnostics userId */
        userId?: (number|null);

        /** SyncDiagnostics enterpriseUserId */
        enterpriseUserId?: (number|Long|null);

        /** SyncDiagnostics syncedTo */
        syncedTo?: (number|Long|null);

        /** SyncDiagnostics syncingTo */
        syncingTo?: (number|Long|null);
    }

    /** Represents a SyncDiagnostics. */
    class SyncDiagnostics implements ISyncDiagnostics {

        /**
         * Constructs a new SyncDiagnostics.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.ISyncDiagnostics);

        /** SyncDiagnostics continuationToken. */
        public continuationToken: Uint8Array;

        /** SyncDiagnostics userId. */
        public userId: number;

        /** SyncDiagnostics enterpriseUserId. */
        public enterpriseUserId: (number|Long);

        /** SyncDiagnostics syncedTo. */
        public syncedTo: (number|Long);

        /** SyncDiagnostics syncingTo. */
        public syncingTo: (number|Long);

        /**
         * Creates a new SyncDiagnostics instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SyncDiagnostics instance
         */
        public static create(properties?: Vault.ISyncDiagnostics): Vault.SyncDiagnostics;

        /**
         * Encodes the specified SyncDiagnostics message. Does not implicitly {@link Vault.SyncDiagnostics.verify|verify} messages.
         * @param message SyncDiagnostics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.ISyncDiagnostics, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SyncDiagnostics message, length delimited. Does not implicitly {@link Vault.SyncDiagnostics.verify|verify} messages.
         * @param message SyncDiagnostics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.ISyncDiagnostics, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SyncDiagnostics message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SyncDiagnostics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.SyncDiagnostics;

        /**
         * Decodes a SyncDiagnostics message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SyncDiagnostics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.SyncDiagnostics;

        /**
         * Verifies a SyncDiagnostics message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SyncDiagnostics message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SyncDiagnostics
         */
        public static fromObject(object: { [k: string]: any }): Vault.SyncDiagnostics;

        /**
         * Creates a plain object from a SyncDiagnostics message. Also converts values to other types if specified.
         * @param message SyncDiagnostics
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.SyncDiagnostics, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SyncDiagnostics to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RecordRotation. */
    interface IRecordRotation {

        /** RecordRotation recordUid */
        recordUid?: (Uint8Array|null);

        /** RecordRotation revision */
        revision?: (number|Long|null);

        /** RecordRotation configurationUid */
        configurationUid?: (Uint8Array|null);

        /** RecordRotation schedule */
        schedule?: (string|null);

        /** RecordRotation pwdComplexity */
        pwdComplexity?: (Uint8Array|null);

        /** RecordRotation disabled */
        disabled?: (boolean|null);
    }

    /** Represents a RecordRotation. */
    class RecordRotation implements IRecordRotation {

        /**
         * Constructs a new RecordRotation.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.IRecordRotation);

        /** RecordRotation recordUid. */
        public recordUid: Uint8Array;

        /** RecordRotation revision. */
        public revision: (number|Long);

        /** RecordRotation configurationUid. */
        public configurationUid: Uint8Array;

        /** RecordRotation schedule. */
        public schedule: string;

        /** RecordRotation pwdComplexity. */
        public pwdComplexity: Uint8Array;

        /** RecordRotation disabled. */
        public disabled: boolean;

        /**
         * Creates a new RecordRotation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecordRotation instance
         */
        public static create(properties?: Vault.IRecordRotation): Vault.RecordRotation;

        /**
         * Encodes the specified RecordRotation message. Does not implicitly {@link Vault.RecordRotation.verify|verify} messages.
         * @param message RecordRotation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.IRecordRotation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RecordRotation message, length delimited. Does not implicitly {@link Vault.RecordRotation.verify|verify} messages.
         * @param message RecordRotation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.IRecordRotation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RecordRotation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecordRotation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.RecordRotation;

        /**
         * Decodes a RecordRotation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecordRotation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.RecordRotation;

        /**
         * Verifies a RecordRotation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RecordRotation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RecordRotation
         */
        public static fromObject(object: { [k: string]: any }): Vault.RecordRotation;

        /**
         * Creates a plain object from a RecordRotation message. Also converts values to other types if specified.
         * @param message RecordRotation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.RecordRotation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RecordRotation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BreachWatchGetSyncDataRequest. */
    interface IBreachWatchGetSyncDataRequest {

        /** BreachWatchGetSyncDataRequest recordUids */
        recordUids?: (Uint8Array[]|null);
    }

    /** Represents a BreachWatchGetSyncDataRequest. */
    class BreachWatchGetSyncDataRequest implements IBreachWatchGetSyncDataRequest {

        /**
         * Constructs a new BreachWatchGetSyncDataRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.IBreachWatchGetSyncDataRequest);

        /** BreachWatchGetSyncDataRequest recordUids. */
        public recordUids: Uint8Array[];

        /**
         * Creates a new BreachWatchGetSyncDataRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BreachWatchGetSyncDataRequest instance
         */
        public static create(properties?: Vault.IBreachWatchGetSyncDataRequest): Vault.BreachWatchGetSyncDataRequest;

        /**
         * Encodes the specified BreachWatchGetSyncDataRequest message. Does not implicitly {@link Vault.BreachWatchGetSyncDataRequest.verify|verify} messages.
         * @param message BreachWatchGetSyncDataRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.IBreachWatchGetSyncDataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BreachWatchGetSyncDataRequest message, length delimited. Does not implicitly {@link Vault.BreachWatchGetSyncDataRequest.verify|verify} messages.
         * @param message BreachWatchGetSyncDataRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.IBreachWatchGetSyncDataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BreachWatchGetSyncDataRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BreachWatchGetSyncDataRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.BreachWatchGetSyncDataRequest;

        /**
         * Decodes a BreachWatchGetSyncDataRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BreachWatchGetSyncDataRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.BreachWatchGetSyncDataRequest;

        /**
         * Verifies a BreachWatchGetSyncDataRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BreachWatchGetSyncDataRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BreachWatchGetSyncDataRequest
         */
        public static fromObject(object: { [k: string]: any }): Vault.BreachWatchGetSyncDataRequest;

        /**
         * Creates a plain object from a BreachWatchGetSyncDataRequest message. Also converts values to other types if specified.
         * @param message BreachWatchGetSyncDataRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.BreachWatchGetSyncDataRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BreachWatchGetSyncDataRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BreachWatchGetSyncDataResponse. */
    interface IBreachWatchGetSyncDataResponse {

        /** BreachWatchGetSyncDataResponse breachWatchRecords */
        breachWatchRecords?: (Vault.IBreachWatchRecord[]|null);

        /** BreachWatchGetSyncDataResponse breachWatchSecurityData */
        breachWatchSecurityData?: (Vault.IBreachWatchSecurityData[]|null);

        /** BreachWatchGetSyncDataResponse users */
        users?: (Vault.IUser[]|null);
    }

    /** Represents a BreachWatchGetSyncDataResponse. */
    class BreachWatchGetSyncDataResponse implements IBreachWatchGetSyncDataResponse {

        /**
         * Constructs a new BreachWatchGetSyncDataResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Vault.IBreachWatchGetSyncDataResponse);

        /** BreachWatchGetSyncDataResponse breachWatchRecords. */
        public breachWatchRecords: Vault.IBreachWatchRecord[];

        /** BreachWatchGetSyncDataResponse breachWatchSecurityData. */
        public breachWatchSecurityData: Vault.IBreachWatchSecurityData[];

        /** BreachWatchGetSyncDataResponse users. */
        public users: Vault.IUser[];

        /**
         * Creates a new BreachWatchGetSyncDataResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BreachWatchGetSyncDataResponse instance
         */
        public static create(properties?: Vault.IBreachWatchGetSyncDataResponse): Vault.BreachWatchGetSyncDataResponse;

        /**
         * Encodes the specified BreachWatchGetSyncDataResponse message. Does not implicitly {@link Vault.BreachWatchGetSyncDataResponse.verify|verify} messages.
         * @param message BreachWatchGetSyncDataResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Vault.IBreachWatchGetSyncDataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BreachWatchGetSyncDataResponse message, length delimited. Does not implicitly {@link Vault.BreachWatchGetSyncDataResponse.verify|verify} messages.
         * @param message BreachWatchGetSyncDataResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Vault.IBreachWatchGetSyncDataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BreachWatchGetSyncDataResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BreachWatchGetSyncDataResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Vault.BreachWatchGetSyncDataResponse;

        /**
         * Decodes a BreachWatchGetSyncDataResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BreachWatchGetSyncDataResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Vault.BreachWatchGetSyncDataResponse;

        /**
         * Verifies a BreachWatchGetSyncDataResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BreachWatchGetSyncDataResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BreachWatchGetSyncDataResponse
         */
        public static fromObject(object: { [k: string]: any }): Vault.BreachWatchGetSyncDataResponse;

        /**
         * Creates a plain object from a BreachWatchGetSyncDataResponse message. Also converts values to other types if specified.
         * @param message BreachWatchGetSyncDataResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Vault.BreachWatchGetSyncDataResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BreachWatchGetSyncDataResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Upsell. */
export namespace Upsell {

    /** Properties of an UpsellRequest. */
    interface IUpsellRequest {

        /** UpsellRequest email */
        email?: (string|null);

        /** UpsellRequest locale */
        locale?: (string|null);

        /** UpsellRequest clientVersion */
        clientVersion?: (string|null);

        /** UpsellRequest sessionToken */
        sessionToken?: (string|null);
    }

    /** Represents an UpsellRequest. */
    class UpsellRequest implements IUpsellRequest {

        /**
         * Constructs a new UpsellRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: Upsell.IUpsellRequest);

        /** UpsellRequest email. */
        public email: string;

        /** UpsellRequest locale. */
        public locale: string;

        /** UpsellRequest clientVersion. */
        public clientVersion: string;

        /** UpsellRequest sessionToken. */
        public sessionToken: string;

        /**
         * Creates a new UpsellRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UpsellRequest instance
         */
        public static create(properties?: Upsell.IUpsellRequest): Upsell.UpsellRequest;

        /**
         * Encodes the specified UpsellRequest message. Does not implicitly {@link Upsell.UpsellRequest.verify|verify} messages.
         * @param message UpsellRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Upsell.IUpsellRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UpsellRequest message, length delimited. Does not implicitly {@link Upsell.UpsellRequest.verify|verify} messages.
         * @param message UpsellRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Upsell.IUpsellRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UpsellRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UpsellRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Upsell.UpsellRequest;

        /**
         * Decodes an UpsellRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UpsellRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Upsell.UpsellRequest;

        /**
         * Verifies an UpsellRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UpsellRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UpsellRequest
         */
        public static fromObject(object: { [k: string]: any }): Upsell.UpsellRequest;

        /**
         * Creates a plain object from an UpsellRequest message. Also converts values to other types if specified.
         * @param message UpsellRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Upsell.UpsellRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UpsellRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UpsellResponse. */
    interface IUpsellResponse {

        /** UpsellResponse UpsellBanner */
        UpsellBanner?: (Upsell.IUpsellBanner[]|null);
    }

    /** Represents an UpsellResponse. */
    class UpsellResponse implements IUpsellResponse {

        /**
         * Constructs a new UpsellResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: Upsell.IUpsellResponse);

        /** UpsellResponse UpsellBanner. */
        public UpsellBanner: Upsell.IUpsellBanner[];

        /**
         * Creates a new UpsellResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UpsellResponse instance
         */
        public static create(properties?: Upsell.IUpsellResponse): Upsell.UpsellResponse;

        /**
         * Encodes the specified UpsellResponse message. Does not implicitly {@link Upsell.UpsellResponse.verify|verify} messages.
         * @param message UpsellResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Upsell.IUpsellResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UpsellResponse message, length delimited. Does not implicitly {@link Upsell.UpsellResponse.verify|verify} messages.
         * @param message UpsellResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Upsell.IUpsellResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UpsellResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UpsellResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Upsell.UpsellResponse;

        /**
         * Decodes an UpsellResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UpsellResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Upsell.UpsellResponse;

        /**
         * Verifies an UpsellResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UpsellResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UpsellResponse
         */
        public static fromObject(object: { [k: string]: any }): Upsell.UpsellResponse;

        /**
         * Creates a plain object from an UpsellResponse message. Also converts values to other types if specified.
         * @param message UpsellResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Upsell.UpsellResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UpsellResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UpsellBanner. */
    interface IUpsellBanner {

        /** UpsellBanner bannerId */
        bannerId?: (number|null);

        /** UpsellBanner bannerOkAction */
        bannerOkAction?: (string|null);

        /** UpsellBanner bannerOkButton */
        bannerOkButton?: (string|null);

        /** UpsellBanner bannerCancelAction */
        bannerCancelAction?: (string|null);

        /** UpsellBanner bannerCancelButton */
        bannerCancelButton?: (string|null);

        /** UpsellBanner bannerMessage */
        bannerMessage?: (string|null);

        /** UpsellBanner locale */
        locale?: (string|null);
    }

    /** Represents an UpsellBanner. */
    class UpsellBanner implements IUpsellBanner {

        /**
         * Constructs a new UpsellBanner.
         * @param [properties] Properties to set
         */
        constructor(properties?: Upsell.IUpsellBanner);

        /** UpsellBanner bannerId. */
        public bannerId: number;

        /** UpsellBanner bannerOkAction. */
        public bannerOkAction: string;

        /** UpsellBanner bannerOkButton. */
        public bannerOkButton: string;

        /** UpsellBanner bannerCancelAction. */
        public bannerCancelAction: string;

        /** UpsellBanner bannerCancelButton. */
        public bannerCancelButton: string;

        /** UpsellBanner bannerMessage. */
        public bannerMessage: string;

        /** UpsellBanner locale. */
        public locale: string;

        /**
         * Creates a new UpsellBanner instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UpsellBanner instance
         */
        public static create(properties?: Upsell.IUpsellBanner): Upsell.UpsellBanner;

        /**
         * Encodes the specified UpsellBanner message. Does not implicitly {@link Upsell.UpsellBanner.verify|verify} messages.
         * @param message UpsellBanner message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Upsell.IUpsellBanner, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UpsellBanner message, length delimited. Does not implicitly {@link Upsell.UpsellBanner.verify|verify} messages.
         * @param message UpsellBanner message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Upsell.IUpsellBanner, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UpsellBanner message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UpsellBanner
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Upsell.UpsellBanner;

        /**
         * Decodes an UpsellBanner message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UpsellBanner
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Upsell.UpsellBanner;

        /**
         * Verifies an UpsellBanner message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UpsellBanner message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UpsellBanner
         */
        public static fromObject(object: { [k: string]: any }): Upsell.UpsellBanner;

        /**
         * Creates a plain object from an UpsellBanner message. Also converts values to other types if specified.
         * @param message UpsellBanner
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Upsell.UpsellBanner, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UpsellBanner to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** ClientType enum. */
    enum ClientType {
        DEFAULT_CLIENT_TYPE = 0,
        ALL = 1,
        ANDROID = 2,
        IOS = 3,
        MICROSOFT = 4,
        WEBAPP = 5
    }

    /** ClientVersion enum. */
    enum ClientVersion {
        DEFAULT_VERSION = 0,
        SUPPORTS_ALL = 1,
        BASEVERSION = 14,
        ABOVERANGE = 15
    }
}
